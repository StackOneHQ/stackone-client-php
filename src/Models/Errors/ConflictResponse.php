<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Errors;

use StackOne\client\Utils;
class ConflictResponse
{
    /**
     * HTTP status code
     *
     * @var float $statusCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('statusCode')]
    public float $statusCode;

    /**
     * Error message
     *
     * @var string $message
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('message')]
    public string $message;

    /**
     * Timestamp when the error occurred
     *
     * @var \DateTime $timestamp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('timestamp')]
    public \DateTime $timestamp;

    /**
     * @param  float  $statusCode
     * @param  string  $message
     * @param  \DateTime  $timestamp
     * @phpstan-pure
     */
    public function __construct(float $statusCode, string $message, \DateTime $timestamp)
    {
        $this->statusCode = $statusCode;
        $this->message = $message;
        $this->timestamp = $timestamp;
    }

    public function toException(): ConflictResponseThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = $this->statusCode;

        return new ConflictResponseThrowable($message, (int) $code, $this);
    }
}