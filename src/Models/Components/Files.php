<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class Files
{
    /**
     * Unique identifier
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Provider's unique identifier
     *
     * @var ?string $remoteId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteId = null;

    /**
     * The name associated with this file
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * The description of the file
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * The size of this file
     *
     * @var ?float $size
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('size')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $size = null;

    /**
     * The url of the file
     *
     * @var ?string $url
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $url = null;

    /**
     * The file format of the file
     *
     * @var ?FilesFileFormat $fileFormat
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('file_format')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\FilesFileFormat|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?FilesFileFormat $fileFormat = null;

    /**
     * The path where the file is stored
     *
     * @var ?string $path
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('path')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $path = null;

    /**
     * The user ID of owner of this file
     *
     * @var ?string $ownerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('owner_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $ownerId = null;

    /**
     * List of supported export formats
     *
     * @var ?array<string> $exportFormats
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('export_formats')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $exportFormats = null;

    /**
     * Default download format
     *
     * @var ?string $defaultDownloadFormat
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('default_download_format')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $defaultDownloadFormat = null;

    /**
     * Provider's unique identifier of the owner of this file
     *
     * @var ?string $remoteOwnerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_owner_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteOwnerId = null;

    /**
     * The parent folder ID associated with this file
     *
     * @var ?string $folderId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('folder_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $folderId = null;

    /**
     * Provider's unique identifier of the parent folder associated with this file
     *
     * @var ?string $remoteFolderId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_folder_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteFolderId = null;

    /**
     * The parent drive ID associated with this file
     *
     * @var ?string $driveId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('drive_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $driveId = null;

    /**
     * Provider's unique identifier of the parent drive associated with this file
     *
     * @var ?string $remoteDriveId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_drive_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteDriveId = null;

    /**
     * The created date of the file
     *
     * @var ?\DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $createdAt = null;

    /**
     * The last updated date of the file
     *
     * @var ?\DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $updatedAt = null;

    /**
     * Whether the file has content
     *
     * @var bool|HasContent2|null $hasContent
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('has_content')]
    #[\Speakeasy\Serializer\Annotation\Type('bool|\StackOne\client\Models\Components\HasContent2|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public bool|HasContent2|null $hasContent = null;

    /**
     * Whether the file has children
     *
     * @var bool|HasChildren2|null $hasChildren
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('has_children')]
    #[\Speakeasy\Serializer\Annotation\Type('bool|\StackOne\client\Models\Components\HasChildren2|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public bool|HasChildren2|null $hasChildren = null;

    /**
     * List of containing parent Folder IDs in descending order
     *
     * @var ?array<string> $allParentFolderIds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('all_parent_folder_ids')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $allParentFolderIds = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $remoteId
     * @param  ?string  $name
     * @param  ?string  $description
     * @param  ?float  $size
     * @param  ?string  $url
     * @param  ?FilesFileFormat  $fileFormat
     * @param  ?string  $path
     * @param  ?string  $ownerId
     * @param  ?array<string>  $exportFormats
     * @param  ?string  $defaultDownloadFormat
     * @param  ?string  $remoteOwnerId
     * @param  ?string  $folderId
     * @param  ?string  $remoteFolderId
     * @param  ?string  $driveId
     * @param  ?string  $remoteDriveId
     * @param  ?\DateTime  $createdAt
     * @param  ?\DateTime  $updatedAt
     * @param  bool|HasContent2|null  $hasContent
     * @param  bool|HasChildren2|null  $hasChildren
     * @param  ?array<string>  $allParentFolderIds
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $remoteId = null, ?string $name = null, ?string $description = null, ?float $size = null, ?string $url = null, ?FilesFileFormat $fileFormat = null, ?string $path = null, ?string $ownerId = null, ?array $exportFormats = null, ?string $defaultDownloadFormat = null, ?string $remoteOwnerId = null, ?string $folderId = null, ?string $remoteFolderId = null, ?string $driveId = null, ?string $remoteDriveId = null, ?\DateTime $createdAt = null, ?\DateTime $updatedAt = null, bool|HasContent2|null $hasContent = null, bool|HasChildren2|null $hasChildren = null, ?array $allParentFolderIds = null)
    {
        $this->id = $id;
        $this->remoteId = $remoteId;
        $this->name = $name;
        $this->description = $description;
        $this->size = $size;
        $this->url = $url;
        $this->fileFormat = $fileFormat;
        $this->path = $path;
        $this->ownerId = $ownerId;
        $this->exportFormats = $exportFormats;
        $this->defaultDownloadFormat = $defaultDownloadFormat;
        $this->remoteOwnerId = $remoteOwnerId;
        $this->folderId = $folderId;
        $this->remoteFolderId = $remoteFolderId;
        $this->driveId = $driveId;
        $this->remoteDriveId = $remoteDriveId;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->hasContent = $hasContent;
        $this->hasChildren = $hasChildren;
        $this->allParentFolderIds = $allParentFolderIds;
    }
}