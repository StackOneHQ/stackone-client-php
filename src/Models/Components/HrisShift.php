<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class HrisShift
{
    /**
     * Unique identifier
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Provider's unique identifier
     *
     * @var ?string $remoteId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteId = null;

    /**
     * The employee ID associated with this shift
     *
     * @var ?string $employeeId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('employee_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $employeeId = null;

    /**
     * The location ID where this shift takes place
     *
     * @var ?string $locationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('location_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $locationId = null;

    /**
     * The company ID associated with this shift
     *
     * @var ?string $companyId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('company_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $companyId = null;

    /**
     * The start time of the shift
     *
     * @var ?\DateTime $startTime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('start_time')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $startTime = null;

    /**
     * The end time of the shift
     *
     * @var ?\DateTime $endTime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('end_time')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $endTime = null;

    /**
     * The total break duration for this shift in ISO 8601 duration format
     *
     * @var ?string $breakDuration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('break_duration')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $breakDuration = null;

    /**
     * The status of the shift
     *
     * @var ?HrisShiftStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\HrisShiftStatus|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?HrisShiftStatus $status = null;

    /**
     * The approval status of the shift
     *
     * @var ?ApprovalStatus $approvalStatus
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('approval_status')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\ApprovalStatus|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ApprovalStatus $approvalStatus = null;

    /**
     * The breaks taken during this shift
     *
     * @var ?array<ShiftBreak> $breaks
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('breaks')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\StackOne\client\Models\Components\ShiftBreak>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $breaks = null;

    /**
     * The date and time the shift was created
     *
     * @var ?\DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $createdAt = null;

    /**
     * The date and time the shift was last updated
     *
     * @var ?\DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $updatedAt = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $remoteId
     * @param  ?string  $employeeId
     * @param  ?string  $locationId
     * @param  ?string  $companyId
     * @param  ?\DateTime  $startTime
     * @param  ?\DateTime  $endTime
     * @param  ?string  $breakDuration
     * @param  ?HrisShiftStatus  $status
     * @param  ?ApprovalStatus  $approvalStatus
     * @param  ?array<ShiftBreak>  $breaks
     * @param  ?\DateTime  $createdAt
     * @param  ?\DateTime  $updatedAt
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $remoteId = null, ?string $employeeId = null, ?string $locationId = null, ?string $companyId = null, ?\DateTime $startTime = null, ?\DateTime $endTime = null, ?string $breakDuration = null, ?HrisShiftStatus $status = null, ?ApprovalStatus $approvalStatus = null, ?array $breaks = null, ?\DateTime $createdAt = null, ?\DateTime $updatedAt = null)
    {
        $this->id = $id;
        $this->remoteId = $remoteId;
        $this->employeeId = $employeeId;
        $this->locationId = $locationId;
        $this->companyId = $companyId;
        $this->startTime = $startTime;
        $this->endTime = $endTime;
        $this->breakDuration = $breakDuration;
        $this->status = $status;
        $this->approvalStatus = $approvalStatus;
        $this->breaks = $breaks;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
    }
}