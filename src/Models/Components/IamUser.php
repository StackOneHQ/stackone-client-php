<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class IamUser
{
    /**
     * Unique identifier
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Provider's unique identifier
     *
     * @var ?string $remoteId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteId = null;

    /**
     * Custom Unified Fields configured in your StackOne project
     *
     * @var ?array<string, mixed> $unifiedCustomFields
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unified_custom_fields')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $unifiedCustomFields = null;

    /**
     * Primary email address of the user. This is generally a work email address.
     *
     * @var ?string $primaryEmailAddress
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('primary_email_address')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $primaryEmailAddress = null;

    /**
     *
     * @var ?string $firstName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('first_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $firstName = null;

    /**
     *
     * @var ?string $lastName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $lastName = null;

    /**
     * User's name which (can be a full name or display name)
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     *
     * @var ?string $username
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('username')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $username = null;

    /**
     * Indicates if the user is a bot or service user
     *
     * @var bool|IsBotUser2|null $isBotUser
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_bot_user')]
    #[\Speakeasy\Serializer\Annotation\Type('bool|\StackOne\client\Models\Components\IsBotUser2|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public bool|IsBotUser2|null $isBotUser = null;

    /**
     * List of roles the user is assigned to
     *
     * @var ?array<IamRole> $roles
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('roles')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\StackOne\client\Models\Components\IamRole>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $roles = null;

    /**
     * List of groups the user is assigned to
     *
     * @var ?array<IamGroup> $groups
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('groups')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\StackOne\client\Models\Components\IamGroup>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $groups = null;

    /**
     *
     * @var ?IamUserStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\IamUserStatus|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?IamUserStatus $status = null;

    /**
     * The date this user was last active
     *
     * @var ?\DateTime $lastActiveAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last_active_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $lastActiveAt = null;

    /**
     * The date this user last logged in
     *
     * @var ?\DateTime $lastLoginAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last_login_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $lastLoginAt = null;

    /**
     * The date the user was created
     *
     * @var ?\DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $createdAt = null;

    /**
     * The date the user was created
     *
     * @var ?\DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $updatedAt = null;

    /**
     * The list of Multi-Factor Authentication (MFA) types enabled for the user.
     *
     * @var ?array<IamMfaTypeEnum> $multiFactorEnabled
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('multi_factor_enabled')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\StackOne\client\Models\Components\IamMfaTypeEnum>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $multiFactorEnabled = null;

    /**
     * The user's avatar data. This generally contains a URL within this property's 'contents' array.
     *
     * @var ?IamUserAvatar $avatar
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('avatar')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\IamUserAvatar|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?IamUserAvatar $avatar = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $remoteId
     * @param  ?array<string, mixed>  $unifiedCustomFields
     * @param  ?string  $primaryEmailAddress
     * @param  ?string  $firstName
     * @param  ?string  $lastName
     * @param  ?string  $name
     * @param  ?string  $username
     * @param  bool|IsBotUser2|null  $isBotUser
     * @param  ?array<IamRole>  $roles
     * @param  ?array<IamGroup>  $groups
     * @param  ?IamUserStatus  $status
     * @param  ?\DateTime  $lastActiveAt
     * @param  ?\DateTime  $lastLoginAt
     * @param  ?\DateTime  $createdAt
     * @param  ?\DateTime  $updatedAt
     * @param  ?array<IamMfaTypeEnum>  $multiFactorEnabled
     * @param  ?IamUserAvatar  $avatar
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $remoteId = null, ?array $unifiedCustomFields = null, ?string $primaryEmailAddress = null, ?string $firstName = null, ?string $lastName = null, ?string $name = null, ?string $username = null, bool|IsBotUser2|null $isBotUser = null, ?array $roles = null, ?array $groups = null, ?IamUserStatus $status = null, ?\DateTime $lastActiveAt = null, ?\DateTime $lastLoginAt = null, ?\DateTime $createdAt = null, ?\DateTime $updatedAt = null, ?array $multiFactorEnabled = null, ?IamUserAvatar $avatar = null)
    {
        $this->id = $id;
        $this->remoteId = $remoteId;
        $this->unifiedCustomFields = $unifiedCustomFields;
        $this->primaryEmailAddress = $primaryEmailAddress;
        $this->firstName = $firstName;
        $this->lastName = $lastName;
        $this->name = $name;
        $this->username = $username;
        $this->isBotUser = $isBotUser;
        $this->roles = $roles;
        $this->groups = $groups;
        $this->status = $status;
        $this->lastActiveAt = $lastActiveAt;
        $this->lastLoginAt = $lastLoginAt;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->multiFactorEnabled = $multiFactorEnabled;
        $this->avatar = $avatar;
    }
}