<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class TicketingAttachmentResultData
{
    /**
     * Unique identifier
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Provider's unique identifier
     *
     * @var ?string $remoteId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteId = null;

    /**
     * The reference ticket ID the attachment belongs to
     *
     * @var ?string $ticketId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('ticket_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $ticketId = null;

    /**
     * The user who uploaded the file
     *
     * @var ?string $userId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('user_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $userId = null;

    /**
     * The name of the file
     *
     * @var ?string $fileName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('file_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $fileName = null;

    /**
     * The type of the file
     *
     * @var ?TicketingAttachmentResultFileFormat $fileFormat
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('file_format')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\TicketingAttachmentResultFileFormat|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TicketingAttachmentResultFileFormat $fileFormat = null;

    /**
     * The resource URL of the file
     *
     * @var ?string $fileUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('file_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $fileUrl = null;

    /**
     * The size of the file
     *
     * @var ?float $size
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('size')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $size = null;

    /**
     * The timestamp when the record was created
     *
     * @var ?\DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $createdAt = null;

    /**
     * The timestamp when the record was last updated
     *
     * @var ?\DateTime $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $updatedAt = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $remoteId
     * @param  ?string  $ticketId
     * @param  ?string  $userId
     * @param  ?string  $fileName
     * @param  ?TicketingAttachmentResultFileFormat  $fileFormat
     * @param  ?string  $fileUrl
     * @param  ?float  $size
     * @param  ?\DateTime  $createdAt
     * @param  ?\DateTime  $updatedAt
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $remoteId = null, ?string $ticketId = null, ?string $userId = null, ?string $fileName = null, ?TicketingAttachmentResultFileFormat $fileFormat = null, ?string $fileUrl = null, ?float $size = null, ?\DateTime $createdAt = null, ?\DateTime $updatedAt = null)
    {
        $this->id = $id;
        $this->remoteId = $remoteId;
        $this->ticketId = $ticketId;
        $this->userId = $userId;
        $this->fileName = $fileName;
        $this->fileFormat = $fileFormat;
        $this->fileUrl = $fileUrl;
        $this->size = $size;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
    }
}