<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class ProxyRequestBody
{
    /**
     * The base url of the request
     *
     * @var ?string $url
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $url = null;

    /**
     * The path of the request including any query paramters
     *
     * @var ?string $path
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('path')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $path = null;

    /**
     * The headers to send in the request
     *
     * @var ?array<string, mixed> $headers
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('headers')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $headers = null;

    /**
     * The body of the request
     *
     * @var ?array<string, mixed> $body
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('body')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $body = null;

    /**
     * The method of the request
     *
     * @var ?Method $method
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('method')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\Method|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Method $method = null;

    /**
     * @param  ?string  $url
     * @param  ?Method  $method
     * @param  ?string  $path
     * @param  ?array<string, mixed>  $headers
     * @param  ?array<string, mixed>  $body
     */
    public function __construct(?string $url = null, ?string $path = null, ?array $body = null, ?Method $method = Method::Get, ?array $headers = null)
    {
        $this->url = $url;
        $this->path = $path;
        $this->headers = $headers;
        $this->body = $body;
        $this->method = $method;
    }
}