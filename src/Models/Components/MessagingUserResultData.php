<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class MessagingUserResultData
{
    /**
     * Unique identifier
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Provider's unique identifier
     *
     * @var ?string $remoteId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteId = null;

    /**
     * Email address of the user
     *
     * @var ?string $email
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $email = null;

    /**
     * Username of the user
     *
     * @var ?string $username
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('username')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $username = null;

    /**
     * Full name of the user
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * First name of the user
     *
     * @var ?string $firstName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('first_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $firstName = null;

    /**
     * Last name of the user
     *
     * @var ?string $lastName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last_name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $lastName = null;

    /**
     * Whether the user is a bot
     *
     * @var bool|MessagingUserResultBot2|null $bot
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('bot')]
    #[\Speakeasy\Serializer\Annotation\Type('bool|\StackOne\client\Models\Components\MessagingUserResultBot2|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public bool|MessagingUserResultBot2|null $bot = null;

    /**
     * Whether the user is active
     *
     * @var bool|MessagingUserResultActive2|null $active
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('active')]
    #[\Speakeasy\Serializer\Annotation\Type('bool|\StackOne\client\Models\Components\MessagingUserResultActive2|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public bool|MessagingUserResultActive2|null $active = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $remoteId
     * @param  ?string  $email
     * @param  ?string  $username
     * @param  ?string  $name
     * @param  ?string  $firstName
     * @param  ?string  $lastName
     * @param  bool|MessagingUserResultBot2|null  $bot
     * @param  bool|MessagingUserResultActive2|null  $active
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $remoteId = null, ?string $email = null, ?string $username = null, ?string $name = null, ?string $firstName = null, ?string $lastName = null, bool|MessagingUserResultBot2|null $bot = null, bool|MessagingUserResultActive2|null $active = null)
    {
        $this->id = $id;
        $this->remoteId = $remoteId;
        $this->email = $email;
        $this->username = $username;
        $this->name = $name;
        $this->firstName = $firstName;
        $this->lastName = $lastName;
        $this->bot = $bot;
        $this->active = $active;
    }
}