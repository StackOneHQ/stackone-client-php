<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace StackOne\client\Models\Components;


class HRISDepartment
{
    /**
     * Unique identifier
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Provider's unique identifier
     *
     * @var ?string $remoteId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $remoteId = null;

    /**
     * Custom Unified Fields configured in your StackOne project
     *
     * @var ?array<string, mixed> $unifiedCustomFields
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unified_custom_fields')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $unifiedCustomFields = null;

    /**
     * The name of the group
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * The list of parent group ids of the given group
     *
     * @var ?array<string> $parentIds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('parent_ids')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $parentIds = null;

    /**
     * Provider's list of parent group remote ids of the given group
     *
     * @var ?array<string> $remoteParentIds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_parent_ids')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $remoteParentIds = null;

    /**
     * The list of group owner ids of the given group
     *
     * @var ?array<string> $ownerIds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('owner_ids')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $ownerIds = null;

    /**
     * The list of remote group owner ids of the given group
     *
     * @var ?array<string> $remoteOwnerIds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('remote_owner_ids')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $remoteOwnerIds = null;

    /**
     * The type of the department group
     *
     * @var ?HRISDepartmentType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\StackOne\client\Models\Components\HRISDepartmentType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?HRISDepartmentType $type = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $remoteId
     * @param  ?array<string, mixed>  $unifiedCustomFields
     * @param  ?string  $name
     * @param  ?array<string>  $parentIds
     * @param  ?array<string>  $remoteParentIds
     * @param  ?array<string>  $ownerIds
     * @param  ?array<string>  $remoteOwnerIds
     * @param  ?HRISDepartmentType  $type
     * @phpstan-pure
     */
    public function __construct(?string $id = null, ?string $remoteId = null, ?array $unifiedCustomFields = null, ?string $name = null, ?array $parentIds = null, ?array $remoteParentIds = null, ?array $ownerIds = null, ?array $remoteOwnerIds = null, ?HRISDepartmentType $type = null)
    {
        $this->id = $id;
        $this->remoteId = $remoteId;
        $this->unifiedCustomFields = $unifiedCustomFields;
        $this->name = $name;
        $this->parentIds = $parentIds;
        $this->remoteParentIds = $remoteParentIds;
        $this->ownerIds = $ownerIds;
        $this->remoteOwnerIds = $remoteOwnerIds;
        $this->type = $type;
    }
}