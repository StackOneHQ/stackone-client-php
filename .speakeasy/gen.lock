lockVersion: 2.0.0
id: 3759371f-a095-4585-b437-50529a0eb248
management:
  docChecksum: e152d5705ddce8e9c9e8127de624a81b
  docVersion: 1.0.0
  speakeasyVersion: 1.615.2
  generationVersion: 2.698.4
  releaseVersion: 0.26.0
  configChecksum: 4cbdad0d5dc93f12b8bef61c7765ed17
  repoURL: https://github.com/StackOneHQ/stackone-client-php.git
  installationURL: https://github.com/StackOneHQ/stackone-client-php
  published: true
features:
  php:
    constsAndDefaults: 0.2.0
    core: 3.8.10
    deprecations: 2.81.1
    examples: 2.81.6
    flattening: 2.81.1
    globalSecurity: 2.81.9
    globalServerURLs: 2.82.2
    groups: 2.81.2
    methodArguments: 0.1.0
    methodSecurity: 2.82.2
    nameOverrides: 2.81.2
    nullables: 1.0.1
    pagination: 0.1.4
    responseFormat: 0.1.0
    retries: 0.1.0
    unions: 0.1.5
generatedFiles:
  - .gitattributes
  - USAGE.md
  - composer.json
  - docs/Models/Components/ATSLocation.md
  - docs/Models/Components/ATSLocationResult.md
  - docs/Models/Components/ATSLocationsPaginated.md
  - docs/Models/Components/Account.md
  - docs/Models/Components/AccountAddress.md
  - docs/Models/Components/AccountAddressCountry.md
  - docs/Models/Components/AccountAddressLocationType.md
  - docs/Models/Components/AccountAddressLocationTypeSourceValue.md
  - docs/Models/Components/AccountAddressLocationTypeValue.md
  - docs/Models/Components/AccountAddressSourceValue.md
  - docs/Models/Components/AccountAddressSourceValue4.md
  - docs/Models/Components/AccountAddressSourceValueLocationType4.md
  - docs/Models/Components/AccountAddressValue.md
  - docs/Models/Components/AccountResult.md
  - docs/Models/Components/AccountType.md
  - docs/Models/Components/AccountingAccount.md
  - docs/Models/Components/AccountingAccountActive.md
  - docs/Models/Components/AccountingAccountActive2.md
  - docs/Models/Components/AccountingAccountResult.md
  - docs/Models/Components/AccountingAccountResultActive.md
  - docs/Models/Components/AccountingAccountResultActive2.md
  - docs/Models/Components/AccountingAccountResultData.md
  - docs/Models/Components/AccountingAccountResultSourceValue.md
  - docs/Models/Components/AccountingAccountResultSourceValue4.md
  - docs/Models/Components/AccountingAccountResultType.md
  - docs/Models/Components/AccountingAccountResultValue.md
  - docs/Models/Components/AccountingAccountSourceValue.md
  - docs/Models/Components/AccountingAccountSourceValue4.md
  - docs/Models/Components/AccountingAccountType.md
  - docs/Models/Components/AccountingAccountValue.md
  - docs/Models/Components/AccountingAccountsPaginated.md
  - docs/Models/Components/AccountingCompaniesPaginated.md
  - docs/Models/Components/AccountingCompany.md
  - docs/Models/Components/AccountingCompanyResult.md
  - docs/Models/Components/AccountingCompanyResultBaseCurrency.md
  - docs/Models/Components/AccountingCompanyResultData.md
  - docs/Models/Components/AccountingCompanyResultSourceValue.md
  - docs/Models/Components/AccountingCompanyResultSourceValue4.md
  - docs/Models/Components/AccountingCompanyResultValue.md
  - docs/Models/Components/AccountingCompanySourceValue.md
  - docs/Models/Components/AccountingCompanySourceValue4.md
  - docs/Models/Components/AccountingCompanyValue.md
  - docs/Models/Components/AccountingJournal.md
  - docs/Models/Components/AccountingJournalBatchCreateRequestDto.md
  - docs/Models/Components/AccountingJournalCreateRequestDto.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoSourceValue.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoSourceValue4.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoValue.md
  - docs/Models/Components/AccountingJournalResult.md
  - docs/Models/Components/AccountingJournalResultData.md
  - docs/Models/Components/AccountingJournalResultSourceValue.md
  - docs/Models/Components/AccountingJournalResultSourceValue4.md
  - docs/Models/Components/AccountingJournalResultStatus.md
  - docs/Models/Components/AccountingJournalResultValue.md
  - docs/Models/Components/AccountingJournalSourceValue.md
  - docs/Models/Components/AccountingJournalSourceValue4.md
  - docs/Models/Components/AccountingJournalStatus.md
  - docs/Models/Components/AccountingJournalValue.md
  - docs/Models/Components/AccountingJournalsPaginated.md
  - docs/Models/Components/AccountingTaxRate.md
  - docs/Models/Components/AccountingTaxRateActive.md
  - docs/Models/Components/AccountingTaxRateActive2.md
  - docs/Models/Components/AccountingTaxRateResult.md
  - docs/Models/Components/AccountingTaxRateResultActive.md
  - docs/Models/Components/AccountingTaxRateResultActive2.md
  - docs/Models/Components/AccountingTaxRateResultData.md
  - docs/Models/Components/AccountingTaxRatesPaginated.md
  - docs/Models/Components/AccountsPaginated.md
  - docs/Models/Components/ActionMetaItem.md
  - docs/Models/Components/ActionsMeta.md
  - docs/Models/Components/ActionsMetaPaginated.md
  - docs/Models/Components/ActionsRpcRequestDto.md
  - docs/Models/Components/ActionsRpcResponse.md
  - docs/Models/Components/Active.md
  - docs/Models/Components/Active2.md
  - docs/Models/Components/Actor.md
  - docs/Models/Components/AdditionalData.md
  - docs/Models/Components/AdditionalDataValue.md
  - docs/Models/Components/Answer.md
  - docs/Models/Components/AnswerSourceValue.md
  - docs/Models/Components/AnswerSourceValue4.md
  - docs/Models/Components/AnswerType.md
  - docs/Models/Components/AnswerValue.md
  - docs/Models/Components/Application.md
  - docs/Models/Components/ApplicationAttachment.md
  - docs/Models/Components/ApplicationAttachmentSourceValue.md
  - docs/Models/Components/ApplicationAttachmentSourceValue4.md
  - docs/Models/Components/ApplicationAttachmentValue.md
  - docs/Models/Components/ApplicationCandidate.md
  - docs/Models/Components/ApplicationChanges.md
  - docs/Models/Components/ApplicationChangesDataModel.md
  - docs/Models/Components/ApplicationChangesDataModelApplicationStatus.md
  - docs/Models/Components/ApplicationChangesDataModelSourceValue.md
  - docs/Models/Components/ApplicationChangesDataModelSourceValue4.md
  - docs/Models/Components/ApplicationChangesDataModelValue.md
  - docs/Models/Components/ApplicationChangesPaginated.md
  - docs/Models/Components/ApplicationChangesSourceValue.md
  - docs/Models/Components/ApplicationChangesSourceValue4.md
  - docs/Models/Components/ApplicationChangesValue.md
  - docs/Models/Components/ApplicationInterviewStage.md
  - docs/Models/Components/ApplicationResult.md
  - docs/Models/Components/ApplicationSourceValue.md
  - docs/Models/Components/ApplicationSourceValue4.md
  - docs/Models/Components/ApplicationStage.md
  - docs/Models/Components/ApplicationStageResult.md
  - docs/Models/Components/ApplicationStagesPaginated.md
  - docs/Models/Components/ApplicationStatus.md
  - docs/Models/Components/ApplicationValue.md
  - docs/Models/Components/ApplicationsPaginated.md
  - docs/Models/Components/ApprovalStatus.md
  - docs/Models/Components/Archived.md
  - docs/Models/Components/Archived2.md
  - docs/Models/Components/AssessmentPackage.md
  - docs/Models/Components/AssessmentPackagePaginated.md
  - docs/Models/Components/AssessmentPackageResult.md
  - docs/Models/Components/Assignment.md
  - docs/Models/Components/AssignmentLearningObjectTypeSourceValue.md
  - docs/Models/Components/AssignmentLearningObjectTypeValue.md
  - docs/Models/Components/AssignmentResult.md
  - docs/Models/Components/AssignmentResult1.md
  - docs/Models/Components/AssignmentResultSourceValue.md
  - docs/Models/Components/AssignmentResultValue.md
  - docs/Models/Components/AssignmentSourceValue.md
  - docs/Models/Components/AssignmentSourceValue4.md
  - docs/Models/Components/AssignmentSourceValueLearningObjectType4.md
  - docs/Models/Components/AssignmentSourceValueResult4.md
  - docs/Models/Components/AssignmentStatus.md
  - docs/Models/Components/AssignmentValue.md
  - docs/Models/Components/AssignmentsPaginated.md
  - docs/Models/Components/AtsCreateApplicationRequestDto.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoCandidate.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoSource.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoSourceValue4.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoValue.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDto.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplication.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoCandidate.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoJob.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoPackage.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoRequester.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValue4.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoValue.md
  - docs/Models/Components/AtsCreateBackgroundCheckPackagesRequestDto.md
  - docs/Models/Components/AtsCreateCandidateRequestDto.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDto.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplication.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoCandidate.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoJob.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoPackage.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValue4.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoValue.md
  - docs/Models/Components/AtsCreateJobRequestDto.md
  - docs/Models/Components/AtsCreateJobRequestDtoConfidential.md
  - docs/Models/Components/AtsCreateJobRequestDtoJobStatus.md
  - docs/Models/Components/AtsCreateJobRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateJobRequestDtoSourceValue4.md
  - docs/Models/Components/AtsCreateJobRequestDtoValue.md
  - docs/Models/Components/AtsCreateNotesRequestDto.md
  - docs/Models/Components/AtsCreateNotesRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateNotesRequestDtoSourceValue4.md
  - docs/Models/Components/AtsCreateNotesRequestDtoValue.md
  - docs/Models/Components/AtsCreateNotesRequestDtoVisibility.md
  - docs/Models/Components/AtsCreateOfferRequestDto.md
  - docs/Models/Components/AtsCreateOfferRequestDtoOfferStatus.md
  - docs/Models/Components/AtsCreateOfferRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateOfferRequestDtoSourceValue4.md
  - docs/Models/Components/AtsCreateOfferRequestDtoValue.md
  - docs/Models/Components/AtsDocumentApiModel.md
  - docs/Models/Components/AtsDocumentApiModelCategory.md
  - docs/Models/Components/AtsDocumentApiModelFileFormat.md
  - docs/Models/Components/AtsDocumentApiModelFileFormatSourceValue.md
  - docs/Models/Components/AtsDocumentApiModelSourceValue.md
  - docs/Models/Components/AtsDocumentApiModelSourceValue4.md
  - docs/Models/Components/AtsDocumentApiModelSourceValueFileFormat4.md
  - docs/Models/Components/AtsDocumentApiModelSourceValueType4.md
  - docs/Models/Components/AtsDocumentApiModelType.md
  - docs/Models/Components/AtsDocumentApiModelTypeSourceValue.md
  - docs/Models/Components/AtsDocumentApiModelTypeValue.md
  - docs/Models/Components/AtsDocumentApiModelValue.md
  - docs/Models/Components/AtsDocumentResult.md
  - docs/Models/Components/AtsDocumentsPaginated.md
  - docs/Models/Components/AtsDocumentsUploadRequestDto.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoCategory.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoCategoryValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoConfidential.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoConfidentialSourceValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoConfidentialValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoFileFormat.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoSourceValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoSourceValue4.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoSourceValueConfidential4.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoValue.md
  - docs/Models/Components/AtsJob.md
  - docs/Models/Components/AtsJobConfidential.md
  - docs/Models/Components/AtsJobHiringTeam.md
  - docs/Models/Components/AtsJobResult.md
  - docs/Models/Components/AtsJobSourceValue.md
  - docs/Models/Components/AtsJobSourceValue4.md
  - docs/Models/Components/AtsJobValue.md
  - docs/Models/Components/AtsJobsPaginated.md
  - docs/Models/Components/AtsMoveApplicationRequestDto.md
  - docs/Models/Components/AtsRejectApplicationRequestDto.md
  - docs/Models/Components/AtsUpdateApplicationRequestDto.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoSource.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoSourceValue4.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoValue.md
  - docs/Models/Components/AtsUpdateBackgroundCheckPackagesRequestDto.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDto.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoCandidate.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoResult.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoScore.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValue4.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoValue.md
  - docs/Models/Components/AtsUpdateCandidateRequestDto.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDto.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue4.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoValue.md
  - docs/Models/Components/AtsUpdateJobRequestDto.md
  - docs/Models/Components/AtsUpdateJobRequestDtoConfidential.md
  - docs/Models/Components/AtsUpdateJobRequestDtoJobStatus.md
  - docs/Models/Components/AtsUpdateJobRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateJobRequestDtoSourceValue4.md
  - docs/Models/Components/AtsUpdateJobRequestDtoValue.md
  - docs/Models/Components/AtsUpdateNotesRequestDto.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoSourceValue4.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoValue.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoVisibility.md
  - docs/Models/Components/Attachment.md
  - docs/Models/Components/AttachmentContentType.md
  - docs/Models/Components/AttachmentSourceValue.md
  - docs/Models/Components/AttachmentSourceValue4.md
  - docs/Models/Components/AttachmentValue.md
  - docs/Models/Components/AuthenticationMetaItem.md
  - docs/Models/Components/Author.md
  - docs/Models/Components/AuthorModel.md
  - docs/Models/Components/Avatar.md
  - docs/Models/Components/BackgroundCheckPackage.md
  - docs/Models/Components/BackgroundCheckPackagePaginated.md
  - docs/Models/Components/BackgroundCheckPackageResult.md
  - docs/Models/Components/BalanceUnit.md
  - docs/Models/Components/BaseCurrency.md
  - docs/Models/Components/BatchResultApiModel.md
  - docs/Models/Components/BenefitType.md
  - docs/Models/Components/Body.md
  - docs/Models/Components/Bot.md
  - docs/Models/Components/Bot2.md
  - docs/Models/Components/Campaign.md
  - docs/Models/Components/CampaignResult.md
  - docs/Models/Components/CampaignSourceValue.md
  - docs/Models/Components/CampaignSourceValue4.md
  - docs/Models/Components/CampaignSourceValueStatus4.md
  - docs/Models/Components/CampaignStatus.md
  - docs/Models/Components/CampaignStatusSourceValue.md
  - docs/Models/Components/CampaignStatusValue.md
  - docs/Models/Components/CampaignValue.md
  - docs/Models/Components/CampaignsPaginated.md
  - docs/Models/Components/Candidate.md
  - docs/Models/Components/CandidateEmail.md
  - docs/Models/Components/CandidateResult.md
  - docs/Models/Components/CandidatesPaginated.md
  - docs/Models/Components/Categories.md
  - docs/Models/Components/CategoriesPaginated.md
  - docs/Models/Components/Category.md
  - docs/Models/Components/CategoryActive.md
  - docs/Models/Components/CategoryActive2.md
  - docs/Models/Components/CategoryLanguage.md
  - docs/Models/Components/CategoryLanguageSourceValue.md
  - docs/Models/Components/CategoryLanguageValue.md
  - docs/Models/Components/CategoryLevelSourceValue.md
  - docs/Models/Components/CategoryLevelValue.md
  - docs/Models/Components/CategoryResult.md
  - docs/Models/Components/CategorySourceValue.md
  - docs/Models/Components/CategorySourceValue4.md
  - docs/Models/Components/CategorySourceValueLanguage4.md
  - docs/Models/Components/CategorySourceValueLevel4.md
  - docs/Models/Components/CategoryValue.md
  - docs/Models/Components/ChangeType.md
  - docs/Models/Components/ChannelsEnum.md
  - docs/Models/Components/ChannelsEnumSourceValue.md
  - docs/Models/Components/ChannelsEnumSourceValue4.md
  - docs/Models/Components/ChannelsEnumValue.md
  - docs/Models/Components/CompaniesPaginated.md
  - docs/Models/Components/Company.md
  - docs/Models/Components/CompanyResult.md
  - docs/Models/Components/Completion.md
  - docs/Models/Components/CompletionLearningObjectType.md
  - docs/Models/Components/CompletionLearningObjectTypeSourceValue.md
  - docs/Models/Components/CompletionLearningObjectTypeValue.md
  - docs/Models/Components/CompletionResult.md
  - docs/Models/Components/CompletionResult1.md
  - docs/Models/Components/CompletionSourceValue.md
  - docs/Models/Components/CompletionSourceValue4.md
  - docs/Models/Components/CompletionSourceValueLearningObjectType4.md
  - docs/Models/Components/CompletionValue.md
  - docs/Models/Components/CompletionsPaginated.md
  - docs/Models/Components/ConditionType.md
  - docs/Models/Components/Confidential.md
  - docs/Models/Components/ConnectSession.md
  - docs/Models/Components/ConnectSessionAuthenticate.md
  - docs/Models/Components/ConnectSessionCategories.md
  - docs/Models/Components/ConnectSessionCreate.md
  - docs/Models/Components/ConnectSessionMetadata.md
  - docs/Models/Components/ConnectSessionTokenAuthLink.md
  - docs/Models/Components/ConnectSessionTokenAuthLinkCategories.md
  - docs/Models/Components/ConnectSessionTokenAuthLinkMetadata.md
  - docs/Models/Components/ConnectSessionTokenAuthLinkType.md
  - docs/Models/Components/ConnectSessionType.md
  - docs/Models/Components/ConnectorsMeta.md
  - docs/Models/Components/ConnectorsMetaCategory.md
  - docs/Models/Components/Contact.md
  - docs/Models/Components/ContactResult.md
  - docs/Models/Components/ContactsPaginated.md
  - docs/Models/Components/Content.md
  - docs/Models/Components/ContentBlock.md
  - docs/Models/Components/ContentBlockResult.md
  - docs/Models/Components/ContentBlockSourceValue.md
  - docs/Models/Components/ContentBlockSourceValue4.md
  - docs/Models/Components/ContentBlockSourceValueStatus4.md
  - docs/Models/Components/ContentBlockStatus.md
  - docs/Models/Components/ContentBlockStatusSourceValue.md
  - docs/Models/Components/ContentBlockStatusValue.md
  - docs/Models/Components/ContentBlockType.md
  - docs/Models/Components/ContentBlockValue.md
  - docs/Models/Components/ContentBlocksPaginated.md
  - docs/Models/Components/ContentFileFormat.md
  - docs/Models/Components/ContentPaginated.md
  - docs/Models/Components/ContentResult.md
  - docs/Models/Components/ContentSourceValue.md
  - docs/Models/Components/ContentSourceValue4.md
  - docs/Models/Components/ContentType.md
  - docs/Models/Components/ContentValue.md
  - docs/Models/Components/ContractType.md
  - docs/Models/Components/CostCenter.md
  - docs/Models/Components/CostCenters.md
  - docs/Models/Components/Country.md
  - docs/Models/Components/CountryCodeEnum.md
  - docs/Models/Components/CountryCodeEnumValue.md
  - docs/Models/Components/Course.md
  - docs/Models/Components/CourseActive.md
  - docs/Models/Components/CourseActive2.md
  - docs/Models/Components/CoursePaginated.md
  - docs/Models/Components/CourseResult.md
  - docs/Models/Components/CreateAnswer.md
  - docs/Models/Components/CreateAnswerSourceValue.md
  - docs/Models/Components/CreateAnswerSourceValue4.md
  - docs/Models/Components/CreateAnswerType.md
  - docs/Models/Components/CreateAnswerValue.md
  - docs/Models/Components/CreateAssessmentOrderResult.md
  - docs/Models/Components/CreateBackgroundCheckOrderResult.md
  - docs/Models/Components/CreateCategoriesApiModel.md
  - docs/Models/Components/CreateCategoriesApiModelHierarchy.md
  - docs/Models/Components/CreateCategoriesApiModelLanguage.md
  - docs/Models/Components/CreateCategoriesApiModelLanguageSourceValue.md
  - docs/Models/Components/CreateCategoriesApiModelLanguageValue.md
  - docs/Models/Components/CreateCategoriesApiModelLevel.md
  - docs/Models/Components/CreateCategoriesApiModelLevelSourceValue.md
  - docs/Models/Components/CreateCategoriesApiModelLevelValue.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValue.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValue4.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValueLanguage4.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValueLevel4.md
  - docs/Models/Components/CreateCategoriesApiModelValue.md
  - docs/Models/Components/CreateCostCenterApiModel.md
  - docs/Models/Components/CreateEmploymentApiModel.md
  - docs/Models/Components/CreateEmploymentApiModelContractType.md
  - docs/Models/Components/CreateEmploymentApiModelContractTypeContractType.md
  - docs/Models/Components/CreateEmploymentApiModelContractTypeSourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelContractTypeValue.md
  - docs/Models/Components/CreateEmploymentApiModelDurationUnit.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentContractType.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentContractTypeSourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentContractTypeValue.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentType.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentTypeSourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentTypeValue.md
  - docs/Models/Components/CreateEmploymentApiModelGrade.md
  - docs/Models/Components/CreateEmploymentApiModelPayFrequency.md
  - docs/Models/Components/CreateEmploymentApiModelPayFrequencySourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelPayFrequencyValue.md
  - docs/Models/Components/CreateEmploymentApiModelPayPeriod.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValue4.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueContractType4.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueEmploymentContractType4.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueEmploymentType4.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValuePayFrequency4.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueType4.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueWorkTime4.md
  - docs/Models/Components/CreateEmploymentApiModelType.md
  - docs/Models/Components/CreateEmploymentApiModelTypeSourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelTypeType.md
  - docs/Models/Components/CreateEmploymentApiModelTypeValue.md
  - docs/Models/Components/CreateEmploymentApiModelValue.md
  - docs/Models/Components/CreateEmploymentApiModelWorkTime.md
  - docs/Models/Components/CreateEmploymentApiModelWorkTimeSourceValue.md
  - docs/Models/Components/CreateEmploymentApiModelWorkTimeValue.md
  - docs/Models/Components/CreateHRISBenefit.md
  - docs/Models/Components/CreateHRISBenefitBenefitType.md
  - docs/Models/Components/CreateHRISBenefitSourceValue.md
  - docs/Models/Components/CreateHRISBenefitSourceValue4.md
  - docs/Models/Components/CreateHRISBenefitValue.md
  - docs/Models/Components/CreateJournalLine.md
  - docs/Models/Components/CreateMessage.md
  - docs/Models/Components/CreateMessageMessageContent.md
  - docs/Models/Components/CreateMessageMessageType.md
  - docs/Models/Components/CreateMessageSourceValue.md
  - docs/Models/Components/CreateMessageSourceValue4.md
  - docs/Models/Components/CreateMessageValue.md
  - docs/Models/Components/CreatePackage.md
  - docs/Models/Components/CreateQuestionnaire.md
  - docs/Models/Components/CreateResult.md
  - docs/Models/Components/CreateResultDataApiModel.md
  - docs/Models/Components/CreateSkillsApiModel.md
  - docs/Models/Components/CreateSkillsApiModelHierarchy.md
  - docs/Models/Components/CreateSkillsApiModelLanguage.md
  - docs/Models/Components/CreateSkillsApiModelLanguageSourceValue.md
  - docs/Models/Components/CreateSkillsApiModelLanguageValue.md
  - docs/Models/Components/CreateSkillsApiModelLevel.md
  - docs/Models/Components/CreateSkillsApiModelLevelSourceValue.md
  - docs/Models/Components/CreateSkillsApiModelLevelValue.md
  - docs/Models/Components/CreateSkillsApiModelSourceValue.md
  - docs/Models/Components/CreateSkillsApiModelSourceValue4.md
  - docs/Models/Components/CreateSkillsApiModelSourceValueLanguage4.md
  - docs/Models/Components/CreateSkillsApiModelSourceValueLevel4.md
  - docs/Models/Components/CreateSkillsApiModelValue.md
  - docs/Models/Components/Credentials.md
  - docs/Models/Components/CrmCreateContactRequestDto.md
  - docs/Models/Components/CurrencyCode.md
  - docs/Models/Components/CustomFieldDefinition.md
  - docs/Models/Components/CustomFieldDefinitionResultApiModel.md
  - docs/Models/Components/CustomFieldDefinitionSourceValue.md
  - docs/Models/Components/CustomFieldDefinitionSourceValue4.md
  - docs/Models/Components/CustomFieldDefinitionType.md
  - docs/Models/Components/CustomFieldDefinitionValue.md
  - docs/Models/Components/CustomFieldDefinitionsPaginated.md
  - docs/Models/Components/CustomFieldOption.md
  - docs/Models/Components/CustomFields.md
  - docs/Models/Components/CustomFieldsValue.md
  - docs/Models/Components/CustomMappingError.md
  - docs/Models/Components/Data.md
  - docs/Models/Components/DeleteResult.md
  - docs/Models/Components/Department.md
  - docs/Models/Components/DepartmentResult.md
  - docs/Models/Components/DepartmentsPaginated.md
  - docs/Models/Components/Description.md
  - docs/Models/Components/Division.md
  - docs/Models/Components/Document.md
  - docs/Models/Components/DownloadApiModel.md
  - docs/Models/Components/DownloadHeadersApiModel.md
  - docs/Models/Components/Draft.md
  - docs/Models/Components/Draft2.md
  - docs/Models/Components/DriveResult.md
  - docs/Models/Components/Drives.md
  - docs/Models/Components/DrivesPaginated.md
  - docs/Models/Components/DurationUnit.md
  - docs/Models/Components/EmailMessageContents.md
  - docs/Models/Components/EmailMessages.md
  - docs/Models/Components/EmailMessagesSourceValue.md
  - docs/Models/Components/EmailMessagesSourceValue4.md
  - docs/Models/Components/EmailMessagesValue.md
  - docs/Models/Components/EmailTemplate.md
  - docs/Models/Components/EmailTemplateResult.md
  - docs/Models/Components/EmailTemplatesPaginated.md
  - docs/Models/Components/Employee.md
  - docs/Models/Components/EmployeeCompany.md
  - docs/Models/Components/EmployeeCountry.md
  - docs/Models/Components/EmployeeEmploymentContractTypeSourceValue.md
  - docs/Models/Components/EmployeeEmploymentContractTypeValue.md
  - docs/Models/Components/EmployeeEmploymentStatusSourceValue.md
  - docs/Models/Components/EmployeeEmploymentStatusValue.md
  - docs/Models/Components/EmployeeEmploymentTypeSourceValue.md
  - docs/Models/Components/EmployeeEmploymentTypeValue.md
  - docs/Models/Components/EmployeeEthnicitySourceValue.md
  - docs/Models/Components/EmployeeEthnicityValue.md
  - docs/Models/Components/EmployeeHomeLocationCountry.md
  - docs/Models/Components/EmployeeHomeLocationLocationType.md
  - docs/Models/Components/EmployeeHomeLocationLocationTypeSourceValue.md
  - docs/Models/Components/EmployeeHomeLocationLocationTypeValue.md
  - docs/Models/Components/EmployeeHomeLocationSourceValue.md
  - docs/Models/Components/EmployeeHomeLocationValue.md
  - docs/Models/Components/EmployeeLocationType.md
  - docs/Models/Components/EmployeeMaritalStatusSourceValue.md
  - docs/Models/Components/EmployeeMaritalStatusValue.md
  - docs/Models/Components/EmployeeNationalIdentityNumberCountry.md
  - docs/Models/Components/EmployeeNationalIdentityNumberCountrySourceValue.md
  - docs/Models/Components/EmployeeNationalIdentityNumberCountryValue.md
  - docs/Models/Components/EmployeeNationalIdentityNumberSourceValue.md
  - docs/Models/Components/EmployeeNationalIdentityNumberValue.md
  - docs/Models/Components/EmployeePreferredLanguageSourceValue.md
  - docs/Models/Components/EmployeePreferredLanguageValue.md
  - docs/Models/Components/EmployeeResult.md
  - docs/Models/Components/EmployeeSourceValue.md
  - docs/Models/Components/EmployeeSourceValue4.md
  - docs/Models/Components/EmployeeSourceValueEmploymentContractType4.md
  - docs/Models/Components/EmployeeSourceValueEmploymentStatus4.md
  - docs/Models/Components/EmployeeSourceValueEmploymentType4.md
  - docs/Models/Components/EmployeeSourceValueEthnicity4.md
  - docs/Models/Components/EmployeeSourceValueHomeLocation4.md
  - docs/Models/Components/EmployeeSourceValueHomeLocationLocationType4.md
  - docs/Models/Components/EmployeeSourceValueMaritalStatus4.md
  - docs/Models/Components/EmployeeSourceValueNationalIdentityNumber4.md
  - docs/Models/Components/EmployeeSourceValueNationalIdentityNumberCountry4.md
  - docs/Models/Components/EmployeeSourceValuePreferredLanguage4.md
  - docs/Models/Components/EmployeeSourceValueWorkLocation4.md
  - docs/Models/Components/EmployeeSourceValueWorkLocationLocationType4.md
  - docs/Models/Components/EmployeeType.md
  - docs/Models/Components/EmployeeValue.md
  - docs/Models/Components/EmployeeWorkLocationLocationTypeSourceValue.md
  - docs/Models/Components/EmployeeWorkLocationLocationTypeValue.md
  - docs/Models/Components/EmployeeWorkLocationSourceValue.md
  - docs/Models/Components/EmployeeWorkLocationValue.md
  - docs/Models/Components/EmployeesPaginated.md
  - docs/Models/Components/Employment.md
  - docs/Models/Components/EmploymentContractType.md
  - docs/Models/Components/EmploymentContractTypeContractType.md
  - docs/Models/Components/EmploymentContractTypeSourceValue.md
  - docs/Models/Components/EmploymentContractTypeValue.md
  - docs/Models/Components/EmploymentCostCenterSourceValue.md
  - docs/Models/Components/EmploymentCostCenterType.md
  - docs/Models/Components/EmploymentCostCenterValue.md
  - docs/Models/Components/EmploymentDepartment.md
  - docs/Models/Components/EmploymentDepartmentSourceValue.md
  - docs/Models/Components/EmploymentDepartmentType.md
  - docs/Models/Components/EmploymentDepartmentValue.md
  - docs/Models/Components/EmploymentDivisionSourceValue.md
  - docs/Models/Components/EmploymentDivisionType.md
  - docs/Models/Components/EmploymentDivisionValue.md
  - docs/Models/Components/EmploymentDurationUnit.md
  - docs/Models/Components/EmploymentEmploymentContractType.md
  - docs/Models/Components/EmploymentEmploymentContractTypeSourceValue.md
  - docs/Models/Components/EmploymentEmploymentContractTypeValue.md
  - docs/Models/Components/EmploymentEmploymentType.md
  - docs/Models/Components/EmploymentEmploymentTypeSourceValue.md
  - docs/Models/Components/EmploymentEmploymentTypeValue.md
  - docs/Models/Components/EmploymentManagerApiModel.md
  - docs/Models/Components/EmploymentManagerApiModelSourceValue.md
  - docs/Models/Components/EmploymentManagerApiModelSourceValue4.md
  - docs/Models/Components/EmploymentManagerApiModelValue.md
  - docs/Models/Components/EmploymentPayFrequencySourceValue.md
  - docs/Models/Components/EmploymentPayFrequencyValue.md
  - docs/Models/Components/EmploymentResult.md
  - docs/Models/Components/EmploymentSourceValue.md
  - docs/Models/Components/EmploymentSourceValue4.md
  - docs/Models/Components/EmploymentSourceValueContractType4.md
  - docs/Models/Components/EmploymentSourceValueCostCenter4.md
  - docs/Models/Components/EmploymentSourceValueDepartment4.md
  - docs/Models/Components/EmploymentSourceValueDivision4.md
  - docs/Models/Components/EmploymentSourceValueEmploymentContractType4.md
  - docs/Models/Components/EmploymentSourceValueEmploymentType4.md
  - docs/Models/Components/EmploymentSourceValuePayFrequency4.md
  - docs/Models/Components/EmploymentSourceValueType4.md
  - docs/Models/Components/EmploymentSourceValueWorkTime4.md
  - docs/Models/Components/EmploymentStatus.md
  - docs/Models/Components/EmploymentType.md
  - docs/Models/Components/EmploymentType1.md
  - docs/Models/Components/EmploymentTypeSourceValue.md
  - docs/Models/Components/EmploymentTypeType.md
  - docs/Models/Components/EmploymentTypeValue.md
  - docs/Models/Components/EmploymentValue.md
  - docs/Models/Components/EmploymentWorkTimeSourceValue.md
  - docs/Models/Components/EmploymentWorkTimeValue.md
  - docs/Models/Components/EmploymentsPaginated.md
  - docs/Models/Components/EndHalfDay.md
  - docs/Models/Components/EndHalfDay2.md
  - docs/Models/Components/EntitySkillResult.md
  - docs/Models/Components/EntitySkills.md
  - docs/Models/Components/EntitySkillsActive.md
  - docs/Models/Components/EntitySkillsActive2.md
  - docs/Models/Components/EntitySkillsCreateRequestDto.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiency.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiency.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencySourceValue.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencyValue.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoSourceValue.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoSourceValue4.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoSourceValueMinimumProficiency4.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoValue.md
  - docs/Models/Components/EntitySkillsMaximumProficiencySourceValue.md
  - docs/Models/Components/EntitySkillsMaximumProficiencyValue.md
  - docs/Models/Components/EntitySkillsMinimumProficiencySourceValue.md
  - docs/Models/Components/EntitySkillsMinimumProficiencyValue.md
  - docs/Models/Components/EntitySkillsPaginated.md
  - docs/Models/Components/EntitySkillsSourceValue.md
  - docs/Models/Components/EntitySkillsSourceValue4.md
  - docs/Models/Components/EntitySkillsSourceValueMaximumProficiency4.md
  - docs/Models/Components/EntitySkillsSourceValueMinimumProficiency4.md
  - docs/Models/Components/EntitySkillsValue.md
  - docs/Models/Components/Ethnicity.md
  - docs/Models/Components/Event.md
  - docs/Models/Components/Field.md
  - docs/Models/Components/FieldType.md
  - docs/Models/Components/File.md
  - docs/Models/Components/FileCategory.md
  - docs/Models/Components/FileFileFormat.md
  - docs/Models/Components/FileFileFormatSourceValue.md
  - docs/Models/Components/FileFormat.md
  - docs/Models/Components/FileResult.md
  - docs/Models/Components/FileSourceValue.md
  - docs/Models/Components/FileSourceValue4.md
  - docs/Models/Components/FileSourceValueFileFormat4.md
  - docs/Models/Components/FileValue.md
  - docs/Models/Components/Files.md
  - docs/Models/Components/FilesFileFormat.md
  - docs/Models/Components/FilesPaginated.md
  - docs/Models/Components/FilesSourceValue.md
  - docs/Models/Components/FilesSourceValue4.md
  - docs/Models/Components/FilesValue.md
  - docs/Models/Components/FolderResult.md
  - docs/Models/Components/Folders.md
  - docs/Models/Components/FoldersHasChildren.md
  - docs/Models/Components/FoldersHasChildren2.md
  - docs/Models/Components/FoldersHasContent.md
  - docs/Models/Components/FoldersHasContent2.md
  - docs/Models/Components/FoldersPaginated.md
  - docs/Models/Components/Four.md
  - docs/Models/Components/Gender.md
  - docs/Models/Components/Grade.md
  - docs/Models/Components/HRISBenefit.md
  - docs/Models/Components/HRISBenefitResult.md
  - docs/Models/Components/HRISBenefitSourceValue.md
  - docs/Models/Components/HRISBenefitSourceValue4.md
  - docs/Models/Components/HRISBenefitValue.md
  - docs/Models/Components/HRISBenefitsPaginated.md
  - docs/Models/Components/HRISCostCenter.md
  - docs/Models/Components/HRISCostCenterPaginated.md
  - docs/Models/Components/HRISCostCenterResult.md
  - docs/Models/Components/HRISCostCenterSourceValue.md
  - docs/Models/Components/HRISCostCenterSourceValue4.md
  - docs/Models/Components/HRISCostCenterType.md
  - docs/Models/Components/HRISCostCenterValue.md
  - docs/Models/Components/HRISDepartment.md
  - docs/Models/Components/HRISDepartmentSourceValue.md
  - docs/Models/Components/HRISDepartmentSourceValue4.md
  - docs/Models/Components/HRISDepartmentType.md
  - docs/Models/Components/HRISDepartmentValue.md
  - docs/Models/Components/HRISDepartmentsPaginated.md
  - docs/Models/Components/HRISDepartmentsResult.md
  - docs/Models/Components/HRISDivision.md
  - docs/Models/Components/HRISDivisionSourceValue.md
  - docs/Models/Components/HRISDivisionSourceValue4.md
  - docs/Models/Components/HRISDivisionType.md
  - docs/Models/Components/HRISDivisionValue.md
  - docs/Models/Components/HRISDivisionsPaginated.md
  - docs/Models/Components/HRISDivisionsResult.md
  - docs/Models/Components/HRISGroup.md
  - docs/Models/Components/HRISGroupSourceValue.md
  - docs/Models/Components/HRISGroupSourceValue4.md
  - docs/Models/Components/HRISGroupType.md
  - docs/Models/Components/HRISGroupValue.md
  - docs/Models/Components/HRISGroupsPaginated.md
  - docs/Models/Components/HRISGroupsResult.md
  - docs/Models/Components/HRISLocation.md
  - docs/Models/Components/HRISLocationCountry.md
  - docs/Models/Components/HRISLocationLocationTypeSourceValue.md
  - docs/Models/Components/HRISLocationLocationTypeValue.md
  - docs/Models/Components/HRISLocationResult.md
  - docs/Models/Components/HRISLocationSourceValue.md
  - docs/Models/Components/HRISLocationSourceValue4.md
  - docs/Models/Components/HRISLocationSourceValueLocationType4.md
  - docs/Models/Components/HRISLocationValue.md
  - docs/Models/Components/HRISLocationsPaginated.md
  - docs/Models/Components/HRISTeam.md
  - docs/Models/Components/HRISTeamSourceValue.md
  - docs/Models/Components/HRISTeamSourceValue4.md
  - docs/Models/Components/HRISTeamType.md
  - docs/Models/Components/HRISTeamValue.md
  - docs/Models/Components/HRISTeamsPaginated.md
  - docs/Models/Components/HRISTeamsResult.md
  - docs/Models/Components/HasChildren.md
  - docs/Models/Components/HasChildren2.md
  - docs/Models/Components/HasContent.md
  - docs/Models/Components/HasContent2.md
  - docs/Models/Components/Headers.md
  - docs/Models/Components/Hierarchy.md
  - docs/Models/Components/HomeLocation.md
  - docs/Models/Components/HrisBatchDocumentUploadRequestDto.md
  - docs/Models/Components/HrisCreateEmployeeRequestDto.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoAvatar.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoDurationUnit.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmployment.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeContractTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeContractTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentPayFrequencySourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentPayFrequencyValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatus.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentWorkTimeSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentWorkTimeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEthnicity.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEthnicitySourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEthnicityValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoGender.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoGrade.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocation.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationStateSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatus.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumber.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountrySourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountryValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayFrequency.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayPeriod.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguage.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValue4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmployment4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentContractType4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentContractTypeContractType4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentType4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentPayFrequency4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentStatus4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentType4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentTypeType4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentWorkTime4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEthnicity4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocation4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocationState4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueMaritalStatus4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueNationalIdentityNumber4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePreferredLanguage4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocation4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocationState4.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoState.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocation.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationStateSourceValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkTime.md
  - docs/Models/Components/HrisCreateEmploymentRequestDto.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoContractType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoContractTypeContractType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoContractTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoContractTypeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoDurationUnit.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoGrade.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayFrequency.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencySourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencyValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayPeriod.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValue4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueContractType4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentContractType4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentType4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValuePayFrequency4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueType4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueWorkTime4.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoTypeSourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoTypeType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoTypeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoWorkTime.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeSourceValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeValue.md
  - docs/Models/Components/HrisCreateTimeOffRequestDto.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDay.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDay2.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoReason.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoSourceValue.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoSourceValue4.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoSourceValueType4.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDay.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDay2.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStatus.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoType.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoTypeSourceValue.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoTypeValue.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDto.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoCategory.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoDocument.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoDocumentCategorySourceValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoDocumentSourceValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoDocumentValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoFileFormat.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedBy.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValue4.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueDocument4.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueDocumentCategory4.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueType4.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoType.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeSourceValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoValue.md
  - docs/Models/Components/HrisDocumentApiModel.md
  - docs/Models/Components/HrisDocumentApiModelCategory.md
  - docs/Models/Components/HrisDocumentApiModelFileFormat.md
  - docs/Models/Components/HrisDocumentApiModelFileFormatSourceValue.md
  - docs/Models/Components/HrisDocumentApiModelFileFormatValue.md
  - docs/Models/Components/HrisDocumentApiModelSourceValue.md
  - docs/Models/Components/HrisDocumentApiModelSourceValue4.md
  - docs/Models/Components/HrisDocumentApiModelSourceValueFileFormat4.md
  - docs/Models/Components/HrisDocumentApiModelSourceValueType4.md
  - docs/Models/Components/HrisDocumentApiModelType.md
  - docs/Models/Components/HrisDocumentApiModelTypeSourceValue.md
  - docs/Models/Components/HrisDocumentApiModelTypeValue.md
  - docs/Models/Components/HrisDocumentApiModelValue.md
  - docs/Models/Components/HrisDocumentResult.md
  - docs/Models/Components/HrisDocumentsPaginated.md
  - docs/Models/Components/HrisDocumentsUploadRequestDto.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoCategory.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoCategoryValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoConfidentialSourceValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoConfidentialValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoSourceValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoSourceValue4.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoSourceValueConfidential4.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoValue.md
  - docs/Models/Components/HrisInviteEmployeeRequestDto.md
  - docs/Models/Components/HrisJob.md
  - docs/Models/Components/HrisJobResult.md
  - docs/Models/Components/HrisJobSourceValue.md
  - docs/Models/Components/HrisJobSourceValue4.md
  - docs/Models/Components/HrisJobStatus.md
  - docs/Models/Components/HrisJobValue.md
  - docs/Models/Components/HrisJobsPaginated.md
  - docs/Models/Components/HrisShift.md
  - docs/Models/Components/HrisShiftApprovalStatusSourceValue.md
  - docs/Models/Components/HrisShiftApprovalStatusValue.md
  - docs/Models/Components/HrisShiftResult.md
  - docs/Models/Components/HrisShiftResultApprovalStatus.md
  - docs/Models/Components/HrisShiftResultData.md
  - docs/Models/Components/HrisShiftResultDataSourceValue.md
  - docs/Models/Components/HrisShiftResultDataValue.md
  - docs/Models/Components/HrisShiftResultSourceValue.md
  - docs/Models/Components/HrisShiftResultSourceValue4.md
  - docs/Models/Components/HrisShiftResultSourceValueData4.md
  - docs/Models/Components/HrisShiftResultStatus.md
  - docs/Models/Components/HrisShiftResultValue.md
  - docs/Models/Components/HrisShiftSourceValue.md
  - docs/Models/Components/HrisShiftSourceValue4.md
  - docs/Models/Components/HrisShiftSourceValueApprovalStatus4.md
  - docs/Models/Components/HrisShiftStatus.md
  - docs/Models/Components/HrisShiftValue.md
  - docs/Models/Components/HrisShiftsPaginated.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDto.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoAvatar.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoDurationUnit.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmployment.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeContractTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentPayFrequencySourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentPayFrequencyValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatus.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentWorkTimeSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentWorkTimeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEthnicity.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEthnicitySourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEthnicityValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoGender.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoGrade.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocation.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationStateSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatus.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumber.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountrySourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountryValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequency.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriod.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguage.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValue4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmployment4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentContractType4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentContractTypeContractType4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentType4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentPayFrequency4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentStatus4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentType4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentTypeType4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentWorkTime4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEthnicity4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocation4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocationState4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueMaritalStatus4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueNationalIdentityNumber4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePreferredLanguage4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocation4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocationState4.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoState.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocation.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationState.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationStateSourceValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkTime.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDto.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoContractType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoContractTypeContractType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoContractTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoDurationUnit.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoGrade.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequency.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencySourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencyValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriod.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValue4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueContractType4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentContractType4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentType4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValuePayFrequency4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueType4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueWorkTime4.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoTypeSourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoTypeType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoTypeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoWorkTime.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeSourceValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeValue.md
  - docs/Models/Components/IamGroup.md
  - docs/Models/Components/IamGroupResult.md
  - docs/Models/Components/IamGroupSourceValue.md
  - docs/Models/Components/IamGroupSourceValue4.md
  - docs/Models/Components/IamGroupType.md
  - docs/Models/Components/IamGroupValue.md
  - docs/Models/Components/IamGroupsPaginated.md
  - docs/Models/Components/IamMfaTypeEnum.md
  - docs/Models/Components/IamMfaTypeEnumSourceValue.md
  - docs/Models/Components/IamMfaTypeEnumSourceValue4.md
  - docs/Models/Components/IamMfaTypeEnumValue.md
  - docs/Models/Components/IamPermission.md
  - docs/Models/Components/IamPermissionSourceValue.md
  - docs/Models/Components/IamPermissionSourceValue4.md
  - docs/Models/Components/IamPermissionType.md
  - docs/Models/Components/IamPermissionValue.md
  - docs/Models/Components/IamPoliciesPaginated.md
  - docs/Models/Components/IamPolicy.md
  - docs/Models/Components/IamPolicyResult.md
  - docs/Models/Components/IamResource.md
  - docs/Models/Components/IamResourceSourceValue.md
  - docs/Models/Components/IamResourceSourceValue4.md
  - docs/Models/Components/IamResourceType.md
  - docs/Models/Components/IamResourceValue.md
  - docs/Models/Components/IamRole.md
  - docs/Models/Components/IamRoleResult.md
  - docs/Models/Components/IamRoleSourceValue.md
  - docs/Models/Components/IamRoleSourceValue4.md
  - docs/Models/Components/IamRoleType.md
  - docs/Models/Components/IamRoleValue.md
  - docs/Models/Components/IamRolesPaginated.md
  - docs/Models/Components/IamUpdateUserRequestDto.md
  - docs/Models/Components/IamUpdateUserRequestDtoIsBotUser.md
  - docs/Models/Components/IamUpdateUserRequestDtoIsBotUser2.md
  - docs/Models/Components/IamUpdateUserRequestDtoSourceValue.md
  - docs/Models/Components/IamUpdateUserRequestDtoSourceValue4.md
  - docs/Models/Components/IamUpdateUserRequestDtoStatus.md
  - docs/Models/Components/IamUpdateUserRequestDtoValue.md
  - docs/Models/Components/IamUser.md
  - docs/Models/Components/IamUserAvatar.md
  - docs/Models/Components/IamUserAvatarFileFormatSourceValue.md
  - docs/Models/Components/IamUserAvatarSourceValue.md
  - docs/Models/Components/IamUserAvatarValue.md
  - docs/Models/Components/IamUserCategory.md
  - docs/Models/Components/IamUserFileFormat.md
  - docs/Models/Components/IamUserResult.md
  - docs/Models/Components/IamUserSourceValue.md
  - docs/Models/Components/IamUserSourceValue4.md
  - docs/Models/Components/IamUserSourceValueAvatar4.md
  - docs/Models/Components/IamUserSourceValueAvatarFileFormat4.md
  - docs/Models/Components/IamUserStatus.md
  - docs/Models/Components/IamUserValue.md
  - docs/Models/Components/IamUsersPaginated.md
  - docs/Models/Components/Id.md
  - docs/Models/Components/Images.md
  - docs/Models/Components/InAppMessages.md
  - docs/Models/Components/InAppMessagesMessageContent.md
  - docs/Models/Components/InAppMessagesMessageType.md
  - docs/Models/Components/InAppMessagesSourceValue.md
  - docs/Models/Components/InAppMessagesSourceValue4.md
  - docs/Models/Components/InAppMessagesValue.md
  - docs/Models/Components/InAppTemplate.md
  - docs/Models/Components/InAppTemplateResult.md
  - docs/Models/Components/InAppTemplatesPaginated.md
  - docs/Models/Components/Input.md
  - docs/Models/Components/Internal.md
  - docs/Models/Components/Internal2.md
  - docs/Models/Components/Interview.md
  - docs/Models/Components/InterviewInterviewStage.md
  - docs/Models/Components/InterviewInterviewStatus.md
  - docs/Models/Components/InterviewPart.md
  - docs/Models/Components/InterviewPartSourceValue.md
  - docs/Models/Components/InterviewPartSourceValue4.md
  - docs/Models/Components/InterviewPartType.md
  - docs/Models/Components/InterviewPartValue.md
  - docs/Models/Components/InterviewSourceValue.md
  - docs/Models/Components/InterviewSourceValue4.md
  - docs/Models/Components/InterviewStage.md
  - docs/Models/Components/InterviewStageResult.md
  - docs/Models/Components/InterviewStagesPaginated.md
  - docs/Models/Components/InterviewStatus.md
  - docs/Models/Components/InterviewValue.md
  - docs/Models/Components/Interviewer.md
  - docs/Models/Components/InterviewsPaginated.md
  - docs/Models/Components/InterviewsResult.md
  - docs/Models/Components/InviteEmployeeResult.md
  - docs/Models/Components/IsBotUser.md
  - docs/Models/Components/IsBotUser2.md
  - docs/Models/Components/IsPaid.md
  - docs/Models/Components/IsPaid2.md
  - docs/Models/Components/IsRoot.md
  - docs/Models/Components/IsRoot2.md
  - docs/Models/Components/IssuedBy.md
  - docs/Models/Components/Job.md
  - docs/Models/Components/JobDescription.md
  - docs/Models/Components/JobPosting.md
  - docs/Models/Components/JobPostingCompensation.md
  - docs/Models/Components/JobPostingCompensationPayFrequency.md
  - docs/Models/Components/JobPostingCompensationPayFrequencySourceValue.md
  - docs/Models/Components/JobPostingCompensationPayFrequencyValue.md
  - docs/Models/Components/JobPostingCompensationPayPeriod.md
  - docs/Models/Components/JobPostingCompensationPayPeriodSourceValue.md
  - docs/Models/Components/JobPostingCompensationPayPeriodValue.md
  - docs/Models/Components/JobPostingCompensationSourceValue.md
  - docs/Models/Components/JobPostingCompensationSourceValue4.md
  - docs/Models/Components/JobPostingCompensationSourceValuePayFrequency4.md
  - docs/Models/Components/JobPostingCompensationSourceValuePayPeriod4.md
  - docs/Models/Components/JobPostingCompensationType.md
  - docs/Models/Components/JobPostingCompensationValue.md
  - docs/Models/Components/JobPostingContent.md
  - docs/Models/Components/JobPostingContentSection.md
  - docs/Models/Components/JobPostingContentSectionSourceValue.md
  - docs/Models/Components/JobPostingContentSectionSourceValue4.md
  - docs/Models/Components/JobPostingContentSectionType.md
  - docs/Models/Components/JobPostingContentSectionValue.md
  - docs/Models/Components/JobPostingEmploymentContractType.md
  - docs/Models/Components/JobPostingEmploymentContractTypeSourceValue.md
  - docs/Models/Components/JobPostingEmploymentContractTypeValue.md
  - docs/Models/Components/JobPostingEmploymentType.md
  - docs/Models/Components/JobPostingEmploymentTypeSourceValue.md
  - docs/Models/Components/JobPostingEmploymentTypeValue.md
  - docs/Models/Components/JobPostingLocation.md
  - docs/Models/Components/JobPostingQuestionnaire.md
  - docs/Models/Components/JobPostingQuestionnaireInternal.md
  - docs/Models/Components/JobPostingResult.md
  - docs/Models/Components/JobPostingSourceValue.md
  - docs/Models/Components/JobPostingSourceValue4.md
  - docs/Models/Components/JobPostingSourceValueEmploymentContractType4.md
  - docs/Models/Components/JobPostingSourceValueEmploymentType4.md
  - docs/Models/Components/JobPostingStatus.md
  - docs/Models/Components/JobPostingValue.md
  - docs/Models/Components/JobPostingsPaginated.md
  - docs/Models/Components/JobStatus.md
  - docs/Models/Components/JournalLine.md
  - docs/Models/Components/JournalLineCurrencyCode.md
  - docs/Models/Components/JournalLineCurrencyCodeSourceValue.md
  - docs/Models/Components/JournalLineCurrencyCodeValue.md
  - docs/Models/Components/JournalLineSourceValue.md
  - docs/Models/Components/JournalLineSourceValue4.md
  - docs/Models/Components/JournalLineSourceValueCurrencyCode4.md
  - docs/Models/Components/JournalLineValue.md
  - docs/Models/Components/JsonRpcMessageDto.md
  - docs/Models/Components/Label.md
  - docs/Models/Components/LaborType.md
  - docs/Models/Components/Language.md
  - docs/Models/Components/LanguageEnum.md
  - docs/Models/Components/LanguageEnumSourceValue.md
  - docs/Models/Components/LanguageEnumSourceValue4.md
  - docs/Models/Components/LanguageEnumValue.md
  - docs/Models/Components/LearningObjectType.md
  - docs/Models/Components/Level.md
  - docs/Models/Components/LinkedAccount.md
  - docs/Models/Components/LinkedAccountMeta.md
  - docs/Models/Components/LinkedAccountMetaCategory.md
  - docs/Models/Components/LinkedAccountType.md
  - docs/Models/Components/ListItem.md
  - docs/Models/Components/ListResult.md
  - docs/Models/Components/ListSourceValue.md
  - docs/Models/Components/ListSourceValue4.md
  - docs/Models/Components/ListT.md
  - docs/Models/Components/ListType.md
  - docs/Models/Components/ListValue.md
  - docs/Models/Components/ListsPaginated.md
  - docs/Models/Components/LmsBatchUpsertContentRequestDto.md
  - docs/Models/Components/LmsCreateAssignmentRequestDto.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoSourceValue.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoSourceValue4.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoStatus.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoValue.md
  - docs/Models/Components/LmsCreateCompletionRequestDto.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoResult.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoSourceValue.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoSourceValue4.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoValue.md
  - docs/Models/Components/LmsCreateContentRequestDto.md
  - docs/Models/Components/LmsCreateContentRequestDtoActive.md
  - docs/Models/Components/LmsCreateContentRequestDtoActive2.md
  - docs/Models/Components/LmsCreateContentRequestDtoContentType.md
  - docs/Models/Components/LmsCreateContentRequestDtoSourceValue.md
  - docs/Models/Components/LmsCreateContentRequestDtoSourceValue4.md
  - docs/Models/Components/LmsCreateContentRequestDtoValue.md
  - docs/Models/Components/LmsUpsertContentRequestDto.md
  - docs/Models/Components/LmsUpsertContentRequestDtoActive.md
  - docs/Models/Components/LmsUpsertContentRequestDtoActive2.md
  - docs/Models/Components/LmsUpsertContentRequestDtoContentType.md
  - docs/Models/Components/LmsUpsertContentRequestDtoSourceValue.md
  - docs/Models/Components/LmsUpsertContentRequestDtoSourceValue4.md
  - docs/Models/Components/LmsUpsertContentRequestDtoValue.md
  - docs/Models/Components/LmsUser.md
  - docs/Models/Components/LmsUserActive.md
  - docs/Models/Components/LmsUserActive2.md
  - docs/Models/Components/LocalizationModel.md
  - docs/Models/Components/LocalizationModelLanguage.md
  - docs/Models/Components/LocalizationModelSourceValue.md
  - docs/Models/Components/LocalizationModelSourceValue4.md
  - docs/Models/Components/LocalizationModelValue.md
  - docs/Models/Components/Location.md
  - docs/Models/Components/LocationType.md
  - docs/Models/Components/MaritalStatus.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDto.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValue.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValue4.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoType.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoValue.md
  - docs/Models/Components/MarketingCreateEmailTemplateRequestDto.md
  - docs/Models/Components/MarketingCreateInAppTemplateRequestDto.md
  - docs/Models/Components/MarketingCreatePushTemplateRequestDto.md
  - docs/Models/Components/MarketingCreateSmsTemplateRequestDto.md
  - docs/Models/Components/MarketingCreateTemplateRequestDto.md
  - docs/Models/Components/MaximumProficiency.md
  - docs/Models/Components/Message.md
  - docs/Models/Components/MessageContent.md
  - docs/Models/Components/MessageContentEmailMessageContents.md
  - docs/Models/Components/MessageContentPushMessageContents.md
  - docs/Models/Components/MessageContentSmsMessageContents.md
  - docs/Models/Components/MessageMessageContent.md
  - docs/Models/Components/MessageMessageType.md
  - docs/Models/Components/MessageSourceValue.md
  - docs/Models/Components/MessageSourceValue4.md
  - docs/Models/Components/MessageType.md
  - docs/Models/Components/MessageValue.md
  - docs/Models/Components/MessagingAttachment.md
  - docs/Models/Components/MessagingAttachmentResult.md
  - docs/Models/Components/MessagingAttachmentResultData.md
  - docs/Models/Components/MessagingAttachmentsPaginated.md
  - docs/Models/Components/MessagingConversation.md
  - docs/Models/Components/MessagingConversationResult.md
  - docs/Models/Components/MessagingConversationResultData.md
  - docs/Models/Components/MessagingConversationResultPrivate.md
  - docs/Models/Components/MessagingConversationResultPrivate2.md
  - docs/Models/Components/MessagingConversationsPaginated.md
  - docs/Models/Components/MessagingCreateConversationRequestDto.md
  - docs/Models/Components/MessagingCreateConversationRequestDtoPrivate.md
  - docs/Models/Components/MessagingCreateConversationRequestDtoPrivate2.md
  - docs/Models/Components/MessagingMessage.md
  - docs/Models/Components/MessagingMessageActive.md
  - docs/Models/Components/MessagingMessageActive2.md
  - docs/Models/Components/MessagingMessageContent.md
  - docs/Models/Components/MessagingMessageResult.md
  - docs/Models/Components/MessagingMessageResultActive.md
  - docs/Models/Components/MessagingMessageResultActive2.md
  - docs/Models/Components/MessagingMessageResultAuthor.md
  - docs/Models/Components/MessagingMessageResultContent.md
  - docs/Models/Components/MessagingMessageResultData.md
  - docs/Models/Components/MessagingMessageSendRequestDto.md
  - docs/Models/Components/MessagingMessagesPaginated.md
  - docs/Models/Components/MessagingUser.md
  - docs/Models/Components/MessagingUserActive.md
  - docs/Models/Components/MessagingUserActive2.md
  - docs/Models/Components/MessagingUserResult.md
  - docs/Models/Components/MessagingUserResultActive.md
  - docs/Models/Components/MessagingUserResultActive2.md
  - docs/Models/Components/MessagingUserResultBot.md
  - docs/Models/Components/MessagingUserResultBot2.md
  - docs/Models/Components/MessagingUserResultData.md
  - docs/Models/Components/MessagingUsersPaginated.md
  - docs/Models/Components/Metadata.md
  - docs/Models/Components/Method.md
  - docs/Models/Components/MinimumProficiency.md
  - docs/Models/Components/MoveApplicationResult.md
  - docs/Models/Components/NationalIdentityNumber.md
  - docs/Models/Components/NationalIdentityNumberApiModel.md
  - docs/Models/Components/NationalIdentityNumberApiModelCountrySourceValue.md
  - docs/Models/Components/NationalIdentityNumberApiModelCountryValue.md
  - docs/Models/Components/NationalIdentityNumberApiModelSourceValue.md
  - docs/Models/Components/NationalIdentityNumberApiModelSourceValue4.md
  - docs/Models/Components/NationalIdentityNumberApiModelSourceValueCountry4.md
  - docs/Models/Components/NationalIdentityNumberApiModelType.md
  - docs/Models/Components/NationalIdentityNumberApiModelValue.md
  - docs/Models/Components/Note.md
  - docs/Models/Components/NoteContentApiModel.md
  - docs/Models/Components/NoteResult.md
  - docs/Models/Components/NoteSourceValue.md
  - docs/Models/Components/NoteSourceValue4.md
  - docs/Models/Components/NoteValue.md
  - docs/Models/Components/NotesPaginated.md
  - docs/Models/Components/Offer.md
  - docs/Models/Components/OfferHistory.md
  - docs/Models/Components/OfferSourceValue.md
  - docs/Models/Components/OfferSourceValue4.md
  - docs/Models/Components/OfferStatus.md
  - docs/Models/Components/OfferValue.md
  - docs/Models/Components/OffersPaginated.md
  - docs/Models/Components/OffersResult.md
  - docs/Models/Components/One.md
  - docs/Models/Components/Organization.md
  - docs/Models/Components/OverallRecommendation.md
  - docs/Models/Components/Package.md
  - docs/Models/Components/Params.md
  - docs/Models/Components/ParentQuestion.md
  - docs/Models/Components/PatchAccountExternalDto.md
  - docs/Models/Components/PatchAccountExternalDtoCredentials.md
  - docs/Models/Components/PatchAccountExternalDtoMetadata.md
  - docs/Models/Components/PatchAccountExternalDtoSetupInformation.md
  - docs/Models/Components/PatchAccountExternalDtoType.md
  - docs/Models/Components/PayFrequency.md
  - docs/Models/Components/PayPeriod.md
  - docs/Models/Components/PhoneNumber.md
  - docs/Models/Components/PhoneNumberType.md
  - docs/Models/Components/PlatformLog.md
  - docs/Models/Components/PlatformLogsPaginated.md
  - docs/Models/Components/Policy.md
  - docs/Models/Components/Position.md
  - docs/Models/Components/PositionResult.md
  - docs/Models/Components/PositionSourceValue.md
  - docs/Models/Components/PositionSourceValue4.md
  - docs/Models/Components/PositionStatus.md
  - docs/Models/Components/PositionValue.md
  - docs/Models/Components/PositionsPaginated.md
  - docs/Models/Components/PreferredLanguage.md
  - docs/Models/Components/Priority.md
  - docs/Models/Components/Private2.md
  - docs/Models/Components/PrivateT.md
  - docs/Models/Components/ProviderError.md
  - docs/Models/Components/ProviderErrorApiModel.md
  - docs/Models/Components/ProviderErrorApiModelHeaders.md
  - docs/Models/Components/ProviderErrorApiModelRaw.md
  - docs/Models/Components/ProxyRequestBody.md
  - docs/Models/Components/PushMessageContents.md
  - docs/Models/Components/PushMessages.md
  - docs/Models/Components/PushMessagesMessageContent.md
  - docs/Models/Components/PushMessagesMessageType.md
  - docs/Models/Components/PushMessagesSourceValue.md
  - docs/Models/Components/PushMessagesSourceValue4.md
  - docs/Models/Components/PushMessagesValue.md
  - docs/Models/Components/PushTemplate.md
  - docs/Models/Components/PushTemplateResult.md
  - docs/Models/Components/PushTemplatesPaginated.md
  - docs/Models/Components/Question.md
  - docs/Models/Components/QuestionMultipleChoiceAnswers.md
  - docs/Models/Components/QuestionParentQuestionSourceValue.md
  - docs/Models/Components/QuestionParentQuestionValue.md
  - docs/Models/Components/QuestionRequired.md
  - docs/Models/Components/QuestionRequired2.md
  - docs/Models/Components/QuestionSourceValue.md
  - docs/Models/Components/QuestionSourceValue4.md
  - docs/Models/Components/QuestionSourceValueParentQuestion4.md
  - docs/Models/Components/QuestionType.md
  - docs/Models/Components/QuestionValue.md
  - docs/Models/Components/Questionnaire.md
  - docs/Models/Components/Raw.md
  - docs/Models/Components/RawResponse.md
  - docs/Models/Components/RawResponseResponse.md
  - docs/Models/Components/Reason.md
  - docs/Models/Components/Reference.md
  - docs/Models/Components/ReferenceActive.md
  - docs/Models/Components/ReferenceActive2.md
  - docs/Models/Components/ReferencePaginated.md
  - docs/Models/Components/ReferenceResult.md
  - docs/Models/Components/RejectApplicationResult.md
  - docs/Models/Components/RejectedReason.md
  - docs/Models/Components/RejectedReasonResult.md
  - docs/Models/Components/RejectedReasonSourceValue.md
  - docs/Models/Components/RejectedReasonSourceValue4.md
  - docs/Models/Components/RejectedReasonType.md
  - docs/Models/Components/RejectedReasonValue.md
  - docs/Models/Components/RejectedReasonsPaginated.md
  - docs/Models/Components/Request.md
  - docs/Models/Components/Requester.md
  - docs/Models/Components/Required.md
  - docs/Models/Components/Required2.md
  - docs/Models/Components/Resources.md
  - docs/Models/Components/Response.md
  - docs/Models/Components/Result.md
  - docs/Models/Components/ResultLink.md
  - docs/Models/Components/Role.md
  - docs/Models/Components/RoleType.md
  - docs/Models/Components/ScheduleType.md
  - docs/Models/Components/ScheduledInterview.md
  - docs/Models/Components/ScheduledInterviewInterviewStage.md
  - docs/Models/Components/ScheduledInterviewSourceValue.md
  - docs/Models/Components/ScheduledInterviewSourceValue4.md
  - docs/Models/Components/ScheduledInterviewValue.md
  - docs/Models/Components/ScheduledInterviewsPaginated.md
  - docs/Models/Components/ScheduledInterviewsResult.md
  - docs/Models/Components/SchemeBasic.md
  - docs/Models/Components/Score.md
  - docs/Models/Components/Scorecard.md
  - docs/Models/Components/ScorecardSection.md
  - docs/Models/Components/ScorecardsPaginated.md
  - docs/Models/Components/ScorecardsResult.md
  - docs/Models/Components/ScreeningCreateOrderRequestDto.md
  - docs/Models/Components/ScreeningOrderCandidate.md
  - docs/Models/Components/ScreeningPackage.md
  - docs/Models/Components/ScreeningPackageResult.md
  - docs/Models/Components/ScreeningPackagesPaginated.md
  - docs/Models/Components/ScreeningResult.md
  - docs/Models/Components/ScreeningResultScore.md
  - docs/Models/Components/ScreeningResultStatus.md
  - docs/Models/Components/ScreeningResultWebhook.md
  - docs/Models/Components/Secrets.md
  - docs/Models/Components/Security.md
  - docs/Models/Components/SetupInformation.md
  - docs/Models/Components/ShiftBreak.md
  - docs/Models/Components/SkillResult.md
  - docs/Models/Components/Skills.md
  - docs/Models/Components/SkillsActive.md
  - docs/Models/Components/SkillsActive2.md
  - docs/Models/Components/SkillsHierarchy.md
  - docs/Models/Components/SkillsLanguage.md
  - docs/Models/Components/SkillsLanguageSourceValue.md
  - docs/Models/Components/SkillsLanguageValue.md
  - docs/Models/Components/SkillsLevel.md
  - docs/Models/Components/SkillsLevelSourceValue.md
  - docs/Models/Components/SkillsLevelValue.md
  - docs/Models/Components/SkillsPaginated.md
  - docs/Models/Components/SkillsSourceValue.md
  - docs/Models/Components/SkillsSourceValue4.md
  - docs/Models/Components/SkillsSourceValueLanguage4.md
  - docs/Models/Components/SkillsSourceValueLevel4.md
  - docs/Models/Components/SkillsValue.md
  - docs/Models/Components/SmsMessageContents.md
  - docs/Models/Components/SmsMessages.md
  - docs/Models/Components/SmsMessagesMessageContent.md
  - docs/Models/Components/SmsMessagesMessageType.md
  - docs/Models/Components/SmsMessagesSourceValue.md
  - docs/Models/Components/SmsMessagesSourceValue4.md
  - docs/Models/Components/SmsMessagesValue.md
  - docs/Models/Components/SmsTemplate.md
  - docs/Models/Components/SmsTemplateResult.md
  - docs/Models/Components/SmsTemplatesPaginated.md
  - docs/Models/Components/SocialLink.md
  - docs/Models/Components/Source.md
  - docs/Models/Components/SourceValue.md
  - docs/Models/Components/SourceValue4.md
  - docs/Models/Components/StartHalfDay.md
  - docs/Models/Components/StartHalfDay2.md
  - docs/Models/Components/State.md
  - docs/Models/Components/Status.md
  - docs/Models/Components/StatusReason.md
  - docs/Models/Components/StepLog.md
  - docs/Models/Components/StepLogPartial.md
  - docs/Models/Components/StepLogRequest.md
  - docs/Models/Components/StepLogResponse.md
  - docs/Models/Components/StepLogUrl.md
  - docs/Models/Components/StepLogsPaginated.md
  - docs/Models/Components/Task.md
  - docs/Models/Components/TaskCommentApiModel.md
  - docs/Models/Components/TaskResult.md
  - docs/Models/Components/TaskResultData.md
  - docs/Models/Components/TaskResultDataSourceValue.md
  - docs/Models/Components/TaskResultDataValue.md
  - docs/Models/Components/TaskResultSourceValue.md
  - docs/Models/Components/TaskResultSourceValue4.md
  - docs/Models/Components/TaskResultSourceValueData4.md
  - docs/Models/Components/TaskResultStatus.md
  - docs/Models/Components/TaskResultType.md
  - docs/Models/Components/TaskResultValue.md
  - docs/Models/Components/TaskSourceValue.md
  - docs/Models/Components/TaskSourceValue4.md
  - docs/Models/Components/TaskSourceValueStatus4.md
  - docs/Models/Components/TaskStatus.md
  - docs/Models/Components/TaskStatusSourceValue.md
  - docs/Models/Components/TaskStatusValue.md
  - docs/Models/Components/TaskType.md
  - docs/Models/Components/TaskValue.md
  - docs/Models/Components/TasksPaginated.md
  - docs/Models/Components/Template.md
  - docs/Models/Components/TemplateResult.md
  - docs/Models/Components/TemplatesPaginated.md
  - docs/Models/Components/TicketingAttachment.md
  - docs/Models/Components/TicketingAttachmentFileFormat.md
  - docs/Models/Components/TicketingAttachmentResult.md
  - docs/Models/Components/TicketingAttachmentResultData.md
  - docs/Models/Components/TicketingAttachmentResultFileFormat.md
  - docs/Models/Components/TicketingAttachmentResultSourceValue.md
  - docs/Models/Components/TicketingAttachmentResultSourceValue4.md
  - docs/Models/Components/TicketingAttachmentResultValue.md
  - docs/Models/Components/TicketingAttachmentSourceValue.md
  - docs/Models/Components/TicketingAttachmentSourceValue4.md
  - docs/Models/Components/TicketingAttachmentValue.md
  - docs/Models/Components/TicketingAttachmentsPaginated.md
  - docs/Models/Components/TicketingComment.md
  - docs/Models/Components/TicketingCommentInternal.md
  - docs/Models/Components/TicketingCommentInternal2.md
  - docs/Models/Components/TicketingCommentResult.md
  - docs/Models/Components/TicketingCommentResultData.md
  - docs/Models/Components/TicketingCommentResultInternal.md
  - docs/Models/Components/TicketingCommentResultInternal2.md
  - docs/Models/Components/TicketingCommentsPaginated.md
  - docs/Models/Components/TicketingComponent.md
  - docs/Models/Components/TicketingComponentResult.md
  - docs/Models/Components/TicketingComponentResultData.md
  - docs/Models/Components/TicketingComponentsPaginated.md
  - docs/Models/Components/TicketingContent.md
  - docs/Models/Components/TicketingProject.md
  - docs/Models/Components/TicketingProjectResult.md
  - docs/Models/Components/TicketingProjectResultData.md
  - docs/Models/Components/TicketingProjectsPaginated.md
  - docs/Models/Components/TicketingReadTicket.md
  - docs/Models/Components/TicketingReadTicketSourceValue.md
  - docs/Models/Components/TicketingReadTicketSourceValue4.md
  - docs/Models/Components/TicketingReadTicketSourceValueStatus4.md
  - docs/Models/Components/TicketingReadTicketStatus.md
  - docs/Models/Components/TicketingReadTicketStatusSourceValue.md
  - docs/Models/Components/TicketingReadTicketStatusType.md
  - docs/Models/Components/TicketingReadTicketStatusValue.md
  - docs/Models/Components/TicketingReadTicketType.md
  - docs/Models/Components/TicketingReadTicketValue.md
  - docs/Models/Components/TicketingTicketCreateRequestDto.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoPriority.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoSourceValue.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoSourceValue4.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoValue.md
  - docs/Models/Components/TicketingTicketResult.md
  - docs/Models/Components/TicketingTicketResultData.md
  - docs/Models/Components/TicketingTicketResultDataSourceValue.md
  - docs/Models/Components/TicketingTicketResultDataType.md
  - docs/Models/Components/TicketingTicketResultDataValue.md
  - docs/Models/Components/TicketingTicketResultOrganization.md
  - docs/Models/Components/TicketingTicketResultPriority.md
  - docs/Models/Components/TicketingTicketResultSourceValue.md
  - docs/Models/Components/TicketingTicketResultSourceValue4.md
  - docs/Models/Components/TicketingTicketResultSourceValueData4.md
  - docs/Models/Components/TicketingTicketResultStatus.md
  - docs/Models/Components/TicketingTicketResultType.md
  - docs/Models/Components/TicketingTicketResultValue.md
  - docs/Models/Components/TicketingTicketStatus.md
  - docs/Models/Components/TicketingTicketStatusSourceValue.md
  - docs/Models/Components/TicketingTicketStatusSourceValue4.md
  - docs/Models/Components/TicketingTicketStatusType.md
  - docs/Models/Components/TicketingTicketStatusValue.md
  - docs/Models/Components/TicketingTicketStatusesPaginated.md
  - docs/Models/Components/TicketingTicketType.md
  - docs/Models/Components/TicketingTicketTypePaginated.md
  - docs/Models/Components/TicketingTicketTypeResult.md
  - docs/Models/Components/TicketingTicketTypeResultData.md
  - docs/Models/Components/TicketingTicketUpdateRequestDto.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoPriority.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoSourceValue.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoSourceValue4.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoSourceValueStatus4.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoStatus.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoStatusSourceValue.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoStatusValue.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoType.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoValue.md
  - docs/Models/Components/TicketingTicketsPaginated.md
  - docs/Models/Components/TicketingUser.md
  - docs/Models/Components/TicketingUserActive.md
  - docs/Models/Components/TicketingUserActive2.md
  - docs/Models/Components/TicketingUserResult.md
  - docs/Models/Components/TicketingUserResultActive.md
  - docs/Models/Components/TicketingUserResultActive2.md
  - docs/Models/Components/TicketingUserResultData.md
  - docs/Models/Components/TicketingUserResultSourceValue.md
  - docs/Models/Components/TicketingUserResultSourceValue4.md
  - docs/Models/Components/TicketingUserResultType.md
  - docs/Models/Components/TicketingUserResultValue.md
  - docs/Models/Components/TicketingUserSourceValue.md
  - docs/Models/Components/TicketingUserSourceValue4.md
  - docs/Models/Components/TicketingUserType.md
  - docs/Models/Components/TicketingUserValue.md
  - docs/Models/Components/TicketingUsersPaginated.md
  - docs/Models/Components/TimeEntries.md
  - docs/Models/Components/TimeEntriesActive.md
  - docs/Models/Components/TimeEntriesActive2.md
  - docs/Models/Components/TimeEntriesPaginated.md
  - docs/Models/Components/TimeEntriesResult.md
  - docs/Models/Components/TimeEntriesSourceValue.md
  - docs/Models/Components/TimeEntriesSourceValue4.md
  - docs/Models/Components/TimeEntriesStatus.md
  - docs/Models/Components/TimeEntriesValue.md
  - docs/Models/Components/TimeOff.md
  - docs/Models/Components/TimeOffBalanceResult.md
  - docs/Models/Components/TimeOffBalances.md
  - docs/Models/Components/TimeOffBalancesDurationUnit.md
  - docs/Models/Components/TimeOffBalancesPaginated.md
  - docs/Models/Components/TimeOffBalancesPolicy.md
  - docs/Models/Components/TimeOffBalancesPolicySourceValue.md
  - docs/Models/Components/TimeOffBalancesPolicyTypeSourceValue.md
  - docs/Models/Components/TimeOffBalancesPolicyTypeValue.md
  - docs/Models/Components/TimeOffBalancesPolicyValue.md
  - docs/Models/Components/TimeOffBalancesSourceValue.md
  - docs/Models/Components/TimeOffBalancesSourceValue4.md
  - docs/Models/Components/TimeOffBalancesSourceValuePolicy4.md
  - docs/Models/Components/TimeOffBalancesSourceValuePolicyType4.md
  - docs/Models/Components/TimeOffBalancesType.md
  - docs/Models/Components/TimeOffBalancesValue.md
  - docs/Models/Components/TimeOffDurationUnit.md
  - docs/Models/Components/TimeOffPaginated.md
  - docs/Models/Components/TimeOffPolicies.md
  - docs/Models/Components/TimeOffPoliciesDurationUnitSourceValue.md
  - docs/Models/Components/TimeOffPoliciesDurationUnitValue.md
  - docs/Models/Components/TimeOffPoliciesPaginated.md
  - docs/Models/Components/TimeOffPoliciesSourceValue.md
  - docs/Models/Components/TimeOffPoliciesSourceValue4.md
  - docs/Models/Components/TimeOffPoliciesSourceValueDurationUnit4.md
  - docs/Models/Components/TimeOffPoliciesType.md
  - docs/Models/Components/TimeOffPoliciesValue.md
  - docs/Models/Components/TimeOffPolicyDurationUnitSourceValue.md
  - docs/Models/Components/TimeOffPolicyDurationUnitValue.md
  - docs/Models/Components/TimeOffPolicyResult.md
  - docs/Models/Components/TimeOffPolicySourceValue.md
  - docs/Models/Components/TimeOffPolicyType.md
  - docs/Models/Components/TimeOffPolicyValue.md
  - docs/Models/Components/TimeOffReason.md
  - docs/Models/Components/TimeOffResult.md
  - docs/Models/Components/TimeOffSourceValue.md
  - docs/Models/Components/TimeOffSourceValue4.md
  - docs/Models/Components/TimeOffSourceValuePolicy4.md
  - docs/Models/Components/TimeOffSourceValuePolicyDurationUnit4.md
  - docs/Models/Components/TimeOffSourceValueType4.md
  - docs/Models/Components/TimeOffStatus.md
  - docs/Models/Components/TimeOffType.md
  - docs/Models/Components/TimeOffTypeSourceValue.md
  - docs/Models/Components/TimeOffTypeValue.md
  - docs/Models/Components/TimeOffValue.md
  - docs/Models/Components/Two.md
  - docs/Models/Components/Type.md
  - docs/Models/Components/UnifiedLogResult.md
  - docs/Models/Components/UnifiedLogs.md
  - docs/Models/Components/UnifiedLogsPaginated.md
  - docs/Models/Components/UnifiedLogsPartial.md
  - docs/Models/Components/UnifiedUploadRequestDto.md
  - docs/Models/Components/UnifiedUploadRequestDtoCategory.md
  - docs/Models/Components/UnifiedUploadRequestDtoConfidential.md
  - docs/Models/Components/UnifiedUploadRequestDtoConfidentialSourceValue.md
  - docs/Models/Components/UnifiedUploadRequestDtoConfidentialValue.md
  - docs/Models/Components/UnifiedUploadRequestDtoFileFormat.md
  - docs/Models/Components/UnifiedUploadRequestDtoSourceValue.md
  - docs/Models/Components/UnifiedUploadRequestDtoSourceValue4.md
  - docs/Models/Components/UnifiedUploadRequestDtoSourceValueConfidential4.md
  - docs/Models/Components/UnifiedUploadRequestDtoValue.md
  - docs/Models/Components/UnifiedWarningApiModel.md
  - docs/Models/Components/UpdatePackage.md
  - docs/Models/Components/UpdateResult.md
  - docs/Models/Components/UpdateTaskRequestDto.md
  - docs/Models/Components/UpdateTaskRequestDtoSourceValue.md
  - docs/Models/Components/UpdateTaskRequestDtoSourceValue4.md
  - docs/Models/Components/UpdateTaskRequestDtoStatus.md
  - docs/Models/Components/UpdateTaskRequestDtoValue.md
  - docs/Models/Components/UpsertResult.md
  - docs/Models/Components/UpsertResultDataExternalReferenceModel.md
  - docs/Models/Components/Url.md
  - docs/Models/Components/UserResult.md
  - docs/Models/Components/UsersPaginated.md
  - docs/Models/Components/Value.md
  - docs/Models/Components/Value4.md
  - docs/Models/Components/Visibility.md
  - docs/Models/Components/WorkEligibility.md
  - docs/Models/Components/WorkEligibilityCategory.md
  - docs/Models/Components/WorkEligibilityDocumentFileFormatSourceValue.md
  - docs/Models/Components/WorkEligibilityDocumentSourceValue.md
  - docs/Models/Components/WorkEligibilityDocumentValue.md
  - docs/Models/Components/WorkEligibilityFileFormat.md
  - docs/Models/Components/WorkEligibilityIssuedBySourceValue.md
  - docs/Models/Components/WorkEligibilityIssuedByValue.md
  - docs/Models/Components/WorkEligibilityPaginated.md
  - docs/Models/Components/WorkEligibilityResult.md
  - docs/Models/Components/WorkEligibilitySourceValue.md
  - docs/Models/Components/WorkEligibilitySourceValue4.md
  - docs/Models/Components/WorkEligibilitySourceValueDocument4.md
  - docs/Models/Components/WorkEligibilitySourceValueDocumentFileFormat4.md
  - docs/Models/Components/WorkEligibilitySourceValueIssuedBy4.md
  - docs/Models/Components/WorkEligibilityType.md
  - docs/Models/Components/WorkEligibilityValue.md
  - docs/Models/Components/WorkLocation.md
  - docs/Models/Components/WorkTime.md
  - docs/Models/Components/WriteResultApiModel.md
  - docs/Models/Errors/BadGatewayResponse.md
  - docs/Models/Errors/BadRequestResponse.md
  - docs/Models/Errors/ConflictResponse.md
  - docs/Models/Errors/Data.md
  - docs/Models/Errors/ForbiddenResponse.md
  - docs/Models/Errors/Headers.md
  - docs/Models/Errors/InternalServerErrorResponse.md
  - docs/Models/Errors/NotFoundResponse.md
  - docs/Models/Errors/NotImplementedResponse.md
  - docs/Models/Errors/PreconditionFailedResponse.md
  - docs/Models/Errors/RequestTimedOutResponse.md
  - docs/Models/Errors/TooManyRequestsResponse.md
  - docs/Models/Errors/UnauthorizedResponse.md
  - docs/Models/Errors/UnprocessableEntityResponse.md
  - docs/Models/Operations/AccountingBatchCreateCompanyJournalsRequest.md
  - docs/Models/Operations/AccountingBatchCreateCompanyJournalsResponse.md
  - docs/Models/Operations/AccountingCreateCompanyJournalRequest.md
  - docs/Models/Operations/AccountingCreateCompanyJournalResponse.md
  - docs/Models/Operations/AccountingGetCompanyAccountRequest.md
  - docs/Models/Operations/AccountingGetCompanyAccountResponse.md
  - docs/Models/Operations/AccountingGetCompanyJournalRequest.md
  - docs/Models/Operations/AccountingGetCompanyJournalResponse.md
  - docs/Models/Operations/AccountingGetCompanyRequest.md
  - docs/Models/Operations/AccountingGetCompanyResponse.md
  - docs/Models/Operations/AccountingGetCompanyTaxRateRequest.md
  - docs/Models/Operations/AccountingGetCompanyTaxRateResponse.md
  - docs/Models/Operations/AccountingListCompaniesQueryParamFilter.md
  - docs/Models/Operations/AccountingListCompaniesRequest.md
  - docs/Models/Operations/AccountingListCompaniesResponse.md
  - docs/Models/Operations/AccountingListCompanyAccountsQueryParamFilter.md
  - docs/Models/Operations/AccountingListCompanyAccountsRequest.md
  - docs/Models/Operations/AccountingListCompanyAccountsResponse.md
  - docs/Models/Operations/AccountingListCompanyJournalsQueryParamFilter.md
  - docs/Models/Operations/AccountingListCompanyJournalsRequest.md
  - docs/Models/Operations/AccountingListCompanyJournalsResponse.md
  - docs/Models/Operations/AccountingListCompanyTaxRatesQueryParamFilter.md
  - docs/Models/Operations/AccountingListCompanyTaxRatesRequest.md
  - docs/Models/Operations/AccountingListCompanyTaxRatesResponse.md
  - docs/Models/Operations/Active.md
  - docs/Models/Operations/AtsCreateApplicationNoteRequest.md
  - docs/Models/Operations/AtsCreateApplicationNoteResponse.md
  - docs/Models/Operations/AtsCreateApplicationRequest.md
  - docs/Models/Operations/AtsCreateApplicationResponse.md
  - docs/Models/Operations/AtsCreateBackgroundCheckPackageRequest.md
  - docs/Models/Operations/AtsCreateBackgroundCheckPackageResponse.md
  - docs/Models/Operations/AtsCreateCandidateNoteRequest.md
  - docs/Models/Operations/AtsCreateCandidateNoteResponse.md
  - docs/Models/Operations/AtsCreateCandidateRequest.md
  - docs/Models/Operations/AtsCreateCandidateResponse.md
  - docs/Models/Operations/AtsCreateJobRequest.md
  - docs/Models/Operations/AtsCreateJobResponse.md
  - docs/Models/Operations/AtsCreateOfferRequest.md
  - docs/Models/Operations/AtsCreateOfferResponse.md
  - docs/Models/Operations/AtsDeleteBackgroundCheckPackageRequest.md
  - docs/Models/Operations/AtsDeleteBackgroundCheckPackageResponse.md
  - docs/Models/Operations/AtsDownloadApplicationDocumentRequest.md
  - docs/Models/Operations/AtsDownloadApplicationDocumentResponse.md
  - docs/Models/Operations/AtsGetApplicationCustomFieldDefinitionQueryParamFilter.md
  - docs/Models/Operations/AtsGetApplicationCustomFieldDefinitionRequest.md
  - docs/Models/Operations/AtsGetApplicationCustomFieldDefinitionResponse.md
  - docs/Models/Operations/AtsGetApplicationDocumentCategoryRequest.md
  - docs/Models/Operations/AtsGetApplicationDocumentCategoryResponse.md
  - docs/Models/Operations/AtsGetApplicationDocumentRequest.md
  - docs/Models/Operations/AtsGetApplicationDocumentResponse.md
  - docs/Models/Operations/AtsGetApplicationNoteRequest.md
  - docs/Models/Operations/AtsGetApplicationNoteResponse.md
  - docs/Models/Operations/AtsGetApplicationOfferRequest.md
  - docs/Models/Operations/AtsGetApplicationOfferResponse.md
  - docs/Models/Operations/AtsGetApplicationRequest.md
  - docs/Models/Operations/AtsGetApplicationResponse.md
  - docs/Models/Operations/AtsGetApplicationScheduledInterviewRequest.md
  - docs/Models/Operations/AtsGetApplicationScheduledInterviewResponse.md
  - docs/Models/Operations/AtsGetApplicationScorecardRequest.md
  - docs/Models/Operations/AtsGetApplicationScorecardResponse.md
  - docs/Models/Operations/AtsGetApplicationStageRequest.md
  - docs/Models/Operations/AtsGetApplicationStageResponse.md
  - docs/Models/Operations/AtsGetAssessmentsPackageRequest.md
  - docs/Models/Operations/AtsGetAssessmentsPackageResponse.md
  - docs/Models/Operations/AtsGetBackgroundCheckPackageRequest.md
  - docs/Models/Operations/AtsGetBackgroundCheckPackageResponse.md
  - docs/Models/Operations/AtsGetCandidateCustomFieldDefinitionQueryParamFilter.md
  - docs/Models/Operations/AtsGetCandidateCustomFieldDefinitionRequest.md
  - docs/Models/Operations/AtsGetCandidateCustomFieldDefinitionResponse.md
  - docs/Models/Operations/AtsGetCandidateNoteRequest.md
  - docs/Models/Operations/AtsGetCandidateNoteResponse.md
  - docs/Models/Operations/AtsGetCandidateRequest.md
  - docs/Models/Operations/AtsGetCandidateResponse.md
  - docs/Models/Operations/AtsGetDepartmentRequest.md
  - docs/Models/Operations/AtsGetDepartmentResponse.md
  - docs/Models/Operations/AtsGetInterviewRequest.md
  - docs/Models/Operations/AtsGetInterviewResponse.md
  - docs/Models/Operations/AtsGetInterviewStageRequest.md
  - docs/Models/Operations/AtsGetInterviewStageResponse.md
  - docs/Models/Operations/AtsGetJobApplicationStageRequest.md
  - docs/Models/Operations/AtsGetJobApplicationStageResponse.md
  - docs/Models/Operations/AtsGetJobCustomFieldDefinitionQueryParamFilter.md
  - docs/Models/Operations/AtsGetJobCustomFieldDefinitionRequest.md
  - docs/Models/Operations/AtsGetJobCustomFieldDefinitionResponse.md
  - docs/Models/Operations/AtsGetJobPostingRequest.md
  - docs/Models/Operations/AtsGetJobPostingResponse.md
  - docs/Models/Operations/AtsGetJobRequest.md
  - docs/Models/Operations/AtsGetJobResponse.md
  - docs/Models/Operations/AtsGetListRequest.md
  - docs/Models/Operations/AtsGetListResponse.md
  - docs/Models/Operations/AtsGetLocationRequest.md
  - docs/Models/Operations/AtsGetLocationResponse.md
  - docs/Models/Operations/AtsGetOfferRequest.md
  - docs/Models/Operations/AtsGetOfferResponse.md
  - docs/Models/Operations/AtsGetRejectedReasonRequest.md
  - docs/Models/Operations/AtsGetRejectedReasonResponse.md
  - docs/Models/Operations/AtsGetUserRequest.md
  - docs/Models/Operations/AtsGetUserResponse.md
  - docs/Models/Operations/AtsListApplicationChangesQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationChangesRequest.md
  - docs/Models/Operations/AtsListApplicationChangesResponse.md
  - docs/Models/Operations/AtsListApplicationCustomFieldDefinitionsQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationCustomFieldDefinitionsRequest.md
  - docs/Models/Operations/AtsListApplicationCustomFieldDefinitionsResponse.md
  - docs/Models/Operations/AtsListApplicationDocumentCategoriesQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationDocumentCategoriesRequest.md
  - docs/Models/Operations/AtsListApplicationDocumentCategoriesResponse.md
  - docs/Models/Operations/AtsListApplicationDocumentsQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationDocumentsRequest.md
  - docs/Models/Operations/AtsListApplicationDocumentsResponse.md
  - docs/Models/Operations/AtsListApplicationNotesQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationNotesRequest.md
  - docs/Models/Operations/AtsListApplicationNotesResponse.md
  - docs/Models/Operations/AtsListApplicationScorecardsQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationScorecardsRequest.md
  - docs/Models/Operations/AtsListApplicationScorecardsResponse.md
  - docs/Models/Operations/AtsListApplicationStagesQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationStagesRequest.md
  - docs/Models/Operations/AtsListApplicationStagesResponse.md
  - docs/Models/Operations/AtsListApplicationsOffersQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationsOffersRequest.md
  - docs/Models/Operations/AtsListApplicationsOffersResponse.md
  - docs/Models/Operations/AtsListApplicationsQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationsRequest.md
  - docs/Models/Operations/AtsListApplicationsResponse.md
  - docs/Models/Operations/AtsListApplicationsScheduledInterviewsQueryParamFilter.md
  - docs/Models/Operations/AtsListApplicationsScheduledInterviewsRequest.md
  - docs/Models/Operations/AtsListApplicationsScheduledInterviewsResponse.md
  - docs/Models/Operations/AtsListAssessmentsPackagesQueryParamFilter.md
  - docs/Models/Operations/AtsListAssessmentsPackagesRequest.md
  - docs/Models/Operations/AtsListAssessmentsPackagesResponse.md
  - docs/Models/Operations/AtsListBackgroundCheckPackagesQueryParamFilter.md
  - docs/Models/Operations/AtsListBackgroundCheckPackagesRequest.md
  - docs/Models/Operations/AtsListBackgroundCheckPackagesResponse.md
  - docs/Models/Operations/AtsListCandidateCustomFieldDefinitionsQueryParamFilter.md
  - docs/Models/Operations/AtsListCandidateCustomFieldDefinitionsRequest.md
  - docs/Models/Operations/AtsListCandidateCustomFieldDefinitionsResponse.md
  - docs/Models/Operations/AtsListCandidateNotesQueryParamFilter.md
  - docs/Models/Operations/AtsListCandidateNotesRequest.md
  - docs/Models/Operations/AtsListCandidateNotesResponse.md
  - docs/Models/Operations/AtsListCandidatesQueryParamFilter.md
  - docs/Models/Operations/AtsListCandidatesRequest.md
  - docs/Models/Operations/AtsListCandidatesResponse.md
  - docs/Models/Operations/AtsListDepartmentsQueryParamFilter.md
  - docs/Models/Operations/AtsListDepartmentsRequest.md
  - docs/Models/Operations/AtsListDepartmentsResponse.md
  - docs/Models/Operations/AtsListInterviewStagesQueryParamFilter.md
  - docs/Models/Operations/AtsListInterviewStagesRequest.md
  - docs/Models/Operations/AtsListInterviewStagesResponse.md
  - docs/Models/Operations/AtsListInterviewsQueryParamFilter.md
  - docs/Models/Operations/AtsListInterviewsRequest.md
  - docs/Models/Operations/AtsListInterviewsResponse.md
  - docs/Models/Operations/AtsListJobApplicationStagesQueryParamFilter.md
  - docs/Models/Operations/AtsListJobApplicationStagesRequest.md
  - docs/Models/Operations/AtsListJobApplicationStagesResponse.md
  - docs/Models/Operations/AtsListJobCustomFieldDefinitionsQueryParamFilter.md
  - docs/Models/Operations/AtsListJobCustomFieldDefinitionsRequest.md
  - docs/Models/Operations/AtsListJobCustomFieldDefinitionsResponse.md
  - docs/Models/Operations/AtsListJobPostingsQueryParamFilter.md
  - docs/Models/Operations/AtsListJobPostingsRequest.md
  - docs/Models/Operations/AtsListJobPostingsResponse.md
  - docs/Models/Operations/AtsListJobsQueryParamFilter.md
  - docs/Models/Operations/AtsListJobsQueryParamStatus.md
  - docs/Models/Operations/AtsListJobsRequest.md
  - docs/Models/Operations/AtsListJobsResponse.md
  - docs/Models/Operations/AtsListListsQueryParamFilter.md
  - docs/Models/Operations/AtsListListsRequest.md
  - docs/Models/Operations/AtsListListsResponse.md
  - docs/Models/Operations/AtsListLocationsQueryParamFilter.md
  - docs/Models/Operations/AtsListLocationsRequest.md
  - docs/Models/Operations/AtsListLocationsResponse.md
  - docs/Models/Operations/AtsListOffersQueryParamFilter.md
  - docs/Models/Operations/AtsListOffersRequest.md
  - docs/Models/Operations/AtsListOffersResponse.md
  - docs/Models/Operations/AtsListRejectedReasonsQueryParamFilter.md
  - docs/Models/Operations/AtsListRejectedReasonsRequest.md
  - docs/Models/Operations/AtsListRejectedReasonsResponse.md
  - docs/Models/Operations/AtsListUsersQueryParamFilter.md
  - docs/Models/Operations/AtsListUsersRequest.md
  - docs/Models/Operations/AtsListUsersResponse.md
  - docs/Models/Operations/AtsMoveApplicationRequest.md
  - docs/Models/Operations/AtsMoveApplicationResponse.md
  - docs/Models/Operations/AtsOrderAssessmentsRequestRequest.md
  - docs/Models/Operations/AtsOrderAssessmentsRequestResponse.md
  - docs/Models/Operations/AtsOrderBackgroundCheckRequestRequest.md
  - docs/Models/Operations/AtsOrderBackgroundCheckRequestResponse.md
  - docs/Models/Operations/AtsRejectApplicationRequest.md
  - docs/Models/Operations/AtsRejectApplicationResponse.md
  - docs/Models/Operations/AtsUpdateApplicationNoteRequest.md
  - docs/Models/Operations/AtsUpdateApplicationNoteResponse.md
  - docs/Models/Operations/AtsUpdateApplicationRequest.md
  - docs/Models/Operations/AtsUpdateApplicationResponse.md
  - docs/Models/Operations/AtsUpdateAssessmentsResultRequest.md
  - docs/Models/Operations/AtsUpdateAssessmentsResultResponse.md
  - docs/Models/Operations/AtsUpdateBackgroundCheckPackageRequest.md
  - docs/Models/Operations/AtsUpdateBackgroundCheckPackageResponse.md
  - docs/Models/Operations/AtsUpdateBackgroundCheckResultRequest.md
  - docs/Models/Operations/AtsUpdateBackgroundCheckResultResponse.md
  - docs/Models/Operations/AtsUpdateCandidateRequest.md
  - docs/Models/Operations/AtsUpdateCandidateResponse.md
  - docs/Models/Operations/AtsUpdateJobRequest.md
  - docs/Models/Operations/AtsUpdateJobResponse.md
  - docs/Models/Operations/AtsUploadApplicationDocumentRequest.md
  - docs/Models/Operations/AtsUploadApplicationDocumentResponse.md
  - docs/Models/Operations/ChangeType.md
  - docs/Models/Operations/CrmCreateContactRequest.md
  - docs/Models/Operations/CrmCreateContactResponse.md
  - docs/Models/Operations/CrmGetAccountRequest.md
  - docs/Models/Operations/CrmGetAccountResponse.md
  - docs/Models/Operations/CrmGetContactCustomFieldDefinitionQueryParamFilter.md
  - docs/Models/Operations/CrmGetContactCustomFieldDefinitionRequest.md
  - docs/Models/Operations/CrmGetContactCustomFieldDefinitionResponse.md
  - docs/Models/Operations/CrmGetContactRequest.md
  - docs/Models/Operations/CrmGetContactResponse.md
  - docs/Models/Operations/CrmGetListRequest.md
  - docs/Models/Operations/CrmGetListResponse.md
  - docs/Models/Operations/CrmListAccountsQueryParamFilter.md
  - docs/Models/Operations/CrmListAccountsRequest.md
  - docs/Models/Operations/CrmListAccountsResponse.md
  - docs/Models/Operations/CrmListContactCustomFieldDefinitionsQueryParamFilter.md
  - docs/Models/Operations/CrmListContactCustomFieldDefinitionsRequest.md
  - docs/Models/Operations/CrmListContactCustomFieldDefinitionsResponse.md
  - docs/Models/Operations/CrmListContactsQueryParamFilter.md
  - docs/Models/Operations/CrmListContactsRequest.md
  - docs/Models/Operations/CrmListContactsResponse.md
  - docs/Models/Operations/CrmListListsQueryParamFilter.md
  - docs/Models/Operations/CrmListListsRequest.md
  - docs/Models/Operations/CrmListListsResponse.md
  - docs/Models/Operations/CrmUpdateContactRequest.md
  - docs/Models/Operations/CrmUpdateContactResponse.md
  - docs/Models/Operations/DocumentsDownloadFileRequest.md
  - docs/Models/Operations/DocumentsDownloadFileResponse.md
  - docs/Models/Operations/DocumentsGetDriveRequest.md
  - docs/Models/Operations/DocumentsGetDriveResponse.md
  - docs/Models/Operations/DocumentsGetFileRequest.md
  - docs/Models/Operations/DocumentsGetFileResponse.md
  - docs/Models/Operations/DocumentsGetFolderRequest.md
  - docs/Models/Operations/DocumentsGetFolderResponse.md
  - docs/Models/Operations/DocumentsListDrivesQueryParamFilter.md
  - docs/Models/Operations/DocumentsListDrivesRequest.md
  - docs/Models/Operations/DocumentsListDrivesResponse.md
  - docs/Models/Operations/DocumentsListFilesQueryParamFilter.md
  - docs/Models/Operations/DocumentsListFilesRequest.md
  - docs/Models/Operations/DocumentsListFilesResponse.md
  - docs/Models/Operations/DocumentsListFoldersQueryParamFilter.md
  - docs/Models/Operations/DocumentsListFoldersRequest.md
  - docs/Models/Operations/DocumentsListFoldersResponse.md
  - docs/Models/Operations/DocumentsUploadFileRequest.md
  - docs/Models/Operations/DocumentsUploadFileResponse.md
  - docs/Models/Operations/Filter.md
  - docs/Models/Operations/HrisBatchUploadEmployeeDocumentRequest.md
  - docs/Models/Operations/HrisBatchUploadEmployeeDocumentResponse.md
  - docs/Models/Operations/HrisCancelEmployeeTimeOffRequestRequest.md
  - docs/Models/Operations/HrisCancelEmployeeTimeOffRequestResponse.md
  - docs/Models/Operations/HrisCreateEmployeeEmploymentRequest.md
  - docs/Models/Operations/HrisCreateEmployeeEmploymentResponse.md
  - docs/Models/Operations/HrisCreateEmployeeRequest.md
  - docs/Models/Operations/HrisCreateEmployeeResponse.md
  - docs/Models/Operations/HrisCreateEmployeeSkillRequest.md
  - docs/Models/Operations/HrisCreateEmployeeSkillResponse.md
  - docs/Models/Operations/HrisCreateEmployeeTimeOffRequestRequest.md
  - docs/Models/Operations/HrisCreateEmployeeTimeOffRequestResponse.md
  - docs/Models/Operations/HrisCreateEmployeeWorkEligibilityRequestRequest.md
  - docs/Models/Operations/HrisCreateEmployeeWorkEligibilityRequestResponse.md
  - docs/Models/Operations/HrisDownloadEmployeeDocumentRequest.md
  - docs/Models/Operations/HrisDownloadEmployeeDocumentResponse.md
  - docs/Models/Operations/HrisGetBenefitRequest.md
  - docs/Models/Operations/HrisGetBenefitResponse.md
  - docs/Models/Operations/HrisGetCompanyGroupRequest.md
  - docs/Models/Operations/HrisGetCompanyGroupResponse.md
  - docs/Models/Operations/HrisGetCompanyRequest.md
  - docs/Models/Operations/HrisGetCompanyResponse.md
  - docs/Models/Operations/HrisGetCostCenterGroupRequest.md
  - docs/Models/Operations/HrisGetCostCenterGroupResponse.md
  - docs/Models/Operations/HrisGetDepartmentGroupRequest.md
  - docs/Models/Operations/HrisGetDepartmentGroupResponse.md
  - docs/Models/Operations/HrisGetDivisionGroupRequest.md
  - docs/Models/Operations/HrisGetDivisionGroupResponse.md
  - docs/Models/Operations/HrisGetEmployeeCustomFieldDefinitionQueryParamFilter.md
  - docs/Models/Operations/HrisGetEmployeeCustomFieldDefinitionRequest.md
  - docs/Models/Operations/HrisGetEmployeeCustomFieldDefinitionResponse.md
  - docs/Models/Operations/HrisGetEmployeeDocumentCategoryRequest.md
  - docs/Models/Operations/HrisGetEmployeeDocumentCategoryResponse.md
  - docs/Models/Operations/HrisGetEmployeeDocumentRequest.md
  - docs/Models/Operations/HrisGetEmployeeDocumentResponse.md
  - docs/Models/Operations/HrisGetEmployeeEmploymentRequest.md
  - docs/Models/Operations/HrisGetEmployeeEmploymentResponse.md
  - docs/Models/Operations/HrisGetEmployeeRequest.md
  - docs/Models/Operations/HrisGetEmployeeResponse.md
  - docs/Models/Operations/HrisGetEmployeeSkillRequest.md
  - docs/Models/Operations/HrisGetEmployeeSkillResponse.md
  - docs/Models/Operations/HrisGetEmployeeTaskRequest.md
  - docs/Models/Operations/HrisGetEmployeeTaskResponse.md
  - docs/Models/Operations/HrisGetEmployeeTimeOffBalanceRequest.md
  - docs/Models/Operations/HrisGetEmployeeTimeOffBalanceResponse.md
  - docs/Models/Operations/HrisGetEmployeesTimeOffRequestRequest.md
  - docs/Models/Operations/HrisGetEmployeesTimeOffRequestResponse.md
  - docs/Models/Operations/HrisGetEmployeesWorkEligibilityRequest.md
  - docs/Models/Operations/HrisGetEmployeesWorkEligibilityResponse.md
  - docs/Models/Operations/HrisGetEmploymentRequest.md
  - docs/Models/Operations/HrisGetEmploymentResponse.md
  - docs/Models/Operations/HrisGetGroupRequest.md
  - docs/Models/Operations/HrisGetGroupResponse.md
  - docs/Models/Operations/HrisGetJobRequest.md
  - docs/Models/Operations/HrisGetJobResponse.md
  - docs/Models/Operations/HrisGetLocationRequest.md
  - docs/Models/Operations/HrisGetLocationResponse.md
  - docs/Models/Operations/HrisGetPositionRequest.md
  - docs/Models/Operations/HrisGetPositionResponse.md
  - docs/Models/Operations/HrisGetShiftRequest.md
  - docs/Models/Operations/HrisGetShiftResponse.md
  - docs/Models/Operations/HrisGetTaskRequest.md
  - docs/Models/Operations/HrisGetTaskResponse.md
  - docs/Models/Operations/HrisGetTeamGroupRequest.md
  - docs/Models/Operations/HrisGetTeamGroupResponse.md
  - docs/Models/Operations/HrisGetTimeEntriesRequest.md
  - docs/Models/Operations/HrisGetTimeEntriesResponse.md
  - docs/Models/Operations/HrisGetTimeOffPolicyRequest.md
  - docs/Models/Operations/HrisGetTimeOffPolicyResponse.md
  - docs/Models/Operations/HrisGetTimeOffRequestRequest.md
  - docs/Models/Operations/HrisGetTimeOffRequestResponse.md
  - docs/Models/Operations/HrisGetTimeOffTypeRequest.md
  - docs/Models/Operations/HrisGetTimeOffTypeResponse.md
  - docs/Models/Operations/HrisInviteEmployeeRequest.md
  - docs/Models/Operations/HrisInviteEmployeeResponse.md
  - docs/Models/Operations/HrisListBenefitsQueryParamFilter.md
  - docs/Models/Operations/HrisListBenefitsRequest.md
  - docs/Models/Operations/HrisListBenefitsResponse.md
  - docs/Models/Operations/HrisListCompaniesGroupsQueryParamFilter.md
  - docs/Models/Operations/HrisListCompaniesGroupsRequest.md
  - docs/Models/Operations/HrisListCompaniesGroupsResponse.md
  - docs/Models/Operations/HrisListCompaniesQueryParamFilter.md
  - docs/Models/Operations/HrisListCompaniesRequest.md
  - docs/Models/Operations/HrisListCompaniesResponse.md
  - docs/Models/Operations/HrisListCostCenterGroupsQueryParamFilter.md
  - docs/Models/Operations/HrisListCostCenterGroupsRequest.md
  - docs/Models/Operations/HrisListCostCenterGroupsResponse.md
  - docs/Models/Operations/HrisListDepartmentGroupsQueryParamFilter.md
  - docs/Models/Operations/HrisListDepartmentGroupsRequest.md
  - docs/Models/Operations/HrisListDepartmentGroupsResponse.md
  - docs/Models/Operations/HrisListDivisionGroupsQueryParamFilter.md
  - docs/Models/Operations/HrisListDivisionGroupsRequest.md
  - docs/Models/Operations/HrisListDivisionGroupsResponse.md
  - docs/Models/Operations/HrisListEmployeeCategoriesQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeCategoriesRequest.md
  - docs/Models/Operations/HrisListEmployeeCategoriesResponse.md
  - docs/Models/Operations/HrisListEmployeeCustomFieldDefinitionsQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeCustomFieldDefinitionsRequest.md
  - docs/Models/Operations/HrisListEmployeeCustomFieldDefinitionsResponse.md
  - docs/Models/Operations/HrisListEmployeeDocumentsQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeDocumentsRequest.md
  - docs/Models/Operations/HrisListEmployeeDocumentsResponse.md
  - docs/Models/Operations/HrisListEmployeeEmploymentsQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeEmploymentsRequest.md
  - docs/Models/Operations/HrisListEmployeeEmploymentsResponse.md
  - docs/Models/Operations/HrisListEmployeeSkillsQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeSkillsRequest.md
  - docs/Models/Operations/HrisListEmployeeSkillsResponse.md
  - docs/Models/Operations/HrisListEmployeeTasksQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeTasksRequest.md
  - docs/Models/Operations/HrisListEmployeeTasksResponse.md
  - docs/Models/Operations/HrisListEmployeeTimeOffBalancesQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeTimeOffBalancesRequest.md
  - docs/Models/Operations/HrisListEmployeeTimeOffBalancesResponse.md
  - docs/Models/Operations/HrisListEmployeeTimeOffPoliciesQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeTimeOffPoliciesRequest.md
  - docs/Models/Operations/HrisListEmployeeTimeOffPoliciesResponse.md
  - docs/Models/Operations/HrisListEmployeeTimeOffRequestsQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeTimeOffRequestsRequest.md
  - docs/Models/Operations/HrisListEmployeeTimeOffRequestsResponse.md
  - docs/Models/Operations/HrisListEmployeeWorkEligibilityQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeeWorkEligibilityRequest.md
  - docs/Models/Operations/HrisListEmployeeWorkEligibilityResponse.md
  - docs/Models/Operations/HrisListEmployeesQueryParamFilter.md
  - docs/Models/Operations/HrisListEmployeesRequest.md
  - docs/Models/Operations/HrisListEmployeesResponse.md
  - docs/Models/Operations/HrisListEmploymentsQueryParamFilter.md
  - docs/Models/Operations/HrisListEmploymentsRequest.md
  - docs/Models/Operations/HrisListEmploymentsResponse.md
  - docs/Models/Operations/HrisListGroupsQueryParamFilter.md
  - docs/Models/Operations/HrisListGroupsRequest.md
  - docs/Models/Operations/HrisListGroupsResponse.md
  - docs/Models/Operations/HrisListJobsQueryParamFilter.md
  - docs/Models/Operations/HrisListJobsRequest.md
  - docs/Models/Operations/HrisListJobsResponse.md
  - docs/Models/Operations/HrisListLocationsQueryParamFilter.md
  - docs/Models/Operations/HrisListLocationsRequest.md
  - docs/Models/Operations/HrisListLocationsResponse.md
  - docs/Models/Operations/HrisListPositionsQueryParamFilter.md
  - docs/Models/Operations/HrisListPositionsRequest.md
  - docs/Models/Operations/HrisListPositionsResponse.md
  - docs/Models/Operations/HrisListShiftsQueryParamFilter.md
  - docs/Models/Operations/HrisListShiftsRequest.md
  - docs/Models/Operations/HrisListShiftsResponse.md
  - docs/Models/Operations/HrisListTasksQueryParamFilter.md
  - docs/Models/Operations/HrisListTasksRequest.md
  - docs/Models/Operations/HrisListTasksResponse.md
  - docs/Models/Operations/HrisListTeamGroupsQueryParamFilter.md
  - docs/Models/Operations/HrisListTeamGroupsRequest.md
  - docs/Models/Operations/HrisListTeamGroupsResponse.md
  - docs/Models/Operations/HrisListTimeEntriesQueryParamFilter.md
  - docs/Models/Operations/HrisListTimeEntriesRequest.md
  - docs/Models/Operations/HrisListTimeEntriesResponse.md
  - docs/Models/Operations/HrisListTimeOffPoliciesQueryParamFilter.md
  - docs/Models/Operations/HrisListTimeOffPoliciesRequest.md
  - docs/Models/Operations/HrisListTimeOffPoliciesResponse.md
  - docs/Models/Operations/HrisListTimeOffRequestsQueryParamFilter.md
  - docs/Models/Operations/HrisListTimeOffRequestsRequest.md
  - docs/Models/Operations/HrisListTimeOffRequestsResponse.md
  - docs/Models/Operations/HrisListTimeOffTypesQueryParamFilter.md
  - docs/Models/Operations/HrisListTimeOffTypesRequest.md
  - docs/Models/Operations/HrisListTimeOffTypesResponse.md
  - docs/Models/Operations/HrisUpdateEmployeeEmploymentRequest.md
  - docs/Models/Operations/HrisUpdateEmployeeEmploymentResponse.md
  - docs/Models/Operations/HrisUpdateEmployeeRequest.md
  - docs/Models/Operations/HrisUpdateEmployeeResponse.md
  - docs/Models/Operations/HrisUpdateEmployeeTaskRequest.md
  - docs/Models/Operations/HrisUpdateEmployeeTaskResponse.md
  - docs/Models/Operations/HrisUpdateEmployeeTimeOffRequestRequest.md
  - docs/Models/Operations/HrisUpdateEmployeeTimeOffRequestResponse.md
  - docs/Models/Operations/HrisUpdateEmployeeWorkEligibilityRequestRequest.md
  - docs/Models/Operations/HrisUpdateEmployeeWorkEligibilityRequestResponse.md
  - docs/Models/Operations/HrisUploadEmployeeDocumentRequest.md
  - docs/Models/Operations/HrisUploadEmployeeDocumentResponse.md
  - docs/Models/Operations/IamDeleteUserRequest.md
  - docs/Models/Operations/IamDeleteUserResponse.md
  - docs/Models/Operations/IamGetGroupRequest.md
  - docs/Models/Operations/IamGetGroupResponse.md
  - docs/Models/Operations/IamGetPolicyRequest.md
  - docs/Models/Operations/IamGetPolicyResponse.md
  - docs/Models/Operations/IamGetRoleRequest.md
  - docs/Models/Operations/IamGetRoleResponse.md
  - docs/Models/Operations/IamGetUserRequest.md
  - docs/Models/Operations/IamGetUserResponse.md
  - docs/Models/Operations/IamListGroupsQueryParamFilter.md
  - docs/Models/Operations/IamListGroupsRequest.md
  - docs/Models/Operations/IamListGroupsResponse.md
  - docs/Models/Operations/IamListPoliciesQueryParamFilter.md
  - docs/Models/Operations/IamListPoliciesRequest.md
  - docs/Models/Operations/IamListPoliciesResponse.md
  - docs/Models/Operations/IamListRolesQueryParamFilter.md
  - docs/Models/Operations/IamListRolesRequest.md
  - docs/Models/Operations/IamListRolesResponse.md
  - docs/Models/Operations/IamListUsersQueryParamFilter.md
  - docs/Models/Operations/IamListUsersRequest.md
  - docs/Models/Operations/IamListUsersResponse.md
  - docs/Models/Operations/IamUpdateUserRequest.md
  - docs/Models/Operations/IamUpdateUserResponse.md
  - docs/Models/Operations/IncludeT.md
  - docs/Models/Operations/JobStatus.md
  - docs/Models/Operations/LmsBatchUpsertContentRequest.md
  - docs/Models/Operations/LmsBatchUpsertContentResponse.md
  - docs/Models/Operations/LmsCreateUserAssignmentRequest.md
  - docs/Models/Operations/LmsCreateUserAssignmentResponse.md
  - docs/Models/Operations/LmsCreateUserCompletionRequest.md
  - docs/Models/Operations/LmsCreateUserCompletionResponse.md
  - docs/Models/Operations/LmsDeleteUserCompletionRequest.md
  - docs/Models/Operations/LmsDeleteUserCompletionResponse.md
  - docs/Models/Operations/LmsGetAssignmentRequest.md
  - docs/Models/Operations/LmsGetAssignmentResponse.md
  - docs/Models/Operations/LmsGetCategoryRequest.md
  - docs/Models/Operations/LmsGetCategoryResponse.md
  - docs/Models/Operations/LmsGetCompletionRequest.md
  - docs/Models/Operations/LmsGetCompletionResponse.md
  - docs/Models/Operations/LmsGetContentRequest.md
  - docs/Models/Operations/LmsGetContentResponse.md
  - docs/Models/Operations/LmsGetCourseRequest.md
  - docs/Models/Operations/LmsGetCourseResponse.md
  - docs/Models/Operations/LmsGetSkillRequest.md
  - docs/Models/Operations/LmsGetSkillResponse.md
  - docs/Models/Operations/LmsGetUserAssignmentRequest.md
  - docs/Models/Operations/LmsGetUserAssignmentResponse.md
  - docs/Models/Operations/LmsGetUserCompletionRequest.md
  - docs/Models/Operations/LmsGetUserCompletionResponse.md
  - docs/Models/Operations/LmsGetUserRequest.md
  - docs/Models/Operations/LmsGetUserResponse.md
  - docs/Models/Operations/LmsListAssignmentsQueryParamFilter.md
  - docs/Models/Operations/LmsListAssignmentsQueryParamStatus.md
  - docs/Models/Operations/LmsListAssignmentsRequest.md
  - docs/Models/Operations/LmsListAssignmentsResponse.md
  - docs/Models/Operations/LmsListCategoriesQueryParamFilter.md
  - docs/Models/Operations/LmsListCategoriesRequest.md
  - docs/Models/Operations/LmsListCategoriesResponse.md
  - docs/Models/Operations/LmsListCompletionsQueryParamFilter.md
  - docs/Models/Operations/LmsListCompletionsRequest.md
  - docs/Models/Operations/LmsListCompletionsResponse.md
  - docs/Models/Operations/LmsListContentQueryParamFilter.md
  - docs/Models/Operations/LmsListContentRequest.md
  - docs/Models/Operations/LmsListContentResponse.md
  - docs/Models/Operations/LmsListCoursesQueryParamFilter.md
  - docs/Models/Operations/LmsListCoursesRequest.md
  - docs/Models/Operations/LmsListCoursesResponse.md
  - docs/Models/Operations/LmsListSkillsQueryParamFilter.md
  - docs/Models/Operations/LmsListSkillsRequest.md
  - docs/Models/Operations/LmsListSkillsResponse.md
  - docs/Models/Operations/LmsListUserAssignmentsQueryParamFilter.md
  - docs/Models/Operations/LmsListUserAssignmentsQueryParamStatus.md
  - docs/Models/Operations/LmsListUserAssignmentsRequest.md
  - docs/Models/Operations/LmsListUserAssignmentsResponse.md
  - docs/Models/Operations/LmsListUserCompletionsQueryParamFilter.md
  - docs/Models/Operations/LmsListUserCompletionsRequest.md
  - docs/Models/Operations/LmsListUserCompletionsResponse.md
  - docs/Models/Operations/LmsListUsersQueryParamFilter.md
  - docs/Models/Operations/LmsListUsersRequest.md
  - docs/Models/Operations/LmsListUsersResponse.md
  - docs/Models/Operations/LmsUpdateContentRequest.md
  - docs/Models/Operations/LmsUpdateContentResponse.md
  - docs/Models/Operations/LmsUpsertContentRequest.md
  - docs/Models/Operations/LmsUpsertContentResponse.md
  - docs/Models/Operations/MarketingCreateContentBlockRequest.md
  - docs/Models/Operations/MarketingCreateContentBlockResponse.md
  - docs/Models/Operations/MarketingCreateEmailTemplateRequest.md
  - docs/Models/Operations/MarketingCreateEmailTemplateResponse.md
  - docs/Models/Operations/MarketingCreateInAppTemplateRequest.md
  - docs/Models/Operations/MarketingCreateInAppTemplateResponse.md
  - docs/Models/Operations/MarketingCreateOmniChannelTemplateRequest.md
  - docs/Models/Operations/MarketingCreateOmniChannelTemplateResponse.md
  - docs/Models/Operations/MarketingCreatePushTemplateRequest.md
  - docs/Models/Operations/MarketingCreatePushTemplateResponse.md
  - docs/Models/Operations/MarketingCreateSmsTemplateRequest.md
  - docs/Models/Operations/MarketingCreateSmsTemplateResponse.md
  - docs/Models/Operations/MarketingGetCampaignRequest.md
  - docs/Models/Operations/MarketingGetCampaignResponse.md
  - docs/Models/Operations/MarketingGetContentBlockRequest.md
  - docs/Models/Operations/MarketingGetContentBlockResponse.md
  - docs/Models/Operations/MarketingGetEmailTemplateRequest.md
  - docs/Models/Operations/MarketingGetEmailTemplateResponse.md
  - docs/Models/Operations/MarketingGetInAppTemplateRequest.md
  - docs/Models/Operations/MarketingGetInAppTemplateResponse.md
  - docs/Models/Operations/MarketingGetOmniChannelTemplateRequest.md
  - docs/Models/Operations/MarketingGetOmniChannelTemplateResponse.md
  - docs/Models/Operations/MarketingGetPushTemplateRequest.md
  - docs/Models/Operations/MarketingGetPushTemplateResponse.md
  - docs/Models/Operations/MarketingGetSmsTemplateRequest.md
  - docs/Models/Operations/MarketingGetSmsTemplateResponse.md
  - docs/Models/Operations/MarketingListCampaignsQueryParamFilter.md
  - docs/Models/Operations/MarketingListCampaignsRequest.md
  - docs/Models/Operations/MarketingListCampaignsResponse.md
  - docs/Models/Operations/MarketingListContentBlocksQueryParamFilter.md
  - docs/Models/Operations/MarketingListContentBlocksRequest.md
  - docs/Models/Operations/MarketingListContentBlocksResponse.md
  - docs/Models/Operations/MarketingListEmailTemplatesQueryParamFilter.md
  - docs/Models/Operations/MarketingListEmailTemplatesRequest.md
  - docs/Models/Operations/MarketingListEmailTemplatesResponse.md
  - docs/Models/Operations/MarketingListInAppTemplatesQueryParamFilter.md
  - docs/Models/Operations/MarketingListInAppTemplatesRequest.md
  - docs/Models/Operations/MarketingListInAppTemplatesResponse.md
  - docs/Models/Operations/MarketingListOmniChannelTemplatesQueryParamFilter.md
  - docs/Models/Operations/MarketingListOmniChannelTemplatesRequest.md
  - docs/Models/Operations/MarketingListOmniChannelTemplatesResponse.md
  - docs/Models/Operations/MarketingListPushTemplatesQueryParamFilter.md
  - docs/Models/Operations/MarketingListPushTemplatesRequest.md
  - docs/Models/Operations/MarketingListPushTemplatesResponse.md
  - docs/Models/Operations/MarketingListSmsTemplatesQueryParamFilter.md
  - docs/Models/Operations/MarketingListSmsTemplatesRequest.md
  - docs/Models/Operations/MarketingListSmsTemplatesResponse.md
  - docs/Models/Operations/MarketingUpdateContentBlockRequest.md
  - docs/Models/Operations/MarketingUpdateContentBlockResponse.md
  - docs/Models/Operations/MarketingUpdateEmailTemplateRequest.md
  - docs/Models/Operations/MarketingUpdateEmailTemplateResponse.md
  - docs/Models/Operations/MarketingUpdateInAppTemplateRequest.md
  - docs/Models/Operations/MarketingUpdateInAppTemplateResponse.md
  - docs/Models/Operations/MarketingUpdateOmniChannelTemplateRequest.md
  - docs/Models/Operations/MarketingUpdateOmniChannelTemplateResponse.md
  - docs/Models/Operations/MarketingUpdatePushTemplateRequest.md
  - docs/Models/Operations/MarketingUpdatePushTemplateResponse.md
  - docs/Models/Operations/MarketingUpdateSmsTemplateRequest.md
  - docs/Models/Operations/MarketingUpdateSmsTemplateResponse.md
  - docs/Models/Operations/MessagingCreateConversationRequest.md
  - docs/Models/Operations/MessagingCreateConversationResponse.md
  - docs/Models/Operations/MessagingDownloadMessagingAttachmentRequest.md
  - docs/Models/Operations/MessagingDownloadMessagingAttachmentResponse.md
  - docs/Models/Operations/MessagingGetAttachmentRequest.md
  - docs/Models/Operations/MessagingGetAttachmentResponse.md
  - docs/Models/Operations/MessagingGetConversationRequest.md
  - docs/Models/Operations/MessagingGetConversationResponse.md
  - docs/Models/Operations/MessagingGetMessageQueryParamFilter.md
  - docs/Models/Operations/MessagingGetMessageRequest.md
  - docs/Models/Operations/MessagingGetMessageResponse.md
  - docs/Models/Operations/MessagingGetUserRequest.md
  - docs/Models/Operations/MessagingGetUserResponse.md
  - docs/Models/Operations/MessagingListAttachmentsQueryParamFilter.md
  - docs/Models/Operations/MessagingListAttachmentsRequest.md
  - docs/Models/Operations/MessagingListAttachmentsResponse.md
  - docs/Models/Operations/MessagingListConversationMessagesQueryParamFilter.md
  - docs/Models/Operations/MessagingListConversationMessagesRequest.md
  - docs/Models/Operations/MessagingListConversationMessagesResponse.md
  - docs/Models/Operations/MessagingListConversationsQueryParamFilter.md
  - docs/Models/Operations/MessagingListConversationsRequest.md
  - docs/Models/Operations/MessagingListConversationsResponse.md
  - docs/Models/Operations/MessagingListUsersQueryParamFilter.md
  - docs/Models/Operations/MessagingListUsersRequest.md
  - docs/Models/Operations/MessagingListUsersResponse.md
  - docs/Models/Operations/MessagingSendMessageRequest.md
  - docs/Models/Operations/MessagingSendMessageResponse.md
  - docs/Models/Operations/OrderBy.md
  - docs/Models/Operations/OrderDirection.md
  - docs/Models/Operations/QueryParamActive.md
  - docs/Models/Operations/QueryParamFilter.md
  - docs/Models/Operations/QueryParamInclude.md
  - docs/Models/Operations/QueryParamOrderBy.md
  - docs/Models/Operations/QueryParamOrderDirection.md
  - docs/Models/Operations/QueryParamStatus.md
  - docs/Models/Operations/QueryParamType.md
  - docs/Models/Operations/ScreeningCreateScreeningOrderRequest.md
  - docs/Models/Operations/ScreeningCreateScreeningOrderResponse.md
  - docs/Models/Operations/ScreeningGetScreeningPackageRequest.md
  - docs/Models/Operations/ScreeningGetScreeningPackageResponse.md
  - docs/Models/Operations/ScreeningListScreeningPackagesQueryParamFilter.md
  - docs/Models/Operations/ScreeningListScreeningPackagesRequest.md
  - docs/Models/Operations/ScreeningListScreeningPackagesResponse.md
  - docs/Models/Operations/ScreeningWebhookScreeningResultRequest.md
  - docs/Models/Operations/ScreeningWebhookScreeningResultResponse.md
  - docs/Models/Operations/StackoneAuthenticateConnectSessionResponse.md
  - docs/Models/Operations/StackoneCreateConnectSessionResponse.md
  - docs/Models/Operations/StackoneDeleteAccountRequest.md
  - docs/Models/Operations/StackoneDeleteAccountResponse.md
  - docs/Models/Operations/StackoneGetAccountMetaInfoRequest.md
  - docs/Models/Operations/StackoneGetAccountMetaInfoResponse.md
  - docs/Models/Operations/StackoneGetAccountRequest.md
  - docs/Models/Operations/StackoneGetAccountResponse.md
  - docs/Models/Operations/StackoneGetConnectorMetaRequest.md
  - docs/Models/Operations/StackoneGetConnectorMetaResponse.md
  - docs/Models/Operations/StackoneGetLogRequest.md
  - docs/Models/Operations/StackoneGetLogResponse.md
  - docs/Models/Operations/StackoneListActionsMetaQueryParamFilter.md
  - docs/Models/Operations/StackoneListActionsMetaQueryParamInclude.md
  - docs/Models/Operations/StackoneListActionsMetaRequest.md
  - docs/Models/Operations/StackoneListActionsMetaResponse.md
  - docs/Models/Operations/StackoneListConnectorsMetaRequest.md
  - docs/Models/Operations/StackoneListConnectorsMetaResponse.md
  - docs/Models/Operations/StackoneListLinkedAccountsRequest.md
  - docs/Models/Operations/StackoneListLinkedAccountsResponse.md
  - docs/Models/Operations/StackoneListLogsQueryParamOrderBy.md
  - docs/Models/Operations/StackoneListLogsQueryParamOrderDirection.md
  - docs/Models/Operations/StackoneListLogsRequest.md
  - docs/Models/Operations/StackoneListLogsResponse.md
  - docs/Models/Operations/StackoneListPlatformLogsQueryParamFilter.md
  - docs/Models/Operations/StackoneListPlatformLogsQueryParamOrderBy.md
  - docs/Models/Operations/StackoneListPlatformLogsQueryParamOrderDirection.md
  - docs/Models/Operations/StackoneListPlatformLogsQueryParamRequestLogsOrderBy.md
  - docs/Models/Operations/StackoneListPlatformLogsQueryParamRequestLogsOrderDirection.md
  - docs/Models/Operations/StackoneListPlatformLogsRequest.md
  - docs/Models/Operations/StackoneListPlatformLogsResponse.md
  - docs/Models/Operations/StackoneListStepLogsRequest.md
  - docs/Models/Operations/StackoneListStepLogsResponse.md
  - docs/Models/Operations/StackoneMcpDeleteRequest.md
  - docs/Models/Operations/StackoneMcpDeleteResponse.md
  - docs/Models/Operations/StackoneMcpDeleteSecurity.md
  - docs/Models/Operations/StackoneMcpGetRequest.md
  - docs/Models/Operations/StackoneMcpGetResponse.md
  - docs/Models/Operations/StackoneMcpGetSecurity.md
  - docs/Models/Operations/StackoneMcpPostRequest.md
  - docs/Models/Operations/StackoneMcpPostResponse.md
  - docs/Models/Operations/StackoneMcpPostSecurity.md
  - docs/Models/Operations/StackoneProxyRequestRequest.md
  - docs/Models/Operations/StackoneProxyRequestResponse.md
  - docs/Models/Operations/StackoneRpcActionResponse.md
  - docs/Models/Operations/StackoneUpdateAccountRequest.md
  - docs/Models/Operations/StackoneUpdateAccountResponse.md
  - docs/Models/Operations/Status.md
  - docs/Models/Operations/TicketingCreateTicketRequest.md
  - docs/Models/Operations/TicketingCreateTicketResponse.md
  - docs/Models/Operations/TicketingDownloadTicketingAttachmentRequest.md
  - docs/Models/Operations/TicketingDownloadTicketingAttachmentResponse.md
  - docs/Models/Operations/TicketingGetAttachmentRequest.md
  - docs/Models/Operations/TicketingGetAttachmentResponse.md
  - docs/Models/Operations/TicketingGetCommentRequest.md
  - docs/Models/Operations/TicketingGetCommentResponse.md
  - docs/Models/Operations/TicketingGetProjectComponentRequest.md
  - docs/Models/Operations/TicketingGetProjectComponentResponse.md
  - docs/Models/Operations/TicketingGetProjectRequest.md
  - docs/Models/Operations/TicketingGetProjectResponse.md
  - docs/Models/Operations/TicketingGetTicketRequest.md
  - docs/Models/Operations/TicketingGetTicketResponse.md
  - docs/Models/Operations/TicketingGetTicketTypeRequest.md
  - docs/Models/Operations/TicketingGetTicketTypeResponse.md
  - docs/Models/Operations/TicketingGetUserRequest.md
  - docs/Models/Operations/TicketingGetUserResponse.md
  - docs/Models/Operations/TicketingListAttachmentsQueryParamFilter.md
  - docs/Models/Operations/TicketingListAttachmentsRequest.md
  - docs/Models/Operations/TicketingListAttachmentsResponse.md
  - docs/Models/Operations/TicketingListCommentsQueryParamFilter.md
  - docs/Models/Operations/TicketingListCommentsRequest.md
  - docs/Models/Operations/TicketingListCommentsResponse.md
  - docs/Models/Operations/TicketingListProjectComponentsQueryParamFilter.md
  - docs/Models/Operations/TicketingListProjectComponentsRequest.md
  - docs/Models/Operations/TicketingListProjectComponentsResponse.md
  - docs/Models/Operations/TicketingListProjectTicketTypesQueryParamFilter.md
  - docs/Models/Operations/TicketingListProjectTicketTypesRequest.md
  - docs/Models/Operations/TicketingListProjectTicketTypesResponse.md
  - docs/Models/Operations/TicketingListProjectsQueryParamFilter.md
  - docs/Models/Operations/TicketingListProjectsRequest.md
  - docs/Models/Operations/TicketingListProjectsResponse.md
  - docs/Models/Operations/TicketingListTicketStatusesQueryParamFilter.md
  - docs/Models/Operations/TicketingListTicketStatusesRequest.md
  - docs/Models/Operations/TicketingListTicketStatusesResponse.md
  - docs/Models/Operations/TicketingListTicketTypesQueryParamFilter.md
  - docs/Models/Operations/TicketingListTicketTypesRequest.md
  - docs/Models/Operations/TicketingListTicketTypesResponse.md
  - docs/Models/Operations/TicketingListTicketsQueryParamFilter.md
  - docs/Models/Operations/TicketingListTicketsRequest.md
  - docs/Models/Operations/TicketingListTicketsResponse.md
  - docs/Models/Operations/TicketingListUsersQueryParamFilter.md
  - docs/Models/Operations/TicketingListUsersRequest.md
  - docs/Models/Operations/TicketingListUsersResponse.md
  - docs/Models/Operations/TicketingUpdateTicketRequest.md
  - docs/Models/Operations/TicketingUpdateTicketResponse.md
  - docs/Models/Operations/Type.md
  - docs/sdks/accounting/README.md
  - docs/sdks/accounts/README.md
  - docs/sdks/actions/README.md
  - docs/sdks/ats/README.md
  - docs/sdks/connectors/README.md
  - docs/sdks/connectsessions/README.md
  - docs/sdks/crm/README.md
  - docs/sdks/documents/README.md
  - docs/sdks/hris/README.md
  - docs/sdks/iam/README.md
  - docs/sdks/lms/README.md
  - docs/sdks/marketing/README.md
  - docs/sdks/mcp/README.md
  - docs/sdks/messaging/README.md
  - docs/sdks/proxy/README.md
  - docs/sdks/requestlogs/README.md
  - docs/sdks/screening/README.md
  - docs/sdks/stackone/README.md
  - docs/sdks/ticketing/README.md
  - phpstan.neon
  - phpunit.xml
  - pint.json
  - rector.php
  - src/Accounting.php
  - src/Accounts.php
  - src/Actions.php
  - src/Ats.php
  - src/ConnectSessions.php
  - src/Connectors.php
  - src/Crm.php
  - src/Documents.php
  - src/Hooks/AfterErrorContext.php
  - src/Hooks/AfterErrorHook.php
  - src/Hooks/AfterSuccessContext.php
  - src/Hooks/AfterSuccessHook.php
  - src/Hooks/BeforeRequestContext.php
  - src/Hooks/BeforeRequestHook.php
  - src/Hooks/Credentials.php
  - src/Hooks/ErrorResponseContext.php
  - src/Hooks/FailEarlyException.php
  - src/Hooks/HookContext.php
  - src/Hooks/Hooks.php
  - src/Hooks/SDKHooks.php
  - src/Hooks/SDKInitHook.php
  - src/Hooks/SDKRequestContext.php
  - src/Hooks/Session.php
  - src/Hooks/TokenResponse.php
  - src/Hris.php
  - src/Iam.php
  - src/Lms.php
  - src/Marketing.php
  - src/Mcp.php
  - src/Messaging.php
  - src/Models/Components/ATSLocation.php
  - src/Models/Components/ATSLocationResult.php
  - src/Models/Components/ATSLocationsPaginated.php
  - src/Models/Components/Account.php
  - src/Models/Components/AccountAddress.php
  - src/Models/Components/AccountAddressCountry.php
  - src/Models/Components/AccountAddressLocationType.php
  - src/Models/Components/AccountAddressLocationTypeValue.php
  - src/Models/Components/AccountAddressSourceValue4.php
  - src/Models/Components/AccountAddressSourceValueLocationType4.php
  - src/Models/Components/AccountAddressValue.php
  - src/Models/Components/AccountResult.php
  - src/Models/Components/AccountType.php
  - src/Models/Components/AccountingAccount.php
  - src/Models/Components/AccountingAccountActive2.php
  - src/Models/Components/AccountingAccountResult.php
  - src/Models/Components/AccountingAccountResultActive2.php
  - src/Models/Components/AccountingAccountResultData.php
  - src/Models/Components/AccountingAccountResultSourceValue4.php
  - src/Models/Components/AccountingAccountResultType.php
  - src/Models/Components/AccountingAccountResultValue.php
  - src/Models/Components/AccountingAccountSourceValue4.php
  - src/Models/Components/AccountingAccountType.php
  - src/Models/Components/AccountingAccountValue.php
  - src/Models/Components/AccountingAccountsPaginated.php
  - src/Models/Components/AccountingCompaniesPaginated.php
  - src/Models/Components/AccountingCompany.php
  - src/Models/Components/AccountingCompanyResult.php
  - src/Models/Components/AccountingCompanyResultBaseCurrency.php
  - src/Models/Components/AccountingCompanyResultData.php
  - src/Models/Components/AccountingCompanyResultSourceValue4.php
  - src/Models/Components/AccountingCompanyResultValue.php
  - src/Models/Components/AccountingCompanySourceValue4.php
  - src/Models/Components/AccountingCompanyValue.php
  - src/Models/Components/AccountingJournal.php
  - src/Models/Components/AccountingJournalBatchCreateRequestDto.php
  - src/Models/Components/AccountingJournalCreateRequestDto.php
  - src/Models/Components/AccountingJournalCreateRequestDtoSourceValue4.php
  - src/Models/Components/AccountingJournalCreateRequestDtoValue.php
  - src/Models/Components/AccountingJournalResult.php
  - src/Models/Components/AccountingJournalResultData.php
  - src/Models/Components/AccountingJournalResultSourceValue4.php
  - src/Models/Components/AccountingJournalResultStatus.php
  - src/Models/Components/AccountingJournalResultValue.php
  - src/Models/Components/AccountingJournalSourceValue4.php
  - src/Models/Components/AccountingJournalStatus.php
  - src/Models/Components/AccountingJournalValue.php
  - src/Models/Components/AccountingJournalsPaginated.php
  - src/Models/Components/AccountingTaxRate.php
  - src/Models/Components/AccountingTaxRateActive2.php
  - src/Models/Components/AccountingTaxRateResult.php
  - src/Models/Components/AccountingTaxRateResultActive2.php
  - src/Models/Components/AccountingTaxRateResultData.php
  - src/Models/Components/AccountingTaxRatesPaginated.php
  - src/Models/Components/AccountsPaginated.php
  - src/Models/Components/ActionMetaItem.php
  - src/Models/Components/ActionsMeta.php
  - src/Models/Components/ActionsMetaPaginated.php
  - src/Models/Components/ActionsRpcRequestDto.php
  - src/Models/Components/ActionsRpcResponse.php
  - src/Models/Components/Active2.php
  - src/Models/Components/Actor.php
  - src/Models/Components/AdditionalData.php
  - src/Models/Components/Answer.php
  - src/Models/Components/AnswerSourceValue4.php
  - src/Models/Components/AnswerType.php
  - src/Models/Components/AnswerValue.php
  - src/Models/Components/Application.php
  - src/Models/Components/ApplicationAttachment.php
  - src/Models/Components/ApplicationAttachmentSourceValue4.php
  - src/Models/Components/ApplicationAttachmentValue.php
  - src/Models/Components/ApplicationCandidate.php
  - src/Models/Components/ApplicationChanges.php
  - src/Models/Components/ApplicationChangesDataModel.php
  - src/Models/Components/ApplicationChangesDataModelApplicationStatus.php
  - src/Models/Components/ApplicationChangesDataModelSourceValue4.php
  - src/Models/Components/ApplicationChangesDataModelValue.php
  - src/Models/Components/ApplicationChangesPaginated.php
  - src/Models/Components/ApplicationChangesSourceValue4.php
  - src/Models/Components/ApplicationChangesValue.php
  - src/Models/Components/ApplicationInterviewStage.php
  - src/Models/Components/ApplicationResult.php
  - src/Models/Components/ApplicationSourceValue4.php
  - src/Models/Components/ApplicationStage.php
  - src/Models/Components/ApplicationStageResult.php
  - src/Models/Components/ApplicationStagesPaginated.php
  - src/Models/Components/ApplicationStatus.php
  - src/Models/Components/ApplicationValue.php
  - src/Models/Components/ApplicationsPaginated.php
  - src/Models/Components/ApprovalStatus.php
  - src/Models/Components/Archived2.php
  - src/Models/Components/AssessmentPackage.php
  - src/Models/Components/AssessmentPackagePaginated.php
  - src/Models/Components/AssessmentPackageResult.php
  - src/Models/Components/Assignment.php
  - src/Models/Components/AssignmentLearningObjectTypeValue.php
  - src/Models/Components/AssignmentResult.php
  - src/Models/Components/AssignmentResult1.php
  - src/Models/Components/AssignmentResultValue.php
  - src/Models/Components/AssignmentSourceValue4.php
  - src/Models/Components/AssignmentSourceValueLearningObjectType4.php
  - src/Models/Components/AssignmentSourceValueResult4.php
  - src/Models/Components/AssignmentStatus.php
  - src/Models/Components/AssignmentValue.php
  - src/Models/Components/AssignmentsPaginated.php
  - src/Models/Components/AtsCreateApplicationRequestDto.php
  - src/Models/Components/AtsCreateApplicationRequestDtoApplicationStatus.php
  - src/Models/Components/AtsCreateApplicationRequestDtoCandidate.php
  - src/Models/Components/AtsCreateApplicationRequestDtoSource.php
  - src/Models/Components/AtsCreateApplicationRequestDtoSourceValue4.php
  - src/Models/Components/AtsCreateApplicationRequestDtoValue.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDto.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplication.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoCandidate.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoJob.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoPackage.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoRequester.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValue4.php
  - src/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoValue.php
  - src/Models/Components/AtsCreateBackgroundCheckPackagesRequestDto.php
  - src/Models/Components/AtsCreateCandidateRequestDto.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDto.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplication.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplicationStatus.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoCandidate.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoJob.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoPackage.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValue4.php
  - src/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoValue.php
  - src/Models/Components/AtsCreateJobRequestDto.php
  - src/Models/Components/AtsCreateJobRequestDtoConfidential.php
  - src/Models/Components/AtsCreateJobRequestDtoJobStatus.php
  - src/Models/Components/AtsCreateJobRequestDtoSourceValue4.php
  - src/Models/Components/AtsCreateJobRequestDtoValue.php
  - src/Models/Components/AtsCreateNotesRequestDto.php
  - src/Models/Components/AtsCreateNotesRequestDtoSourceValue4.php
  - src/Models/Components/AtsCreateNotesRequestDtoValue.php
  - src/Models/Components/AtsCreateNotesRequestDtoVisibility.php
  - src/Models/Components/AtsCreateOfferRequestDto.php
  - src/Models/Components/AtsCreateOfferRequestDtoOfferStatus.php
  - src/Models/Components/AtsCreateOfferRequestDtoSourceValue4.php
  - src/Models/Components/AtsCreateOfferRequestDtoValue.php
  - src/Models/Components/AtsDocumentApiModel.php
  - src/Models/Components/AtsDocumentApiModelCategory.php
  - src/Models/Components/AtsDocumentApiModelFileFormat.php
  - src/Models/Components/AtsDocumentApiModelSourceValue4.php
  - src/Models/Components/AtsDocumentApiModelSourceValueFileFormat4.php
  - src/Models/Components/AtsDocumentApiModelSourceValueType4.php
  - src/Models/Components/AtsDocumentApiModelType.php
  - src/Models/Components/AtsDocumentApiModelTypeValue.php
  - src/Models/Components/AtsDocumentApiModelValue.php
  - src/Models/Components/AtsDocumentResult.php
  - src/Models/Components/AtsDocumentsPaginated.php
  - src/Models/Components/AtsDocumentsUploadRequestDto.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoCategory.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoCategoryValue.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoConfidential.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoConfidentialValue.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoFileFormat.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoSourceValue4.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoSourceValueConfidential4.php
  - src/Models/Components/AtsDocumentsUploadRequestDtoValue.php
  - src/Models/Components/AtsJob.php
  - src/Models/Components/AtsJobConfidential.php
  - src/Models/Components/AtsJobHiringTeam.php
  - src/Models/Components/AtsJobResult.php
  - src/Models/Components/AtsJobSourceValue4.php
  - src/Models/Components/AtsJobValue.php
  - src/Models/Components/AtsJobsPaginated.php
  - src/Models/Components/AtsMoveApplicationRequestDto.php
  - src/Models/Components/AtsRejectApplicationRequestDto.php
  - src/Models/Components/AtsUpdateApplicationRequestDto.php
  - src/Models/Components/AtsUpdateApplicationRequestDtoApplicationStatus.php
  - src/Models/Components/AtsUpdateApplicationRequestDtoSource.php
  - src/Models/Components/AtsUpdateApplicationRequestDtoSourceValue4.php
  - src/Models/Components/AtsUpdateApplicationRequestDtoValue.php
  - src/Models/Components/AtsUpdateBackgroundCheckPackagesRequestDto.php
  - src/Models/Components/AtsUpdateBackgroundCheckResultRequestDto.php
  - src/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoCandidate.php
  - src/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoResult.php
  - src/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoScore.php
  - src/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValue4.php
  - src/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoValue.php
  - src/Models/Components/AtsUpdateCandidateRequestDto.php
  - src/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDto.php
  - src/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate.php
  - src/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue4.php
  - src/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoValue.php
  - src/Models/Components/AtsUpdateJobRequestDto.php
  - src/Models/Components/AtsUpdateJobRequestDtoConfidential.php
  - src/Models/Components/AtsUpdateJobRequestDtoJobStatus.php
  - src/Models/Components/AtsUpdateJobRequestDtoSourceValue4.php
  - src/Models/Components/AtsUpdateJobRequestDtoValue.php
  - src/Models/Components/AtsUpdateNotesRequestDto.php
  - src/Models/Components/AtsUpdateNotesRequestDtoSourceValue4.php
  - src/Models/Components/AtsUpdateNotesRequestDtoValue.php
  - src/Models/Components/AtsUpdateNotesRequestDtoVisibility.php
  - src/Models/Components/Attachment.php
  - src/Models/Components/AttachmentContentType.php
  - src/Models/Components/AttachmentSourceValue4.php
  - src/Models/Components/AttachmentValue.php
  - src/Models/Components/AuthenticationMetaItem.php
  - src/Models/Components/Author.php
  - src/Models/Components/AuthorModel.php
  - src/Models/Components/Avatar.php
  - src/Models/Components/BackgroundCheckPackage.php
  - src/Models/Components/BackgroundCheckPackagePaginated.php
  - src/Models/Components/BackgroundCheckPackageResult.php
  - src/Models/Components/BalanceUnit.php
  - src/Models/Components/BaseCurrency.php
  - src/Models/Components/BatchResultApiModel.php
  - src/Models/Components/BenefitType.php
  - src/Models/Components/Bot2.php
  - src/Models/Components/Campaign.php
  - src/Models/Components/CampaignResult.php
  - src/Models/Components/CampaignSourceValue4.php
  - src/Models/Components/CampaignSourceValueStatus4.php
  - src/Models/Components/CampaignStatus.php
  - src/Models/Components/CampaignStatusValue.php
  - src/Models/Components/CampaignValue.php
  - src/Models/Components/CampaignsPaginated.php
  - src/Models/Components/Candidate.php
  - src/Models/Components/CandidateEmail.php
  - src/Models/Components/CandidateResult.php
  - src/Models/Components/CandidatesPaginated.php
  - src/Models/Components/Categories.php
  - src/Models/Components/CategoriesPaginated.php
  - src/Models/Components/Category.php
  - src/Models/Components/CategoryActive2.php
  - src/Models/Components/CategoryLanguage.php
  - src/Models/Components/CategoryLanguageValue.php
  - src/Models/Components/CategoryLevelValue.php
  - src/Models/Components/CategoryResult.php
  - src/Models/Components/CategorySourceValue4.php
  - src/Models/Components/CategorySourceValueLanguage4.php
  - src/Models/Components/CategorySourceValueLevel4.php
  - src/Models/Components/CategoryValue.php
  - src/Models/Components/ChangeType.php
  - src/Models/Components/ChannelsEnum.php
  - src/Models/Components/ChannelsEnumSourceValue4.php
  - src/Models/Components/ChannelsEnumValue.php
  - src/Models/Components/CompaniesPaginated.php
  - src/Models/Components/Company.php
  - src/Models/Components/CompanyResult.php
  - src/Models/Components/Completion.php
  - src/Models/Components/CompletionLearningObjectType.php
  - src/Models/Components/CompletionLearningObjectTypeValue.php
  - src/Models/Components/CompletionResult.php
  - src/Models/Components/CompletionResult1.php
  - src/Models/Components/CompletionSourceValue4.php
  - src/Models/Components/CompletionSourceValueLearningObjectType4.php
  - src/Models/Components/CompletionValue.php
  - src/Models/Components/CompletionsPaginated.php
  - src/Models/Components/ConditionType.php
  - src/Models/Components/Confidential.php
  - src/Models/Components/ConnectSession.php
  - src/Models/Components/ConnectSessionAuthenticate.php
  - src/Models/Components/ConnectSessionCategories.php
  - src/Models/Components/ConnectSessionCreate.php
  - src/Models/Components/ConnectSessionMetadata.php
  - src/Models/Components/ConnectSessionTokenAuthLink.php
  - src/Models/Components/ConnectSessionTokenAuthLinkCategories.php
  - src/Models/Components/ConnectSessionTokenAuthLinkMetadata.php
  - src/Models/Components/ConnectSessionTokenAuthLinkType.php
  - src/Models/Components/ConnectSessionType.php
  - src/Models/Components/ConnectorsMeta.php
  - src/Models/Components/ConnectorsMetaCategory.php
  - src/Models/Components/Contact.php
  - src/Models/Components/ContactResult.php
  - src/Models/Components/ContactsPaginated.php
  - src/Models/Components/Content.php
  - src/Models/Components/ContentBlock.php
  - src/Models/Components/ContentBlockResult.php
  - src/Models/Components/ContentBlockSourceValue4.php
  - src/Models/Components/ContentBlockSourceValueStatus4.php
  - src/Models/Components/ContentBlockStatus.php
  - src/Models/Components/ContentBlockStatusValue.php
  - src/Models/Components/ContentBlockType.php
  - src/Models/Components/ContentBlockValue.php
  - src/Models/Components/ContentBlocksPaginated.php
  - src/Models/Components/ContentFileFormat.php
  - src/Models/Components/ContentPaginated.php
  - src/Models/Components/ContentResult.php
  - src/Models/Components/ContentSourceValue4.php
  - src/Models/Components/ContentType.php
  - src/Models/Components/ContentValue.php
  - src/Models/Components/ContractType.php
  - src/Models/Components/CostCenter.php
  - src/Models/Components/CostCenters.php
  - src/Models/Components/Country.php
  - src/Models/Components/CountryCodeEnum.php
  - src/Models/Components/CountryCodeEnumValue.php
  - src/Models/Components/Course.php
  - src/Models/Components/CourseActive2.php
  - src/Models/Components/CoursePaginated.php
  - src/Models/Components/CourseResult.php
  - src/Models/Components/CreateAnswer.php
  - src/Models/Components/CreateAnswerSourceValue4.php
  - src/Models/Components/CreateAnswerType.php
  - src/Models/Components/CreateAnswerValue.php
  - src/Models/Components/CreateAssessmentOrderResult.php
  - src/Models/Components/CreateBackgroundCheckOrderResult.php
  - src/Models/Components/CreateCategoriesApiModel.php
  - src/Models/Components/CreateCategoriesApiModelHierarchy.php
  - src/Models/Components/CreateCategoriesApiModelLanguage.php
  - src/Models/Components/CreateCategoriesApiModelLanguageValue.php
  - src/Models/Components/CreateCategoriesApiModelLevel.php
  - src/Models/Components/CreateCategoriesApiModelLevelValue.php
  - src/Models/Components/CreateCategoriesApiModelSourceValue4.php
  - src/Models/Components/CreateCategoriesApiModelSourceValueLanguage4.php
  - src/Models/Components/CreateCategoriesApiModelSourceValueLevel4.php
  - src/Models/Components/CreateCategoriesApiModelValue.php
  - src/Models/Components/CreateCostCenterApiModel.php
  - src/Models/Components/CreateEmploymentApiModel.php
  - src/Models/Components/CreateEmploymentApiModelContractType.php
  - src/Models/Components/CreateEmploymentApiModelContractTypeContractType.php
  - src/Models/Components/CreateEmploymentApiModelContractTypeValue.php
  - src/Models/Components/CreateEmploymentApiModelDurationUnit.php
  - src/Models/Components/CreateEmploymentApiModelEmploymentContractType.php
  - src/Models/Components/CreateEmploymentApiModelEmploymentContractTypeValue.php
  - src/Models/Components/CreateEmploymentApiModelEmploymentType.php
  - src/Models/Components/CreateEmploymentApiModelEmploymentTypeValue.php
  - src/Models/Components/CreateEmploymentApiModelGrade.php
  - src/Models/Components/CreateEmploymentApiModelPayFrequency.php
  - src/Models/Components/CreateEmploymentApiModelPayFrequencyValue.php
  - src/Models/Components/CreateEmploymentApiModelPayPeriod.php
  - src/Models/Components/CreateEmploymentApiModelSourceValue4.php
  - src/Models/Components/CreateEmploymentApiModelSourceValueContractType4.php
  - src/Models/Components/CreateEmploymentApiModelSourceValueEmploymentContractType4.php
  - src/Models/Components/CreateEmploymentApiModelSourceValueEmploymentType4.php
  - src/Models/Components/CreateEmploymentApiModelSourceValuePayFrequency4.php
  - src/Models/Components/CreateEmploymentApiModelSourceValueType4.php
  - src/Models/Components/CreateEmploymentApiModelSourceValueWorkTime4.php
  - src/Models/Components/CreateEmploymentApiModelType.php
  - src/Models/Components/CreateEmploymentApiModelTypeType.php
  - src/Models/Components/CreateEmploymentApiModelTypeValue.php
  - src/Models/Components/CreateEmploymentApiModelValue.php
  - src/Models/Components/CreateEmploymentApiModelWorkTime.php
  - src/Models/Components/CreateEmploymentApiModelWorkTimeValue.php
  - src/Models/Components/CreateHRISBenefit.php
  - src/Models/Components/CreateHRISBenefitBenefitType.php
  - src/Models/Components/CreateHRISBenefitSourceValue4.php
  - src/Models/Components/CreateHRISBenefitValue.php
  - src/Models/Components/CreateJournalLine.php
  - src/Models/Components/CreateMessage.php
  - src/Models/Components/CreateMessageMessageType.php
  - src/Models/Components/CreateMessageSourceValue4.php
  - src/Models/Components/CreateMessageValue.php
  - src/Models/Components/CreatePackage.php
  - src/Models/Components/CreateQuestionnaire.php
  - src/Models/Components/CreateResult.php
  - src/Models/Components/CreateResultDataApiModel.php
  - src/Models/Components/CreateSkillsApiModel.php
  - src/Models/Components/CreateSkillsApiModelHierarchy.php
  - src/Models/Components/CreateSkillsApiModelLanguage.php
  - src/Models/Components/CreateSkillsApiModelLanguageValue.php
  - src/Models/Components/CreateSkillsApiModelLevel.php
  - src/Models/Components/CreateSkillsApiModelLevelValue.php
  - src/Models/Components/CreateSkillsApiModelSourceValue4.php
  - src/Models/Components/CreateSkillsApiModelSourceValueLanguage4.php
  - src/Models/Components/CreateSkillsApiModelSourceValueLevel4.php
  - src/Models/Components/CreateSkillsApiModelValue.php
  - src/Models/Components/Credentials.php
  - src/Models/Components/CrmCreateContactRequestDto.php
  - src/Models/Components/CurrencyCode.php
  - src/Models/Components/CustomFieldDefinition.php
  - src/Models/Components/CustomFieldDefinitionResultApiModel.php
  - src/Models/Components/CustomFieldDefinitionSourceValue4.php
  - src/Models/Components/CustomFieldDefinitionType.php
  - src/Models/Components/CustomFieldDefinitionValue.php
  - src/Models/Components/CustomFieldDefinitionsPaginated.php
  - src/Models/Components/CustomFieldOption.php
  - src/Models/Components/CustomFields.php
  - src/Models/Components/CustomMappingError.php
  - src/Models/Components/DeleteResult.php
  - src/Models/Components/Department.php
  - src/Models/Components/DepartmentResult.php
  - src/Models/Components/DepartmentsPaginated.php
  - src/Models/Components/Description.php
  - src/Models/Components/Division.php
  - src/Models/Components/Document.php
  - src/Models/Components/DownloadApiModel.php
  - src/Models/Components/DownloadHeadersApiModel.php
  - src/Models/Components/Draft2.php
  - src/Models/Components/DriveResult.php
  - src/Models/Components/Drives.php
  - src/Models/Components/DrivesPaginated.php
  - src/Models/Components/DurationUnit.php
  - src/Models/Components/EmailMessageContents.php
  - src/Models/Components/EmailMessages.php
  - src/Models/Components/EmailMessagesSourceValue4.php
  - src/Models/Components/EmailMessagesValue.php
  - src/Models/Components/EmailTemplate.php
  - src/Models/Components/EmailTemplateResult.php
  - src/Models/Components/EmailTemplatesPaginated.php
  - src/Models/Components/Employee.php
  - src/Models/Components/EmployeeCompany.php
  - src/Models/Components/EmployeeCountry.php
  - src/Models/Components/EmployeeEmploymentContractTypeValue.php
  - src/Models/Components/EmployeeEmploymentStatusValue.php
  - src/Models/Components/EmployeeEmploymentTypeValue.php
  - src/Models/Components/EmployeeEthnicityValue.php
  - src/Models/Components/EmployeeHomeLocationCountry.php
  - src/Models/Components/EmployeeHomeLocationLocationType.php
  - src/Models/Components/EmployeeHomeLocationLocationTypeValue.php
  - src/Models/Components/EmployeeHomeLocationValue.php
  - src/Models/Components/EmployeeLocationType.php
  - src/Models/Components/EmployeeMaritalStatusValue.php
  - src/Models/Components/EmployeeNationalIdentityNumberCountry.php
  - src/Models/Components/EmployeeNationalIdentityNumberCountryValue.php
  - src/Models/Components/EmployeeNationalIdentityNumberValue.php
  - src/Models/Components/EmployeePreferredLanguageValue.php
  - src/Models/Components/EmployeeResult.php
  - src/Models/Components/EmployeeSourceValue4.php
  - src/Models/Components/EmployeeSourceValueEmploymentContractType4.php
  - src/Models/Components/EmployeeSourceValueEmploymentStatus4.php
  - src/Models/Components/EmployeeSourceValueEmploymentType4.php
  - src/Models/Components/EmployeeSourceValueEthnicity4.php
  - src/Models/Components/EmployeeSourceValueHomeLocation4.php
  - src/Models/Components/EmployeeSourceValueHomeLocationLocationType4.php
  - src/Models/Components/EmployeeSourceValueMaritalStatus4.php
  - src/Models/Components/EmployeeSourceValueNationalIdentityNumber4.php
  - src/Models/Components/EmployeeSourceValueNationalIdentityNumberCountry4.php
  - src/Models/Components/EmployeeSourceValuePreferredLanguage4.php
  - src/Models/Components/EmployeeSourceValueWorkLocation4.php
  - src/Models/Components/EmployeeSourceValueWorkLocationLocationType4.php
  - src/Models/Components/EmployeeType.php
  - src/Models/Components/EmployeeValue.php
  - src/Models/Components/EmployeeWorkLocationLocationTypeValue.php
  - src/Models/Components/EmployeeWorkLocationValue.php
  - src/Models/Components/EmployeesPaginated.php
  - src/Models/Components/Employment.php
  - src/Models/Components/EmploymentContractType.php
  - src/Models/Components/EmploymentContractTypeContractType.php
  - src/Models/Components/EmploymentContractTypeValue.php
  - src/Models/Components/EmploymentCostCenterType.php
  - src/Models/Components/EmploymentCostCenterValue.php
  - src/Models/Components/EmploymentDepartment.php
  - src/Models/Components/EmploymentDepartmentType.php
  - src/Models/Components/EmploymentDepartmentValue.php
  - src/Models/Components/EmploymentDivisionType.php
  - src/Models/Components/EmploymentDivisionValue.php
  - src/Models/Components/EmploymentDurationUnit.php
  - src/Models/Components/EmploymentEmploymentContractType.php
  - src/Models/Components/EmploymentEmploymentContractTypeValue.php
  - src/Models/Components/EmploymentEmploymentType.php
  - src/Models/Components/EmploymentEmploymentTypeValue.php
  - src/Models/Components/EmploymentManagerApiModel.php
  - src/Models/Components/EmploymentManagerApiModelSourceValue4.php
  - src/Models/Components/EmploymentManagerApiModelValue.php
  - src/Models/Components/EmploymentPayFrequencyValue.php
  - src/Models/Components/EmploymentResult.php
  - src/Models/Components/EmploymentSourceValue4.php
  - src/Models/Components/EmploymentSourceValueContractType4.php
  - src/Models/Components/EmploymentSourceValueCostCenter4.php
  - src/Models/Components/EmploymentSourceValueDepartment4.php
  - src/Models/Components/EmploymentSourceValueDivision4.php
  - src/Models/Components/EmploymentSourceValueEmploymentContractType4.php
  - src/Models/Components/EmploymentSourceValueEmploymentType4.php
  - src/Models/Components/EmploymentSourceValuePayFrequency4.php
  - src/Models/Components/EmploymentSourceValueType4.php
  - src/Models/Components/EmploymentSourceValueWorkTime4.php
  - src/Models/Components/EmploymentStatus.php
  - src/Models/Components/EmploymentType.php
  - src/Models/Components/EmploymentType1.php
  - src/Models/Components/EmploymentTypeType.php
  - src/Models/Components/EmploymentTypeValue.php
  - src/Models/Components/EmploymentValue.php
  - src/Models/Components/EmploymentWorkTimeValue.php
  - src/Models/Components/EmploymentsPaginated.php
  - src/Models/Components/EndHalfDay2.php
  - src/Models/Components/EntitySkillResult.php
  - src/Models/Components/EntitySkills.php
  - src/Models/Components/EntitySkillsActive2.php
  - src/Models/Components/EntitySkillsCreateRequestDto.php
  - src/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiency.php
  - src/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiency.php
  - src/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencyValue.php
  - src/Models/Components/EntitySkillsCreateRequestDtoSourceValue4.php
  - src/Models/Components/EntitySkillsCreateRequestDtoSourceValueMinimumProficiency4.php
  - src/Models/Components/EntitySkillsCreateRequestDtoValue.php
  - src/Models/Components/EntitySkillsMaximumProficiencyValue.php
  - src/Models/Components/EntitySkillsMinimumProficiencyValue.php
  - src/Models/Components/EntitySkillsPaginated.php
  - src/Models/Components/EntitySkillsSourceValue4.php
  - src/Models/Components/EntitySkillsSourceValueMaximumProficiency4.php
  - src/Models/Components/EntitySkillsSourceValueMinimumProficiency4.php
  - src/Models/Components/EntitySkillsValue.php
  - src/Models/Components/Ethnicity.php
  - src/Models/Components/Event.php
  - src/Models/Components/Field.php
  - src/Models/Components/FieldType.php
  - src/Models/Components/File.php
  - src/Models/Components/FileCategory.php
  - src/Models/Components/FileFileFormat.php
  - src/Models/Components/FileFormat.php
  - src/Models/Components/FileResult.php
  - src/Models/Components/FileSourceValue4.php
  - src/Models/Components/FileSourceValueFileFormat4.php
  - src/Models/Components/FileValue.php
  - src/Models/Components/Files.php
  - src/Models/Components/FilesFileFormat.php
  - src/Models/Components/FilesPaginated.php
  - src/Models/Components/FilesSourceValue4.php
  - src/Models/Components/FilesValue.php
  - src/Models/Components/FolderResult.php
  - src/Models/Components/Folders.php
  - src/Models/Components/FoldersHasChildren2.php
  - src/Models/Components/FoldersHasContent2.php
  - src/Models/Components/FoldersPaginated.php
  - src/Models/Components/Four.php
  - src/Models/Components/Gender.php
  - src/Models/Components/Grade.php
  - src/Models/Components/HRISBenefit.php
  - src/Models/Components/HRISBenefitResult.php
  - src/Models/Components/HRISBenefitSourceValue4.php
  - src/Models/Components/HRISBenefitValue.php
  - src/Models/Components/HRISBenefitsPaginated.php
  - src/Models/Components/HRISCostCenter.php
  - src/Models/Components/HRISCostCenterPaginated.php
  - src/Models/Components/HRISCostCenterResult.php
  - src/Models/Components/HRISCostCenterSourceValue4.php
  - src/Models/Components/HRISCostCenterType.php
  - src/Models/Components/HRISCostCenterValue.php
  - src/Models/Components/HRISDepartment.php
  - src/Models/Components/HRISDepartmentSourceValue4.php
  - src/Models/Components/HRISDepartmentType.php
  - src/Models/Components/HRISDepartmentValue.php
  - src/Models/Components/HRISDepartmentsPaginated.php
  - src/Models/Components/HRISDepartmentsResult.php
  - src/Models/Components/HRISDivision.php
  - src/Models/Components/HRISDivisionSourceValue4.php
  - src/Models/Components/HRISDivisionType.php
  - src/Models/Components/HRISDivisionValue.php
  - src/Models/Components/HRISDivisionsPaginated.php
  - src/Models/Components/HRISDivisionsResult.php
  - src/Models/Components/HRISGroup.php
  - src/Models/Components/HRISGroupSourceValue4.php
  - src/Models/Components/HRISGroupType.php
  - src/Models/Components/HRISGroupValue.php
  - src/Models/Components/HRISGroupsPaginated.php
  - src/Models/Components/HRISGroupsResult.php
  - src/Models/Components/HRISLocation.php
  - src/Models/Components/HRISLocationCountry.php
  - src/Models/Components/HRISLocationLocationTypeValue.php
  - src/Models/Components/HRISLocationResult.php
  - src/Models/Components/HRISLocationSourceValue4.php
  - src/Models/Components/HRISLocationSourceValueLocationType4.php
  - src/Models/Components/HRISLocationValue.php
  - src/Models/Components/HRISLocationsPaginated.php
  - src/Models/Components/HRISTeam.php
  - src/Models/Components/HRISTeamSourceValue4.php
  - src/Models/Components/HRISTeamType.php
  - src/Models/Components/HRISTeamValue.php
  - src/Models/Components/HRISTeamsPaginated.php
  - src/Models/Components/HRISTeamsResult.php
  - src/Models/Components/HasChildren2.php
  - src/Models/Components/HasContent2.php
  - src/Models/Components/Headers.php
  - src/Models/Components/Hierarchy.php
  - src/Models/Components/HomeLocation.php
  - src/Models/Components/HrisBatchDocumentUploadRequestDto.php
  - src/Models/Components/HrisCreateEmployeeRequestDto.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoAvatar.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoContractType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoCountry.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoDurationUnit.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmployment.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeContractType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeContractTypeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentPayFrequencyValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatus.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeTypeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEmploymentWorkTimeValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEthnicity.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoEthnicityValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoGender.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoGrade.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoHomeLocation.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationCountry.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatus.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumber.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountryValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoPayFrequency.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoPayPeriod.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguage.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValue4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmployment4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentContractType4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentContractTypeContractType4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentType4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentPayFrequency4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentStatus4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentType4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentTypeType4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentWorkTime4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEthnicity4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocation4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocationState4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueMaritalStatus4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueNationalIdentityNumber4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePreferredLanguage4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocation4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocationState4.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoState.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoType.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoWorkLocation.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationCountry.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationValue.php
  - src/Models/Components/HrisCreateEmployeeRequestDtoWorkTime.php
  - src/Models/Components/HrisCreateEmploymentRequestDto.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoContractType.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoContractTypeContractType.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoContractTypeValue.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoDurationUnit.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractType.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeValue.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoEmploymentType.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeValue.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoGrade.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoPayFrequency.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencyValue.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoPayPeriod.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValue4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValueContractType4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentContractType4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentType4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValuePayFrequency4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValueType4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoSourceValueWorkTime4.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoType.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoTypeType.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoTypeValue.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoValue.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoWorkTime.php
  - src/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeValue.php
  - src/Models/Components/HrisCreateTimeOffRequestDto.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDay2.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoReason.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoSourceValue4.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoSourceValueType4.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDay2.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoStatus.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoType.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoTypeValue.php
  - src/Models/Components/HrisCreateTimeOffRequestDtoValue.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDto.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoCategory.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoDocument.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoDocumentValue.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoFileFormat.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedBy.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValue4.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueDocument4.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueDocumentCategory4.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueType4.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoType.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeValue.php
  - src/Models/Components/HrisCreateWorkEligibilityRequestDtoValue.php
  - src/Models/Components/HrisDocumentApiModel.php
  - src/Models/Components/HrisDocumentApiModelCategory.php
  - src/Models/Components/HrisDocumentApiModelFileFormat.php
  - src/Models/Components/HrisDocumentApiModelFileFormatValue.php
  - src/Models/Components/HrisDocumentApiModelSourceValue4.php
  - src/Models/Components/HrisDocumentApiModelSourceValueFileFormat4.php
  - src/Models/Components/HrisDocumentApiModelSourceValueType4.php
  - src/Models/Components/HrisDocumentApiModelType.php
  - src/Models/Components/HrisDocumentApiModelTypeValue.php
  - src/Models/Components/HrisDocumentApiModelValue.php
  - src/Models/Components/HrisDocumentResult.php
  - src/Models/Components/HrisDocumentsPaginated.php
  - src/Models/Components/HrisDocumentsUploadRequestDto.php
  - src/Models/Components/HrisDocumentsUploadRequestDtoCategory.php
  - src/Models/Components/HrisDocumentsUploadRequestDtoCategoryValue.php
  - src/Models/Components/HrisDocumentsUploadRequestDtoConfidentialValue.php
  - src/Models/Components/HrisDocumentsUploadRequestDtoSourceValue4.php
  - src/Models/Components/HrisDocumentsUploadRequestDtoSourceValueConfidential4.php
  - src/Models/Components/HrisDocumentsUploadRequestDtoValue.php
  - src/Models/Components/HrisInviteEmployeeRequestDto.php
  - src/Models/Components/HrisJob.php
  - src/Models/Components/HrisJobResult.php
  - src/Models/Components/HrisJobSourceValue4.php
  - src/Models/Components/HrisJobStatus.php
  - src/Models/Components/HrisJobValue.php
  - src/Models/Components/HrisJobsPaginated.php
  - src/Models/Components/HrisShift.php
  - src/Models/Components/HrisShiftApprovalStatusValue.php
  - src/Models/Components/HrisShiftResult.php
  - src/Models/Components/HrisShiftResultApprovalStatus.php
  - src/Models/Components/HrisShiftResultData.php
  - src/Models/Components/HrisShiftResultDataValue.php
  - src/Models/Components/HrisShiftResultSourceValue4.php
  - src/Models/Components/HrisShiftResultSourceValueData4.php
  - src/Models/Components/HrisShiftResultStatus.php
  - src/Models/Components/HrisShiftResultValue.php
  - src/Models/Components/HrisShiftSourceValue4.php
  - src/Models/Components/HrisShiftSourceValueApprovalStatus4.php
  - src/Models/Components/HrisShiftStatus.php
  - src/Models/Components/HrisShiftValue.php
  - src/Models/Components/HrisShiftsPaginated.php
  - src/Models/Components/HrisUpdateEmployeeRequestDto.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoAvatar.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoContractType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoCountry.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoDurationUnit.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmployment.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeContractType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeContractTypeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentPayFrequencyValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatus.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeTypeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentWorkTimeValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEthnicity.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoEthnicityValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoGender.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoGrade.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocation.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationCountry.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatus.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumber.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountryValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequency.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriod.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguage.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValue4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmployment4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentContractType4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentContractTypeContractType4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentType4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentPayFrequency4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentStatus4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentType4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentTypeType4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentWorkTime4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEthnicity4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocation4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocationState4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueMaritalStatus4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueNationalIdentityNumber4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePreferredLanguage4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocation4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocationState4.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoState.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoType.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocation.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationCountry.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationState.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationValue.php
  - src/Models/Components/HrisUpdateEmployeeRequestDtoWorkTime.php
  - src/Models/Components/HrisUpdateEmploymentRequestDto.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoContractType.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoContractTypeContractType.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoContractTypeValue.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoDurationUnit.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractType.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeValue.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentType.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeValue.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoGrade.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequency.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencyValue.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriod.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValue4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueContractType4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentContractType4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentType4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValuePayFrequency4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueType4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueWorkTime4.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoType.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoTypeType.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoTypeValue.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoValue.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoWorkTime.php
  - src/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeValue.php
  - src/Models/Components/IamGroup.php
  - src/Models/Components/IamGroupResult.php
  - src/Models/Components/IamGroupSourceValue4.php
  - src/Models/Components/IamGroupType.php
  - src/Models/Components/IamGroupValue.php
  - src/Models/Components/IamGroupsPaginated.php
  - src/Models/Components/IamMfaTypeEnum.php
  - src/Models/Components/IamMfaTypeEnumSourceValue4.php
  - src/Models/Components/IamMfaTypeEnumValue.php
  - src/Models/Components/IamPermission.php
  - src/Models/Components/IamPermissionSourceValue4.php
  - src/Models/Components/IamPermissionType.php
  - src/Models/Components/IamPermissionValue.php
  - src/Models/Components/IamPoliciesPaginated.php
  - src/Models/Components/IamPolicy.php
  - src/Models/Components/IamPolicyResult.php
  - src/Models/Components/IamResource.php
  - src/Models/Components/IamResourceSourceValue4.php
  - src/Models/Components/IamResourceType.php
  - src/Models/Components/IamResourceValue.php
  - src/Models/Components/IamRole.php
  - src/Models/Components/IamRoleResult.php
  - src/Models/Components/IamRoleSourceValue4.php
  - src/Models/Components/IamRoleType.php
  - src/Models/Components/IamRoleValue.php
  - src/Models/Components/IamRolesPaginated.php
  - src/Models/Components/IamUpdateUserRequestDto.php
  - src/Models/Components/IamUpdateUserRequestDtoIsBotUser2.php
  - src/Models/Components/IamUpdateUserRequestDtoSourceValue4.php
  - src/Models/Components/IamUpdateUserRequestDtoStatus.php
  - src/Models/Components/IamUpdateUserRequestDtoValue.php
  - src/Models/Components/IamUser.php
  - src/Models/Components/IamUserAvatar.php
  - src/Models/Components/IamUserAvatarValue.php
  - src/Models/Components/IamUserCategory.php
  - src/Models/Components/IamUserFileFormat.php
  - src/Models/Components/IamUserResult.php
  - src/Models/Components/IamUserSourceValue4.php
  - src/Models/Components/IamUserSourceValueAvatar4.php
  - src/Models/Components/IamUserSourceValueAvatarFileFormat4.php
  - src/Models/Components/IamUserStatus.php
  - src/Models/Components/IamUserValue.php
  - src/Models/Components/IamUsersPaginated.php
  - src/Models/Components/Id.php
  - src/Models/Components/Images.php
  - src/Models/Components/InAppMessages.php
  - src/Models/Components/InAppMessagesMessageContent.php
  - src/Models/Components/InAppMessagesMessageType.php
  - src/Models/Components/InAppMessagesSourceValue4.php
  - src/Models/Components/InAppMessagesValue.php
  - src/Models/Components/InAppTemplate.php
  - src/Models/Components/InAppTemplateResult.php
  - src/Models/Components/InAppTemplatesPaginated.php
  - src/Models/Components/Input.php
  - src/Models/Components/Internal.php
  - src/Models/Components/Internal2.php
  - src/Models/Components/Interview.php
  - src/Models/Components/InterviewInterviewStage.php
  - src/Models/Components/InterviewInterviewStatus.php
  - src/Models/Components/InterviewPart.php
  - src/Models/Components/InterviewPartSourceValue4.php
  - src/Models/Components/InterviewPartType.php
  - src/Models/Components/InterviewPartValue.php
  - src/Models/Components/InterviewSourceValue4.php
  - src/Models/Components/InterviewStage.php
  - src/Models/Components/InterviewStageResult.php
  - src/Models/Components/InterviewStagesPaginated.php
  - src/Models/Components/InterviewStatus.php
  - src/Models/Components/InterviewValue.php
  - src/Models/Components/Interviewer.php
  - src/Models/Components/InterviewsPaginated.php
  - src/Models/Components/InterviewsResult.php
  - src/Models/Components/InviteEmployeeResult.php
  - src/Models/Components/IsBotUser2.php
  - src/Models/Components/IsPaid2.php
  - src/Models/Components/IsRoot2.php
  - src/Models/Components/IssuedBy.php
  - src/Models/Components/Job.php
  - src/Models/Components/JobDescription.php
  - src/Models/Components/JobPosting.php
  - src/Models/Components/JobPostingCompensation.php
  - src/Models/Components/JobPostingCompensationPayFrequency.php
  - src/Models/Components/JobPostingCompensationPayFrequencyValue.php
  - src/Models/Components/JobPostingCompensationPayPeriod.php
  - src/Models/Components/JobPostingCompensationPayPeriodValue.php
  - src/Models/Components/JobPostingCompensationSourceValue4.php
  - src/Models/Components/JobPostingCompensationSourceValuePayFrequency4.php
  - src/Models/Components/JobPostingCompensationSourceValuePayPeriod4.php
  - src/Models/Components/JobPostingCompensationType.php
  - src/Models/Components/JobPostingCompensationValue.php
  - src/Models/Components/JobPostingContent.php
  - src/Models/Components/JobPostingContentSection.php
  - src/Models/Components/JobPostingContentSectionSourceValue4.php
  - src/Models/Components/JobPostingContentSectionType.php
  - src/Models/Components/JobPostingContentSectionValue.php
  - src/Models/Components/JobPostingEmploymentContractType.php
  - src/Models/Components/JobPostingEmploymentContractTypeValue.php
  - src/Models/Components/JobPostingEmploymentType.php
  - src/Models/Components/JobPostingEmploymentTypeValue.php
  - src/Models/Components/JobPostingLocation.php
  - src/Models/Components/JobPostingQuestionnaire.php
  - src/Models/Components/JobPostingResult.php
  - src/Models/Components/JobPostingSourceValue4.php
  - src/Models/Components/JobPostingSourceValueEmploymentContractType4.php
  - src/Models/Components/JobPostingSourceValueEmploymentType4.php
  - src/Models/Components/JobPostingStatus.php
  - src/Models/Components/JobPostingValue.php
  - src/Models/Components/JobPostingsPaginated.php
  - src/Models/Components/JobStatus.php
  - src/Models/Components/JournalLine.php
  - src/Models/Components/JournalLineCurrencyCode.php
  - src/Models/Components/JournalLineCurrencyCodeValue.php
  - src/Models/Components/JournalLineSourceValue4.php
  - src/Models/Components/JournalLineSourceValueCurrencyCode4.php
  - src/Models/Components/JournalLineValue.php
  - src/Models/Components/JsonRpcMessageDto.php
  - src/Models/Components/Label.php
  - src/Models/Components/LaborType.php
  - src/Models/Components/Language.php
  - src/Models/Components/LanguageEnum.php
  - src/Models/Components/LanguageEnumSourceValue4.php
  - src/Models/Components/LanguageEnumValue.php
  - src/Models/Components/LearningObjectType.php
  - src/Models/Components/Level.php
  - src/Models/Components/LinkedAccount.php
  - src/Models/Components/LinkedAccountMeta.php
  - src/Models/Components/LinkedAccountMetaCategory.php
  - src/Models/Components/LinkedAccountType.php
  - src/Models/Components/ListItem.php
  - src/Models/Components/ListResult.php
  - src/Models/Components/ListSourceValue4.php
  - src/Models/Components/ListT.php
  - src/Models/Components/ListType.php
  - src/Models/Components/ListValue.php
  - src/Models/Components/ListsPaginated.php
  - src/Models/Components/LmsBatchUpsertContentRequestDto.php
  - src/Models/Components/LmsCreateAssignmentRequestDto.php
  - src/Models/Components/LmsCreateAssignmentRequestDtoSourceValue4.php
  - src/Models/Components/LmsCreateAssignmentRequestDtoStatus.php
  - src/Models/Components/LmsCreateAssignmentRequestDtoValue.php
  - src/Models/Components/LmsCreateCompletionRequestDto.php
  - src/Models/Components/LmsCreateCompletionRequestDtoResult.php
  - src/Models/Components/LmsCreateCompletionRequestDtoSourceValue4.php
  - src/Models/Components/LmsCreateCompletionRequestDtoValue.php
  - src/Models/Components/LmsCreateContentRequestDto.php
  - src/Models/Components/LmsCreateContentRequestDtoActive2.php
  - src/Models/Components/LmsCreateContentRequestDtoContentType.php
  - src/Models/Components/LmsCreateContentRequestDtoSourceValue4.php
  - src/Models/Components/LmsCreateContentRequestDtoValue.php
  - src/Models/Components/LmsUpsertContentRequestDto.php
  - src/Models/Components/LmsUpsertContentRequestDtoActive2.php
  - src/Models/Components/LmsUpsertContentRequestDtoContentType.php
  - src/Models/Components/LmsUpsertContentRequestDtoSourceValue4.php
  - src/Models/Components/LmsUpsertContentRequestDtoValue.php
  - src/Models/Components/LmsUser.php
  - src/Models/Components/LmsUserActive2.php
  - src/Models/Components/LocalizationModel.php
  - src/Models/Components/LocalizationModelLanguage.php
  - src/Models/Components/LocalizationModelSourceValue4.php
  - src/Models/Components/LocalizationModelValue.php
  - src/Models/Components/Location.php
  - src/Models/Components/LocationType.php
  - src/Models/Components/MaritalStatus.php
  - src/Models/Components/MarketingCreateContentBlocksRequestDto.php
  - src/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValue4.php
  - src/Models/Components/MarketingCreateContentBlocksRequestDtoType.php
  - src/Models/Components/MarketingCreateContentBlocksRequestDtoValue.php
  - src/Models/Components/MarketingCreateEmailTemplateRequestDto.php
  - src/Models/Components/MarketingCreateInAppTemplateRequestDto.php
  - src/Models/Components/MarketingCreatePushTemplateRequestDto.php
  - src/Models/Components/MarketingCreateSmsTemplateRequestDto.php
  - src/Models/Components/MarketingCreateTemplateRequestDto.php
  - src/Models/Components/MaximumProficiency.php
  - src/Models/Components/Message.php
  - src/Models/Components/MessageContent.php
  - src/Models/Components/MessageContentEmailMessageContents.php
  - src/Models/Components/MessageContentPushMessageContents.php
  - src/Models/Components/MessageContentSmsMessageContents.php
  - src/Models/Components/MessageMessageType.php
  - src/Models/Components/MessageSourceValue4.php
  - src/Models/Components/MessageType.php
  - src/Models/Components/MessageValue.php
  - src/Models/Components/MessagingAttachment.php
  - src/Models/Components/MessagingAttachmentResult.php
  - src/Models/Components/MessagingAttachmentResultData.php
  - src/Models/Components/MessagingAttachmentsPaginated.php
  - src/Models/Components/MessagingConversation.php
  - src/Models/Components/MessagingConversationResult.php
  - src/Models/Components/MessagingConversationResultData.php
  - src/Models/Components/MessagingConversationResultPrivate2.php
  - src/Models/Components/MessagingConversationsPaginated.php
  - src/Models/Components/MessagingCreateConversationRequestDto.php
  - src/Models/Components/MessagingCreateConversationRequestDtoPrivate2.php
  - src/Models/Components/MessagingMessage.php
  - src/Models/Components/MessagingMessageActive2.php
  - src/Models/Components/MessagingMessageContent.php
  - src/Models/Components/MessagingMessageResult.php
  - src/Models/Components/MessagingMessageResultActive2.php
  - src/Models/Components/MessagingMessageResultAuthor.php
  - src/Models/Components/MessagingMessageResultContent.php
  - src/Models/Components/MessagingMessageResultData.php
  - src/Models/Components/MessagingMessageSendRequestDto.php
  - src/Models/Components/MessagingMessagesPaginated.php
  - src/Models/Components/MessagingUser.php
  - src/Models/Components/MessagingUserActive2.php
  - src/Models/Components/MessagingUserResult.php
  - src/Models/Components/MessagingUserResultActive2.php
  - src/Models/Components/MessagingUserResultBot2.php
  - src/Models/Components/MessagingUserResultData.php
  - src/Models/Components/MessagingUsersPaginated.php
  - src/Models/Components/Metadata.php
  - src/Models/Components/Method.php
  - src/Models/Components/MinimumProficiency.php
  - src/Models/Components/MoveApplicationResult.php
  - src/Models/Components/NationalIdentityNumber.php
  - src/Models/Components/NationalIdentityNumberApiModel.php
  - src/Models/Components/NationalIdentityNumberApiModelCountryValue.php
  - src/Models/Components/NationalIdentityNumberApiModelSourceValue4.php
  - src/Models/Components/NationalIdentityNumberApiModelSourceValueCountry4.php
  - src/Models/Components/NationalIdentityNumberApiModelType.php
  - src/Models/Components/NationalIdentityNumberApiModelValue.php
  - src/Models/Components/Note.php
  - src/Models/Components/NoteContentApiModel.php
  - src/Models/Components/NoteResult.php
  - src/Models/Components/NoteSourceValue4.php
  - src/Models/Components/NoteValue.php
  - src/Models/Components/NotesPaginated.php
  - src/Models/Components/Offer.php
  - src/Models/Components/OfferHistory.php
  - src/Models/Components/OfferSourceValue4.php
  - src/Models/Components/OfferStatus.php
  - src/Models/Components/OfferValue.php
  - src/Models/Components/OffersPaginated.php
  - src/Models/Components/OffersResult.php
  - src/Models/Components/One.php
  - src/Models/Components/Organization.php
  - src/Models/Components/OverallRecommendation.php
  - src/Models/Components/Package.php
  - src/Models/Components/Params.php
  - src/Models/Components/ParentQuestion.php
  - src/Models/Components/PatchAccountExternalDto.php
  - src/Models/Components/PatchAccountExternalDtoCredentials.php
  - src/Models/Components/PatchAccountExternalDtoMetadata.php
  - src/Models/Components/PatchAccountExternalDtoSetupInformation.php
  - src/Models/Components/PatchAccountExternalDtoType.php
  - src/Models/Components/PayFrequency.php
  - src/Models/Components/PayPeriod.php
  - src/Models/Components/PhoneNumber.php
  - src/Models/Components/PhoneNumberType.php
  - src/Models/Components/PlatformLog.php
  - src/Models/Components/PlatformLogsPaginated.php
  - src/Models/Components/Policy.php
  - src/Models/Components/Position.php
  - src/Models/Components/PositionResult.php
  - src/Models/Components/PositionSourceValue4.php
  - src/Models/Components/PositionStatus.php
  - src/Models/Components/PositionValue.php
  - src/Models/Components/PositionsPaginated.php
  - src/Models/Components/PreferredLanguage.php
  - src/Models/Components/Priority.php
  - src/Models/Components/Private2.php
  - src/Models/Components/ProviderError.php
  - src/Models/Components/ProviderErrorApiModel.php
  - src/Models/Components/ProviderErrorApiModelHeaders.php
  - src/Models/Components/ProviderErrorApiModelRaw.php
  - src/Models/Components/ProxyRequestBody.php
  - src/Models/Components/PushMessageContents.php
  - src/Models/Components/PushMessages.php
  - src/Models/Components/PushMessagesMessageContent.php
  - src/Models/Components/PushMessagesMessageType.php
  - src/Models/Components/PushMessagesSourceValue4.php
  - src/Models/Components/PushMessagesValue.php
  - src/Models/Components/PushTemplate.php
  - src/Models/Components/PushTemplateResult.php
  - src/Models/Components/PushTemplatesPaginated.php
  - src/Models/Components/Question.php
  - src/Models/Components/QuestionMultipleChoiceAnswers.php
  - src/Models/Components/QuestionParentQuestionValue.php
  - src/Models/Components/QuestionRequired2.php
  - src/Models/Components/QuestionSourceValue4.php
  - src/Models/Components/QuestionSourceValueParentQuestion4.php
  - src/Models/Components/QuestionType.php
  - src/Models/Components/QuestionValue.php
  - src/Models/Components/Questionnaire.php
  - src/Models/Components/Raw.php
  - src/Models/Components/RawResponse.php
  - src/Models/Components/Reason.php
  - src/Models/Components/Reference.php
  - src/Models/Components/ReferenceActive2.php
  - src/Models/Components/ReferencePaginated.php
  - src/Models/Components/ReferenceResult.php
  - src/Models/Components/RejectApplicationResult.php
  - src/Models/Components/RejectedReason.php
  - src/Models/Components/RejectedReasonResult.php
  - src/Models/Components/RejectedReasonSourceValue4.php
  - src/Models/Components/RejectedReasonType.php
  - src/Models/Components/RejectedReasonValue.php
  - src/Models/Components/RejectedReasonsPaginated.php
  - src/Models/Components/Request.php
  - src/Models/Components/Requester.php
  - src/Models/Components/Required2.php
  - src/Models/Components/Resources.php
  - src/Models/Components/Response.php
  - src/Models/Components/Result.php
  - src/Models/Components/ResultLink.php
  - src/Models/Components/Role.php
  - src/Models/Components/RoleType.php
  - src/Models/Components/ScheduleType.php
  - src/Models/Components/ScheduledInterview.php
  - src/Models/Components/ScheduledInterviewInterviewStage.php
  - src/Models/Components/ScheduledInterviewSourceValue4.php
  - src/Models/Components/ScheduledInterviewValue.php
  - src/Models/Components/ScheduledInterviewsPaginated.php
  - src/Models/Components/ScheduledInterviewsResult.php
  - src/Models/Components/SchemeBasic.php
  - src/Models/Components/Score.php
  - src/Models/Components/Scorecard.php
  - src/Models/Components/ScorecardSection.php
  - src/Models/Components/ScorecardsPaginated.php
  - src/Models/Components/ScorecardsResult.php
  - src/Models/Components/ScreeningCreateOrderRequestDto.php
  - src/Models/Components/ScreeningOrderCandidate.php
  - src/Models/Components/ScreeningPackage.php
  - src/Models/Components/ScreeningPackageResult.php
  - src/Models/Components/ScreeningPackagesPaginated.php
  - src/Models/Components/ScreeningResult.php
  - src/Models/Components/ScreeningResultScore.php
  - src/Models/Components/ScreeningResultStatus.php
  - src/Models/Components/ScreeningResultWebhook.php
  - src/Models/Components/Secrets.php
  - src/Models/Components/Security.php
  - src/Models/Components/SetupInformation.php
  - src/Models/Components/ShiftBreak.php
  - src/Models/Components/SkillResult.php
  - src/Models/Components/Skills.php
  - src/Models/Components/SkillsActive2.php
  - src/Models/Components/SkillsHierarchy.php
  - src/Models/Components/SkillsLanguage.php
  - src/Models/Components/SkillsLanguageValue.php
  - src/Models/Components/SkillsLevel.php
  - src/Models/Components/SkillsLevelValue.php
  - src/Models/Components/SkillsPaginated.php
  - src/Models/Components/SkillsSourceValue4.php
  - src/Models/Components/SkillsSourceValueLanguage4.php
  - src/Models/Components/SkillsSourceValueLevel4.php
  - src/Models/Components/SkillsValue.php
  - src/Models/Components/SmsMessageContents.php
  - src/Models/Components/SmsMessages.php
  - src/Models/Components/SmsMessagesMessageContent.php
  - src/Models/Components/SmsMessagesMessageType.php
  - src/Models/Components/SmsMessagesSourceValue4.php
  - src/Models/Components/SmsMessagesValue.php
  - src/Models/Components/SmsTemplate.php
  - src/Models/Components/SmsTemplateResult.php
  - src/Models/Components/SmsTemplatesPaginated.php
  - src/Models/Components/SocialLink.php
  - src/Models/Components/Source.php
  - src/Models/Components/SourceValue4.php
  - src/Models/Components/StartHalfDay2.php
  - src/Models/Components/State.php
  - src/Models/Components/Status.php
  - src/Models/Components/StatusReason.php
  - src/Models/Components/StepLog.php
  - src/Models/Components/StepLogPartial.php
  - src/Models/Components/StepLogRequest.php
  - src/Models/Components/StepLogResponse.php
  - src/Models/Components/StepLogUrl.php
  - src/Models/Components/StepLogsPaginated.php
  - src/Models/Components/Task.php
  - src/Models/Components/TaskCommentApiModel.php
  - src/Models/Components/TaskResult.php
  - src/Models/Components/TaskResultData.php
  - src/Models/Components/TaskResultDataValue.php
  - src/Models/Components/TaskResultSourceValue4.php
  - src/Models/Components/TaskResultSourceValueData4.php
  - src/Models/Components/TaskResultStatus.php
  - src/Models/Components/TaskResultType.php
  - src/Models/Components/TaskResultValue.php
  - src/Models/Components/TaskSourceValue4.php
  - src/Models/Components/TaskSourceValueStatus4.php
  - src/Models/Components/TaskStatus.php
  - src/Models/Components/TaskStatusValue.php
  - src/Models/Components/TaskType.php
  - src/Models/Components/TaskValue.php
  - src/Models/Components/TasksPaginated.php
  - src/Models/Components/Template.php
  - src/Models/Components/TemplateResult.php
  - src/Models/Components/TemplatesPaginated.php
  - src/Models/Components/TicketingAttachment.php
  - src/Models/Components/TicketingAttachmentFileFormat.php
  - src/Models/Components/TicketingAttachmentResult.php
  - src/Models/Components/TicketingAttachmentResultData.php
  - src/Models/Components/TicketingAttachmentResultFileFormat.php
  - src/Models/Components/TicketingAttachmentResultSourceValue4.php
  - src/Models/Components/TicketingAttachmentResultValue.php
  - src/Models/Components/TicketingAttachmentSourceValue4.php
  - src/Models/Components/TicketingAttachmentValue.php
  - src/Models/Components/TicketingAttachmentsPaginated.php
  - src/Models/Components/TicketingComment.php
  - src/Models/Components/TicketingCommentInternal2.php
  - src/Models/Components/TicketingCommentResult.php
  - src/Models/Components/TicketingCommentResultData.php
  - src/Models/Components/TicketingCommentResultInternal2.php
  - src/Models/Components/TicketingCommentsPaginated.php
  - src/Models/Components/TicketingComponent.php
  - src/Models/Components/TicketingComponentResult.php
  - src/Models/Components/TicketingComponentResultData.php
  - src/Models/Components/TicketingComponentsPaginated.php
  - src/Models/Components/TicketingContent.php
  - src/Models/Components/TicketingProject.php
  - src/Models/Components/TicketingProjectResult.php
  - src/Models/Components/TicketingProjectResultData.php
  - src/Models/Components/TicketingProjectsPaginated.php
  - src/Models/Components/TicketingReadTicket.php
  - src/Models/Components/TicketingReadTicketSourceValue4.php
  - src/Models/Components/TicketingReadTicketSourceValueStatus4.php
  - src/Models/Components/TicketingReadTicketStatus.php
  - src/Models/Components/TicketingReadTicketStatusType.php
  - src/Models/Components/TicketingReadTicketStatusValue.php
  - src/Models/Components/TicketingReadTicketType.php
  - src/Models/Components/TicketingReadTicketValue.php
  - src/Models/Components/TicketingTicketCreateRequestDto.php
  - src/Models/Components/TicketingTicketCreateRequestDtoPriority.php
  - src/Models/Components/TicketingTicketCreateRequestDtoSourceValue4.php
  - src/Models/Components/TicketingTicketCreateRequestDtoValue.php
  - src/Models/Components/TicketingTicketResult.php
  - src/Models/Components/TicketingTicketResultData.php
  - src/Models/Components/TicketingTicketResultDataType.php
  - src/Models/Components/TicketingTicketResultDataValue.php
  - src/Models/Components/TicketingTicketResultOrganization.php
  - src/Models/Components/TicketingTicketResultPriority.php
  - src/Models/Components/TicketingTicketResultSourceValue4.php
  - src/Models/Components/TicketingTicketResultSourceValueData4.php
  - src/Models/Components/TicketingTicketResultStatus.php
  - src/Models/Components/TicketingTicketResultType.php
  - src/Models/Components/TicketingTicketResultValue.php
  - src/Models/Components/TicketingTicketStatus.php
  - src/Models/Components/TicketingTicketStatusSourceValue4.php
  - src/Models/Components/TicketingTicketStatusType.php
  - src/Models/Components/TicketingTicketStatusValue.php
  - src/Models/Components/TicketingTicketStatusesPaginated.php
  - src/Models/Components/TicketingTicketType.php
  - src/Models/Components/TicketingTicketTypePaginated.php
  - src/Models/Components/TicketingTicketTypeResult.php
  - src/Models/Components/TicketingTicketTypeResultData.php
  - src/Models/Components/TicketingTicketUpdateRequestDto.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoPriority.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoSourceValue4.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoSourceValueStatus4.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoStatus.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoStatusValue.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoType.php
  - src/Models/Components/TicketingTicketUpdateRequestDtoValue.php
  - src/Models/Components/TicketingTicketsPaginated.php
  - src/Models/Components/TicketingUser.php
  - src/Models/Components/TicketingUserActive2.php
  - src/Models/Components/TicketingUserResult.php
  - src/Models/Components/TicketingUserResultActive2.php
  - src/Models/Components/TicketingUserResultData.php
  - src/Models/Components/TicketingUserResultSourceValue4.php
  - src/Models/Components/TicketingUserResultType.php
  - src/Models/Components/TicketingUserResultValue.php
  - src/Models/Components/TicketingUserSourceValue4.php
  - src/Models/Components/TicketingUserType.php
  - src/Models/Components/TicketingUserValue.php
  - src/Models/Components/TicketingUsersPaginated.php
  - src/Models/Components/TimeEntries.php
  - src/Models/Components/TimeEntriesActive2.php
  - src/Models/Components/TimeEntriesPaginated.php
  - src/Models/Components/TimeEntriesResult.php
  - src/Models/Components/TimeEntriesSourceValue4.php
  - src/Models/Components/TimeEntriesStatus.php
  - src/Models/Components/TimeEntriesValue.php
  - src/Models/Components/TimeOff.php
  - src/Models/Components/TimeOffBalanceResult.php
  - src/Models/Components/TimeOffBalances.php
  - src/Models/Components/TimeOffBalancesDurationUnit.php
  - src/Models/Components/TimeOffBalancesPaginated.php
  - src/Models/Components/TimeOffBalancesPolicy.php
  - src/Models/Components/TimeOffBalancesPolicyTypeValue.php
  - src/Models/Components/TimeOffBalancesPolicyValue.php
  - src/Models/Components/TimeOffBalancesSourceValue4.php
  - src/Models/Components/TimeOffBalancesSourceValuePolicy4.php
  - src/Models/Components/TimeOffBalancesSourceValuePolicyType4.php
  - src/Models/Components/TimeOffBalancesType.php
  - src/Models/Components/TimeOffBalancesValue.php
  - src/Models/Components/TimeOffDurationUnit.php
  - src/Models/Components/TimeOffPaginated.php
  - src/Models/Components/TimeOffPolicies.php
  - src/Models/Components/TimeOffPoliciesDurationUnitValue.php
  - src/Models/Components/TimeOffPoliciesPaginated.php
  - src/Models/Components/TimeOffPoliciesSourceValue4.php
  - src/Models/Components/TimeOffPoliciesSourceValueDurationUnit4.php
  - src/Models/Components/TimeOffPoliciesType.php
  - src/Models/Components/TimeOffPoliciesValue.php
  - src/Models/Components/TimeOffPolicyDurationUnitValue.php
  - src/Models/Components/TimeOffPolicyResult.php
  - src/Models/Components/TimeOffPolicyType.php
  - src/Models/Components/TimeOffPolicyValue.php
  - src/Models/Components/TimeOffReason.php
  - src/Models/Components/TimeOffResult.php
  - src/Models/Components/TimeOffSourceValue4.php
  - src/Models/Components/TimeOffSourceValuePolicy4.php
  - src/Models/Components/TimeOffSourceValuePolicyDurationUnit4.php
  - src/Models/Components/TimeOffSourceValueType4.php
  - src/Models/Components/TimeOffStatus.php
  - src/Models/Components/TimeOffType.php
  - src/Models/Components/TimeOffTypeValue.php
  - src/Models/Components/TimeOffValue.php
  - src/Models/Components/Two.php
  - src/Models/Components/Type.php
  - src/Models/Components/UnifiedLogResult.php
  - src/Models/Components/UnifiedLogs.php
  - src/Models/Components/UnifiedLogsPaginated.php
  - src/Models/Components/UnifiedLogsPartial.php
  - src/Models/Components/UnifiedUploadRequestDto.php
  - src/Models/Components/UnifiedUploadRequestDtoCategory.php
  - src/Models/Components/UnifiedUploadRequestDtoConfidential.php
  - src/Models/Components/UnifiedUploadRequestDtoConfidentialValue.php
  - src/Models/Components/UnifiedUploadRequestDtoFileFormat.php
  - src/Models/Components/UnifiedUploadRequestDtoSourceValue4.php
  - src/Models/Components/UnifiedUploadRequestDtoSourceValueConfidential4.php
  - src/Models/Components/UnifiedUploadRequestDtoValue.php
  - src/Models/Components/UnifiedWarningApiModel.php
  - src/Models/Components/UpdatePackage.php
  - src/Models/Components/UpdateResult.php
  - src/Models/Components/UpdateTaskRequestDto.php
  - src/Models/Components/UpdateTaskRequestDtoSourceValue4.php
  - src/Models/Components/UpdateTaskRequestDtoStatus.php
  - src/Models/Components/UpdateTaskRequestDtoValue.php
  - src/Models/Components/UpsertResult.php
  - src/Models/Components/UpsertResultDataExternalReferenceModel.php
  - src/Models/Components/Url.php
  - src/Models/Components/UserResult.php
  - src/Models/Components/UsersPaginated.php
  - src/Models/Components/Value4.php
  - src/Models/Components/Visibility.php
  - src/Models/Components/WorkEligibility.php
  - src/Models/Components/WorkEligibilityCategory.php
  - src/Models/Components/WorkEligibilityDocumentValue.php
  - src/Models/Components/WorkEligibilityFileFormat.php
  - src/Models/Components/WorkEligibilityIssuedByValue.php
  - src/Models/Components/WorkEligibilityPaginated.php
  - src/Models/Components/WorkEligibilityResult.php
  - src/Models/Components/WorkEligibilitySourceValue4.php
  - src/Models/Components/WorkEligibilitySourceValueDocument4.php
  - src/Models/Components/WorkEligibilitySourceValueDocumentFileFormat4.php
  - src/Models/Components/WorkEligibilitySourceValueIssuedBy4.php
  - src/Models/Components/WorkEligibilityType.php
  - src/Models/Components/WorkEligibilityValue.php
  - src/Models/Components/WorkLocation.php
  - src/Models/Components/WorkTime.php
  - src/Models/Components/WriteResultApiModel.php
  - src/Models/Errors/BadGatewayResponse.php
  - src/Models/Errors/BadGatewayResponseThrowable.php
  - src/Models/Errors/BadRequestResponse.php
  - src/Models/Errors/BadRequestResponseThrowable.php
  - src/Models/Errors/ConflictResponse.php
  - src/Models/Errors/ConflictResponseThrowable.php
  - src/Models/Errors/Data.php
  - src/Models/Errors/ForbiddenResponse.php
  - src/Models/Errors/ForbiddenResponseThrowable.php
  - src/Models/Errors/Headers.php
  - src/Models/Errors/InternalServerErrorResponse.php
  - src/Models/Errors/InternalServerErrorResponseThrowable.php
  - src/Models/Errors/NotFoundResponse.php
  - src/Models/Errors/NotFoundResponseThrowable.php
  - src/Models/Errors/NotImplementedResponse.php
  - src/Models/Errors/NotImplementedResponseThrowable.php
  - src/Models/Errors/PreconditionFailedResponse.php
  - src/Models/Errors/PreconditionFailedResponseThrowable.php
  - src/Models/Errors/RequestTimedOutResponse.php
  - src/Models/Errors/RequestTimedOutResponseThrowable.php
  - src/Models/Errors/SDKException.php
  - src/Models/Errors/TooManyRequestsResponse.php
  - src/Models/Errors/TooManyRequestsResponseThrowable.php
  - src/Models/Errors/UnauthorizedResponse.php
  - src/Models/Errors/UnauthorizedResponseThrowable.php
  - src/Models/Errors/UnprocessableEntityResponse.php
  - src/Models/Errors/UnprocessableEntityResponseThrowable.php
  - src/Models/Operations/AccountingBatchCreateCompanyJournalsRequest.php
  - src/Models/Operations/AccountingBatchCreateCompanyJournalsResponse.php
  - src/Models/Operations/AccountingCreateCompanyJournalRequest.php
  - src/Models/Operations/AccountingCreateCompanyJournalResponse.php
  - src/Models/Operations/AccountingGetCompanyAccountRequest.php
  - src/Models/Operations/AccountingGetCompanyAccountResponse.php
  - src/Models/Operations/AccountingGetCompanyJournalRequest.php
  - src/Models/Operations/AccountingGetCompanyJournalResponse.php
  - src/Models/Operations/AccountingGetCompanyRequest.php
  - src/Models/Operations/AccountingGetCompanyResponse.php
  - src/Models/Operations/AccountingGetCompanyTaxRateRequest.php
  - src/Models/Operations/AccountingGetCompanyTaxRateResponse.php
  - src/Models/Operations/AccountingListCompaniesQueryParamFilter.php
  - src/Models/Operations/AccountingListCompaniesRequest.php
  - src/Models/Operations/AccountingListCompaniesResponse.php
  - src/Models/Operations/AccountingListCompanyAccountsQueryParamFilter.php
  - src/Models/Operations/AccountingListCompanyAccountsRequest.php
  - src/Models/Operations/AccountingListCompanyAccountsResponse.php
  - src/Models/Operations/AccountingListCompanyJournalsQueryParamFilter.php
  - src/Models/Operations/AccountingListCompanyJournalsRequest.php
  - src/Models/Operations/AccountingListCompanyJournalsResponse.php
  - src/Models/Operations/AccountingListCompanyTaxRatesQueryParamFilter.php
  - src/Models/Operations/AccountingListCompanyTaxRatesRequest.php
  - src/Models/Operations/AccountingListCompanyTaxRatesResponse.php
  - src/Models/Operations/AtsCreateApplicationNoteRequest.php
  - src/Models/Operations/AtsCreateApplicationNoteResponse.php
  - src/Models/Operations/AtsCreateApplicationRequest.php
  - src/Models/Operations/AtsCreateApplicationResponse.php
  - src/Models/Operations/AtsCreateBackgroundCheckPackageRequest.php
  - src/Models/Operations/AtsCreateBackgroundCheckPackageResponse.php
  - src/Models/Operations/AtsCreateCandidateNoteRequest.php
  - src/Models/Operations/AtsCreateCandidateNoteResponse.php
  - src/Models/Operations/AtsCreateCandidateRequest.php
  - src/Models/Operations/AtsCreateCandidateResponse.php
  - src/Models/Operations/AtsCreateJobRequest.php
  - src/Models/Operations/AtsCreateJobResponse.php
  - src/Models/Operations/AtsCreateOfferRequest.php
  - src/Models/Operations/AtsCreateOfferResponse.php
  - src/Models/Operations/AtsDeleteBackgroundCheckPackageRequest.php
  - src/Models/Operations/AtsDeleteBackgroundCheckPackageResponse.php
  - src/Models/Operations/AtsDownloadApplicationDocumentRequest.php
  - src/Models/Operations/AtsDownloadApplicationDocumentResponse.php
  - src/Models/Operations/AtsGetApplicationCustomFieldDefinitionQueryParamFilter.php
  - src/Models/Operations/AtsGetApplicationCustomFieldDefinitionRequest.php
  - src/Models/Operations/AtsGetApplicationCustomFieldDefinitionResponse.php
  - src/Models/Operations/AtsGetApplicationDocumentCategoryRequest.php
  - src/Models/Operations/AtsGetApplicationDocumentCategoryResponse.php
  - src/Models/Operations/AtsGetApplicationDocumentRequest.php
  - src/Models/Operations/AtsGetApplicationDocumentResponse.php
  - src/Models/Operations/AtsGetApplicationNoteRequest.php
  - src/Models/Operations/AtsGetApplicationNoteResponse.php
  - src/Models/Operations/AtsGetApplicationOfferRequest.php
  - src/Models/Operations/AtsGetApplicationOfferResponse.php
  - src/Models/Operations/AtsGetApplicationRequest.php
  - src/Models/Operations/AtsGetApplicationResponse.php
  - src/Models/Operations/AtsGetApplicationScheduledInterviewRequest.php
  - src/Models/Operations/AtsGetApplicationScheduledInterviewResponse.php
  - src/Models/Operations/AtsGetApplicationScorecardRequest.php
  - src/Models/Operations/AtsGetApplicationScorecardResponse.php
  - src/Models/Operations/AtsGetApplicationStageRequest.php
  - src/Models/Operations/AtsGetApplicationStageResponse.php
  - src/Models/Operations/AtsGetAssessmentsPackageRequest.php
  - src/Models/Operations/AtsGetAssessmentsPackageResponse.php
  - src/Models/Operations/AtsGetBackgroundCheckPackageRequest.php
  - src/Models/Operations/AtsGetBackgroundCheckPackageResponse.php
  - src/Models/Operations/AtsGetCandidateCustomFieldDefinitionQueryParamFilter.php
  - src/Models/Operations/AtsGetCandidateCustomFieldDefinitionRequest.php
  - src/Models/Operations/AtsGetCandidateCustomFieldDefinitionResponse.php
  - src/Models/Operations/AtsGetCandidateNoteRequest.php
  - src/Models/Operations/AtsGetCandidateNoteResponse.php
  - src/Models/Operations/AtsGetCandidateRequest.php
  - src/Models/Operations/AtsGetCandidateResponse.php
  - src/Models/Operations/AtsGetDepartmentRequest.php
  - src/Models/Operations/AtsGetDepartmentResponse.php
  - src/Models/Operations/AtsGetInterviewRequest.php
  - src/Models/Operations/AtsGetInterviewResponse.php
  - src/Models/Operations/AtsGetInterviewStageRequest.php
  - src/Models/Operations/AtsGetInterviewStageResponse.php
  - src/Models/Operations/AtsGetJobApplicationStageRequest.php
  - src/Models/Operations/AtsGetJobApplicationStageResponse.php
  - src/Models/Operations/AtsGetJobCustomFieldDefinitionQueryParamFilter.php
  - src/Models/Operations/AtsGetJobCustomFieldDefinitionRequest.php
  - src/Models/Operations/AtsGetJobCustomFieldDefinitionResponse.php
  - src/Models/Operations/AtsGetJobPostingRequest.php
  - src/Models/Operations/AtsGetJobPostingResponse.php
  - src/Models/Operations/AtsGetJobRequest.php
  - src/Models/Operations/AtsGetJobResponse.php
  - src/Models/Operations/AtsGetListRequest.php
  - src/Models/Operations/AtsGetListResponse.php
  - src/Models/Operations/AtsGetLocationRequest.php
  - src/Models/Operations/AtsGetLocationResponse.php
  - src/Models/Operations/AtsGetOfferRequest.php
  - src/Models/Operations/AtsGetOfferResponse.php
  - src/Models/Operations/AtsGetRejectedReasonRequest.php
  - src/Models/Operations/AtsGetRejectedReasonResponse.php
  - src/Models/Operations/AtsGetUserRequest.php
  - src/Models/Operations/AtsGetUserResponse.php
  - src/Models/Operations/AtsListApplicationChangesQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationChangesRequest.php
  - src/Models/Operations/AtsListApplicationChangesResponse.php
  - src/Models/Operations/AtsListApplicationCustomFieldDefinitionsQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationCustomFieldDefinitionsRequest.php
  - src/Models/Operations/AtsListApplicationCustomFieldDefinitionsResponse.php
  - src/Models/Operations/AtsListApplicationDocumentCategoriesQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationDocumentCategoriesRequest.php
  - src/Models/Operations/AtsListApplicationDocumentCategoriesResponse.php
  - src/Models/Operations/AtsListApplicationDocumentsQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationDocumentsRequest.php
  - src/Models/Operations/AtsListApplicationDocumentsResponse.php
  - src/Models/Operations/AtsListApplicationNotesQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationNotesRequest.php
  - src/Models/Operations/AtsListApplicationNotesResponse.php
  - src/Models/Operations/AtsListApplicationScorecardsQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationScorecardsRequest.php
  - src/Models/Operations/AtsListApplicationScorecardsResponse.php
  - src/Models/Operations/AtsListApplicationStagesQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationStagesRequest.php
  - src/Models/Operations/AtsListApplicationStagesResponse.php
  - src/Models/Operations/AtsListApplicationsOffersQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationsOffersRequest.php
  - src/Models/Operations/AtsListApplicationsOffersResponse.php
  - src/Models/Operations/AtsListApplicationsQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationsRequest.php
  - src/Models/Operations/AtsListApplicationsResponse.php
  - src/Models/Operations/AtsListApplicationsScheduledInterviewsQueryParamFilter.php
  - src/Models/Operations/AtsListApplicationsScheduledInterviewsRequest.php
  - src/Models/Operations/AtsListApplicationsScheduledInterviewsResponse.php
  - src/Models/Operations/AtsListAssessmentsPackagesQueryParamFilter.php
  - src/Models/Operations/AtsListAssessmentsPackagesRequest.php
  - src/Models/Operations/AtsListAssessmentsPackagesResponse.php
  - src/Models/Operations/AtsListBackgroundCheckPackagesQueryParamFilter.php
  - src/Models/Operations/AtsListBackgroundCheckPackagesRequest.php
  - src/Models/Operations/AtsListBackgroundCheckPackagesResponse.php
  - src/Models/Operations/AtsListCandidateCustomFieldDefinitionsQueryParamFilter.php
  - src/Models/Operations/AtsListCandidateCustomFieldDefinitionsRequest.php
  - src/Models/Operations/AtsListCandidateCustomFieldDefinitionsResponse.php
  - src/Models/Operations/AtsListCandidateNotesQueryParamFilter.php
  - src/Models/Operations/AtsListCandidateNotesRequest.php
  - src/Models/Operations/AtsListCandidateNotesResponse.php
  - src/Models/Operations/AtsListCandidatesQueryParamFilter.php
  - src/Models/Operations/AtsListCandidatesRequest.php
  - src/Models/Operations/AtsListCandidatesResponse.php
  - src/Models/Operations/AtsListDepartmentsQueryParamFilter.php
  - src/Models/Operations/AtsListDepartmentsRequest.php
  - src/Models/Operations/AtsListDepartmentsResponse.php
  - src/Models/Operations/AtsListInterviewStagesQueryParamFilter.php
  - src/Models/Operations/AtsListInterviewStagesRequest.php
  - src/Models/Operations/AtsListInterviewStagesResponse.php
  - src/Models/Operations/AtsListInterviewsQueryParamFilter.php
  - src/Models/Operations/AtsListInterviewsRequest.php
  - src/Models/Operations/AtsListInterviewsResponse.php
  - src/Models/Operations/AtsListJobApplicationStagesQueryParamFilter.php
  - src/Models/Operations/AtsListJobApplicationStagesRequest.php
  - src/Models/Operations/AtsListJobApplicationStagesResponse.php
  - src/Models/Operations/AtsListJobCustomFieldDefinitionsQueryParamFilter.php
  - src/Models/Operations/AtsListJobCustomFieldDefinitionsRequest.php
  - src/Models/Operations/AtsListJobCustomFieldDefinitionsResponse.php
  - src/Models/Operations/AtsListJobPostingsQueryParamFilter.php
  - src/Models/Operations/AtsListJobPostingsRequest.php
  - src/Models/Operations/AtsListJobPostingsResponse.php
  - src/Models/Operations/AtsListJobsQueryParamFilter.php
  - src/Models/Operations/AtsListJobsQueryParamStatus.php
  - src/Models/Operations/AtsListJobsRequest.php
  - src/Models/Operations/AtsListJobsResponse.php
  - src/Models/Operations/AtsListListsQueryParamFilter.php
  - src/Models/Operations/AtsListListsRequest.php
  - src/Models/Operations/AtsListListsResponse.php
  - src/Models/Operations/AtsListLocationsQueryParamFilter.php
  - src/Models/Operations/AtsListLocationsRequest.php
  - src/Models/Operations/AtsListLocationsResponse.php
  - src/Models/Operations/AtsListOffersQueryParamFilter.php
  - src/Models/Operations/AtsListOffersRequest.php
  - src/Models/Operations/AtsListOffersResponse.php
  - src/Models/Operations/AtsListRejectedReasonsQueryParamFilter.php
  - src/Models/Operations/AtsListRejectedReasonsRequest.php
  - src/Models/Operations/AtsListRejectedReasonsResponse.php
  - src/Models/Operations/AtsListUsersQueryParamFilter.php
  - src/Models/Operations/AtsListUsersRequest.php
  - src/Models/Operations/AtsListUsersResponse.php
  - src/Models/Operations/AtsMoveApplicationRequest.php
  - src/Models/Operations/AtsMoveApplicationResponse.php
  - src/Models/Operations/AtsOrderAssessmentsRequestRequest.php
  - src/Models/Operations/AtsOrderAssessmentsRequestResponse.php
  - src/Models/Operations/AtsOrderBackgroundCheckRequestRequest.php
  - src/Models/Operations/AtsOrderBackgroundCheckRequestResponse.php
  - src/Models/Operations/AtsRejectApplicationRequest.php
  - src/Models/Operations/AtsRejectApplicationResponse.php
  - src/Models/Operations/AtsUpdateApplicationNoteRequest.php
  - src/Models/Operations/AtsUpdateApplicationNoteResponse.php
  - src/Models/Operations/AtsUpdateApplicationRequest.php
  - src/Models/Operations/AtsUpdateApplicationResponse.php
  - src/Models/Operations/AtsUpdateAssessmentsResultRequest.php
  - src/Models/Operations/AtsUpdateAssessmentsResultResponse.php
  - src/Models/Operations/AtsUpdateBackgroundCheckPackageRequest.php
  - src/Models/Operations/AtsUpdateBackgroundCheckPackageResponse.php
  - src/Models/Operations/AtsUpdateBackgroundCheckResultRequest.php
  - src/Models/Operations/AtsUpdateBackgroundCheckResultResponse.php
  - src/Models/Operations/AtsUpdateCandidateRequest.php
  - src/Models/Operations/AtsUpdateCandidateResponse.php
  - src/Models/Operations/AtsUpdateJobRequest.php
  - src/Models/Operations/AtsUpdateJobResponse.php
  - src/Models/Operations/AtsUploadApplicationDocumentRequest.php
  - src/Models/Operations/AtsUploadApplicationDocumentResponse.php
  - src/Models/Operations/ChangeType.php
  - src/Models/Operations/CrmCreateContactRequest.php
  - src/Models/Operations/CrmCreateContactResponse.php
  - src/Models/Operations/CrmGetAccountRequest.php
  - src/Models/Operations/CrmGetAccountResponse.php
  - src/Models/Operations/CrmGetContactCustomFieldDefinitionQueryParamFilter.php
  - src/Models/Operations/CrmGetContactCustomFieldDefinitionRequest.php
  - src/Models/Operations/CrmGetContactCustomFieldDefinitionResponse.php
  - src/Models/Operations/CrmGetContactRequest.php
  - src/Models/Operations/CrmGetContactResponse.php
  - src/Models/Operations/CrmGetListRequest.php
  - src/Models/Operations/CrmGetListResponse.php
  - src/Models/Operations/CrmListAccountsQueryParamFilter.php
  - src/Models/Operations/CrmListAccountsRequest.php
  - src/Models/Operations/CrmListAccountsResponse.php
  - src/Models/Operations/CrmListContactCustomFieldDefinitionsQueryParamFilter.php
  - src/Models/Operations/CrmListContactCustomFieldDefinitionsRequest.php
  - src/Models/Operations/CrmListContactCustomFieldDefinitionsResponse.php
  - src/Models/Operations/CrmListContactsQueryParamFilter.php
  - src/Models/Operations/CrmListContactsRequest.php
  - src/Models/Operations/CrmListContactsResponse.php
  - src/Models/Operations/CrmListListsQueryParamFilter.php
  - src/Models/Operations/CrmListListsRequest.php
  - src/Models/Operations/CrmListListsResponse.php
  - src/Models/Operations/CrmUpdateContactRequest.php
  - src/Models/Operations/CrmUpdateContactResponse.php
  - src/Models/Operations/DocumentsDownloadFileRequest.php
  - src/Models/Operations/DocumentsDownloadFileResponse.php
  - src/Models/Operations/DocumentsGetDriveRequest.php
  - src/Models/Operations/DocumentsGetDriveResponse.php
  - src/Models/Operations/DocumentsGetFileRequest.php
  - src/Models/Operations/DocumentsGetFileResponse.php
  - src/Models/Operations/DocumentsGetFolderRequest.php
  - src/Models/Operations/DocumentsGetFolderResponse.php
  - src/Models/Operations/DocumentsListDrivesQueryParamFilter.php
  - src/Models/Operations/DocumentsListDrivesRequest.php
  - src/Models/Operations/DocumentsListDrivesResponse.php
  - src/Models/Operations/DocumentsListFilesQueryParamFilter.php
  - src/Models/Operations/DocumentsListFilesRequest.php
  - src/Models/Operations/DocumentsListFilesResponse.php
  - src/Models/Operations/DocumentsListFoldersQueryParamFilter.php
  - src/Models/Operations/DocumentsListFoldersRequest.php
  - src/Models/Operations/DocumentsListFoldersResponse.php
  - src/Models/Operations/DocumentsUploadFileRequest.php
  - src/Models/Operations/DocumentsUploadFileResponse.php
  - src/Models/Operations/Filter.php
  - src/Models/Operations/HrisBatchUploadEmployeeDocumentRequest.php
  - src/Models/Operations/HrisBatchUploadEmployeeDocumentResponse.php
  - src/Models/Operations/HrisCancelEmployeeTimeOffRequestRequest.php
  - src/Models/Operations/HrisCancelEmployeeTimeOffRequestResponse.php
  - src/Models/Operations/HrisCreateEmployeeEmploymentRequest.php
  - src/Models/Operations/HrisCreateEmployeeEmploymentResponse.php
  - src/Models/Operations/HrisCreateEmployeeRequest.php
  - src/Models/Operations/HrisCreateEmployeeResponse.php
  - src/Models/Operations/HrisCreateEmployeeSkillRequest.php
  - src/Models/Operations/HrisCreateEmployeeSkillResponse.php
  - src/Models/Operations/HrisCreateEmployeeTimeOffRequestRequest.php
  - src/Models/Operations/HrisCreateEmployeeTimeOffRequestResponse.php
  - src/Models/Operations/HrisCreateEmployeeWorkEligibilityRequestRequest.php
  - src/Models/Operations/HrisCreateEmployeeWorkEligibilityRequestResponse.php
  - src/Models/Operations/HrisDownloadEmployeeDocumentRequest.php
  - src/Models/Operations/HrisDownloadEmployeeDocumentResponse.php
  - src/Models/Operations/HrisGetBenefitRequest.php
  - src/Models/Operations/HrisGetBenefitResponse.php
  - src/Models/Operations/HrisGetCompanyGroupRequest.php
  - src/Models/Operations/HrisGetCompanyGroupResponse.php
  - src/Models/Operations/HrisGetCompanyRequest.php
  - src/Models/Operations/HrisGetCompanyResponse.php
  - src/Models/Operations/HrisGetCostCenterGroupRequest.php
  - src/Models/Operations/HrisGetCostCenterGroupResponse.php
  - src/Models/Operations/HrisGetDepartmentGroupRequest.php
  - src/Models/Operations/HrisGetDepartmentGroupResponse.php
  - src/Models/Operations/HrisGetDivisionGroupRequest.php
  - src/Models/Operations/HrisGetDivisionGroupResponse.php
  - src/Models/Operations/HrisGetEmployeeCustomFieldDefinitionQueryParamFilter.php
  - src/Models/Operations/HrisGetEmployeeCustomFieldDefinitionRequest.php
  - src/Models/Operations/HrisGetEmployeeCustomFieldDefinitionResponse.php
  - src/Models/Operations/HrisGetEmployeeDocumentCategoryRequest.php
  - src/Models/Operations/HrisGetEmployeeDocumentCategoryResponse.php
  - src/Models/Operations/HrisGetEmployeeDocumentRequest.php
  - src/Models/Operations/HrisGetEmployeeDocumentResponse.php
  - src/Models/Operations/HrisGetEmployeeEmploymentRequest.php
  - src/Models/Operations/HrisGetEmployeeEmploymentResponse.php
  - src/Models/Operations/HrisGetEmployeeRequest.php
  - src/Models/Operations/HrisGetEmployeeResponse.php
  - src/Models/Operations/HrisGetEmployeeSkillRequest.php
  - src/Models/Operations/HrisGetEmployeeSkillResponse.php
  - src/Models/Operations/HrisGetEmployeeTaskRequest.php
  - src/Models/Operations/HrisGetEmployeeTaskResponse.php
  - src/Models/Operations/HrisGetEmployeeTimeOffBalanceRequest.php
  - src/Models/Operations/HrisGetEmployeeTimeOffBalanceResponse.php
  - src/Models/Operations/HrisGetEmployeesTimeOffRequestRequest.php
  - src/Models/Operations/HrisGetEmployeesTimeOffRequestResponse.php
  - src/Models/Operations/HrisGetEmployeesWorkEligibilityRequest.php
  - src/Models/Operations/HrisGetEmployeesWorkEligibilityResponse.php
  - src/Models/Operations/HrisGetEmploymentRequest.php
  - src/Models/Operations/HrisGetEmploymentResponse.php
  - src/Models/Operations/HrisGetGroupRequest.php
  - src/Models/Operations/HrisGetGroupResponse.php
  - src/Models/Operations/HrisGetJobRequest.php
  - src/Models/Operations/HrisGetJobResponse.php
  - src/Models/Operations/HrisGetLocationRequest.php
  - src/Models/Operations/HrisGetLocationResponse.php
  - src/Models/Operations/HrisGetPositionRequest.php
  - src/Models/Operations/HrisGetPositionResponse.php
  - src/Models/Operations/HrisGetShiftRequest.php
  - src/Models/Operations/HrisGetShiftResponse.php
  - src/Models/Operations/HrisGetTaskRequest.php
  - src/Models/Operations/HrisGetTaskResponse.php
  - src/Models/Operations/HrisGetTeamGroupRequest.php
  - src/Models/Operations/HrisGetTeamGroupResponse.php
  - src/Models/Operations/HrisGetTimeEntriesRequest.php
  - src/Models/Operations/HrisGetTimeEntriesResponse.php
  - src/Models/Operations/HrisGetTimeOffPolicyRequest.php
  - src/Models/Operations/HrisGetTimeOffPolicyResponse.php
  - src/Models/Operations/HrisGetTimeOffRequestRequest.php
  - src/Models/Operations/HrisGetTimeOffRequestResponse.php
  - src/Models/Operations/HrisGetTimeOffTypeRequest.php
  - src/Models/Operations/HrisGetTimeOffTypeResponse.php
  - src/Models/Operations/HrisInviteEmployeeRequest.php
  - src/Models/Operations/HrisInviteEmployeeResponse.php
  - src/Models/Operations/HrisListBenefitsQueryParamFilter.php
  - src/Models/Operations/HrisListBenefitsRequest.php
  - src/Models/Operations/HrisListBenefitsResponse.php
  - src/Models/Operations/HrisListCompaniesGroupsQueryParamFilter.php
  - src/Models/Operations/HrisListCompaniesGroupsRequest.php
  - src/Models/Operations/HrisListCompaniesGroupsResponse.php
  - src/Models/Operations/HrisListCompaniesQueryParamFilter.php
  - src/Models/Operations/HrisListCompaniesRequest.php
  - src/Models/Operations/HrisListCompaniesResponse.php
  - src/Models/Operations/HrisListCostCenterGroupsQueryParamFilter.php
  - src/Models/Operations/HrisListCostCenterGroupsRequest.php
  - src/Models/Operations/HrisListCostCenterGroupsResponse.php
  - src/Models/Operations/HrisListDepartmentGroupsQueryParamFilter.php
  - src/Models/Operations/HrisListDepartmentGroupsRequest.php
  - src/Models/Operations/HrisListDepartmentGroupsResponse.php
  - src/Models/Operations/HrisListDivisionGroupsQueryParamFilter.php
  - src/Models/Operations/HrisListDivisionGroupsRequest.php
  - src/Models/Operations/HrisListDivisionGroupsResponse.php
  - src/Models/Operations/HrisListEmployeeCategoriesQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeCategoriesRequest.php
  - src/Models/Operations/HrisListEmployeeCategoriesResponse.php
  - src/Models/Operations/HrisListEmployeeCustomFieldDefinitionsQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeCustomFieldDefinitionsRequest.php
  - src/Models/Operations/HrisListEmployeeCustomFieldDefinitionsResponse.php
  - src/Models/Operations/HrisListEmployeeDocumentsQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeDocumentsRequest.php
  - src/Models/Operations/HrisListEmployeeDocumentsResponse.php
  - src/Models/Operations/HrisListEmployeeEmploymentsQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeEmploymentsRequest.php
  - src/Models/Operations/HrisListEmployeeEmploymentsResponse.php
  - src/Models/Operations/HrisListEmployeeSkillsQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeSkillsRequest.php
  - src/Models/Operations/HrisListEmployeeSkillsResponse.php
  - src/Models/Operations/HrisListEmployeeTasksQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeTasksRequest.php
  - src/Models/Operations/HrisListEmployeeTasksResponse.php
  - src/Models/Operations/HrisListEmployeeTimeOffBalancesQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeTimeOffBalancesRequest.php
  - src/Models/Operations/HrisListEmployeeTimeOffBalancesResponse.php
  - src/Models/Operations/HrisListEmployeeTimeOffPoliciesQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeTimeOffPoliciesRequest.php
  - src/Models/Operations/HrisListEmployeeTimeOffPoliciesResponse.php
  - src/Models/Operations/HrisListEmployeeTimeOffRequestsQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeTimeOffRequestsRequest.php
  - src/Models/Operations/HrisListEmployeeTimeOffRequestsResponse.php
  - src/Models/Operations/HrisListEmployeeWorkEligibilityQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeeWorkEligibilityRequest.php
  - src/Models/Operations/HrisListEmployeeWorkEligibilityResponse.php
  - src/Models/Operations/HrisListEmployeesQueryParamFilter.php
  - src/Models/Operations/HrisListEmployeesRequest.php
  - src/Models/Operations/HrisListEmployeesResponse.php
  - src/Models/Operations/HrisListEmploymentsQueryParamFilter.php
  - src/Models/Operations/HrisListEmploymentsRequest.php
  - src/Models/Operations/HrisListEmploymentsResponse.php
  - src/Models/Operations/HrisListGroupsQueryParamFilter.php
  - src/Models/Operations/HrisListGroupsRequest.php
  - src/Models/Operations/HrisListGroupsResponse.php
  - src/Models/Operations/HrisListJobsQueryParamFilter.php
  - src/Models/Operations/HrisListJobsRequest.php
  - src/Models/Operations/HrisListJobsResponse.php
  - src/Models/Operations/HrisListLocationsQueryParamFilter.php
  - src/Models/Operations/HrisListLocationsRequest.php
  - src/Models/Operations/HrisListLocationsResponse.php
  - src/Models/Operations/HrisListPositionsQueryParamFilter.php
  - src/Models/Operations/HrisListPositionsRequest.php
  - src/Models/Operations/HrisListPositionsResponse.php
  - src/Models/Operations/HrisListShiftsQueryParamFilter.php
  - src/Models/Operations/HrisListShiftsRequest.php
  - src/Models/Operations/HrisListShiftsResponse.php
  - src/Models/Operations/HrisListTasksQueryParamFilter.php
  - src/Models/Operations/HrisListTasksRequest.php
  - src/Models/Operations/HrisListTasksResponse.php
  - src/Models/Operations/HrisListTeamGroupsQueryParamFilter.php
  - src/Models/Operations/HrisListTeamGroupsRequest.php
  - src/Models/Operations/HrisListTeamGroupsResponse.php
  - src/Models/Operations/HrisListTimeEntriesQueryParamFilter.php
  - src/Models/Operations/HrisListTimeEntriesRequest.php
  - src/Models/Operations/HrisListTimeEntriesResponse.php
  - src/Models/Operations/HrisListTimeOffPoliciesQueryParamFilter.php
  - src/Models/Operations/HrisListTimeOffPoliciesRequest.php
  - src/Models/Operations/HrisListTimeOffPoliciesResponse.php
  - src/Models/Operations/HrisListTimeOffRequestsQueryParamFilter.php
  - src/Models/Operations/HrisListTimeOffRequestsRequest.php
  - src/Models/Operations/HrisListTimeOffRequestsResponse.php
  - src/Models/Operations/HrisListTimeOffTypesQueryParamFilter.php
  - src/Models/Operations/HrisListTimeOffTypesRequest.php
  - src/Models/Operations/HrisListTimeOffTypesResponse.php
  - src/Models/Operations/HrisUpdateEmployeeEmploymentRequest.php
  - src/Models/Operations/HrisUpdateEmployeeEmploymentResponse.php
  - src/Models/Operations/HrisUpdateEmployeeRequest.php
  - src/Models/Operations/HrisUpdateEmployeeResponse.php
  - src/Models/Operations/HrisUpdateEmployeeTaskRequest.php
  - src/Models/Operations/HrisUpdateEmployeeTaskResponse.php
  - src/Models/Operations/HrisUpdateEmployeeTimeOffRequestRequest.php
  - src/Models/Operations/HrisUpdateEmployeeTimeOffRequestResponse.php
  - src/Models/Operations/HrisUpdateEmployeeWorkEligibilityRequestRequest.php
  - src/Models/Operations/HrisUpdateEmployeeWorkEligibilityRequestResponse.php
  - src/Models/Operations/HrisUploadEmployeeDocumentRequest.php
  - src/Models/Operations/HrisUploadEmployeeDocumentResponse.php
  - src/Models/Operations/IamDeleteUserRequest.php
  - src/Models/Operations/IamDeleteUserResponse.php
  - src/Models/Operations/IamGetGroupRequest.php
  - src/Models/Operations/IamGetGroupResponse.php
  - src/Models/Operations/IamGetPolicyRequest.php
  - src/Models/Operations/IamGetPolicyResponse.php
  - src/Models/Operations/IamGetRoleRequest.php
  - src/Models/Operations/IamGetRoleResponse.php
  - src/Models/Operations/IamGetUserRequest.php
  - src/Models/Operations/IamGetUserResponse.php
  - src/Models/Operations/IamListGroupsQueryParamFilter.php
  - src/Models/Operations/IamListGroupsRequest.php
  - src/Models/Operations/IamListGroupsResponse.php
  - src/Models/Operations/IamListPoliciesQueryParamFilter.php
  - src/Models/Operations/IamListPoliciesRequest.php
  - src/Models/Operations/IamListPoliciesResponse.php
  - src/Models/Operations/IamListRolesQueryParamFilter.php
  - src/Models/Operations/IamListRolesRequest.php
  - src/Models/Operations/IamListRolesResponse.php
  - src/Models/Operations/IamListUsersQueryParamFilter.php
  - src/Models/Operations/IamListUsersRequest.php
  - src/Models/Operations/IamListUsersResponse.php
  - src/Models/Operations/IamUpdateUserRequest.php
  - src/Models/Operations/IamUpdateUserResponse.php
  - src/Models/Operations/IncludeT.php
  - src/Models/Operations/JobStatus.php
  - src/Models/Operations/LmsBatchUpsertContentRequest.php
  - src/Models/Operations/LmsBatchUpsertContentResponse.php
  - src/Models/Operations/LmsCreateUserAssignmentRequest.php
  - src/Models/Operations/LmsCreateUserAssignmentResponse.php
  - src/Models/Operations/LmsCreateUserCompletionRequest.php
  - src/Models/Operations/LmsCreateUserCompletionResponse.php
  - src/Models/Operations/LmsDeleteUserCompletionRequest.php
  - src/Models/Operations/LmsDeleteUserCompletionResponse.php
  - src/Models/Operations/LmsGetAssignmentRequest.php
  - src/Models/Operations/LmsGetAssignmentResponse.php
  - src/Models/Operations/LmsGetCategoryRequest.php
  - src/Models/Operations/LmsGetCategoryResponse.php
  - src/Models/Operations/LmsGetCompletionRequest.php
  - src/Models/Operations/LmsGetCompletionResponse.php
  - src/Models/Operations/LmsGetContentRequest.php
  - src/Models/Operations/LmsGetContentResponse.php
  - src/Models/Operations/LmsGetCourseRequest.php
  - src/Models/Operations/LmsGetCourseResponse.php
  - src/Models/Operations/LmsGetSkillRequest.php
  - src/Models/Operations/LmsGetSkillResponse.php
  - src/Models/Operations/LmsGetUserAssignmentRequest.php
  - src/Models/Operations/LmsGetUserAssignmentResponse.php
  - src/Models/Operations/LmsGetUserCompletionRequest.php
  - src/Models/Operations/LmsGetUserCompletionResponse.php
  - src/Models/Operations/LmsGetUserRequest.php
  - src/Models/Operations/LmsGetUserResponse.php
  - src/Models/Operations/LmsListAssignmentsQueryParamFilter.php
  - src/Models/Operations/LmsListAssignmentsQueryParamStatus.php
  - src/Models/Operations/LmsListAssignmentsRequest.php
  - src/Models/Operations/LmsListAssignmentsResponse.php
  - src/Models/Operations/LmsListCategoriesQueryParamFilter.php
  - src/Models/Operations/LmsListCategoriesRequest.php
  - src/Models/Operations/LmsListCategoriesResponse.php
  - src/Models/Operations/LmsListCompletionsQueryParamFilter.php
  - src/Models/Operations/LmsListCompletionsRequest.php
  - src/Models/Operations/LmsListCompletionsResponse.php
  - src/Models/Operations/LmsListContentQueryParamFilter.php
  - src/Models/Operations/LmsListContentRequest.php
  - src/Models/Operations/LmsListContentResponse.php
  - src/Models/Operations/LmsListCoursesQueryParamFilter.php
  - src/Models/Operations/LmsListCoursesRequest.php
  - src/Models/Operations/LmsListCoursesResponse.php
  - src/Models/Operations/LmsListSkillsQueryParamFilter.php
  - src/Models/Operations/LmsListSkillsRequest.php
  - src/Models/Operations/LmsListSkillsResponse.php
  - src/Models/Operations/LmsListUserAssignmentsQueryParamFilter.php
  - src/Models/Operations/LmsListUserAssignmentsQueryParamStatus.php
  - src/Models/Operations/LmsListUserAssignmentsRequest.php
  - src/Models/Operations/LmsListUserAssignmentsResponse.php
  - src/Models/Operations/LmsListUserCompletionsQueryParamFilter.php
  - src/Models/Operations/LmsListUserCompletionsRequest.php
  - src/Models/Operations/LmsListUserCompletionsResponse.php
  - src/Models/Operations/LmsListUsersQueryParamFilter.php
  - src/Models/Operations/LmsListUsersRequest.php
  - src/Models/Operations/LmsListUsersResponse.php
  - src/Models/Operations/LmsUpdateContentRequest.php
  - src/Models/Operations/LmsUpdateContentResponse.php
  - src/Models/Operations/LmsUpsertContentRequest.php
  - src/Models/Operations/LmsUpsertContentResponse.php
  - src/Models/Operations/MarketingCreateContentBlockRequest.php
  - src/Models/Operations/MarketingCreateContentBlockResponse.php
  - src/Models/Operations/MarketingCreateEmailTemplateRequest.php
  - src/Models/Operations/MarketingCreateEmailTemplateResponse.php
  - src/Models/Operations/MarketingCreateInAppTemplateRequest.php
  - src/Models/Operations/MarketingCreateInAppTemplateResponse.php
  - src/Models/Operations/MarketingCreateOmniChannelTemplateRequest.php
  - src/Models/Operations/MarketingCreateOmniChannelTemplateResponse.php
  - src/Models/Operations/MarketingCreatePushTemplateRequest.php
  - src/Models/Operations/MarketingCreatePushTemplateResponse.php
  - src/Models/Operations/MarketingCreateSmsTemplateRequest.php
  - src/Models/Operations/MarketingCreateSmsTemplateResponse.php
  - src/Models/Operations/MarketingGetCampaignRequest.php
  - src/Models/Operations/MarketingGetCampaignResponse.php
  - src/Models/Operations/MarketingGetContentBlockRequest.php
  - src/Models/Operations/MarketingGetContentBlockResponse.php
  - src/Models/Operations/MarketingGetEmailTemplateRequest.php
  - src/Models/Operations/MarketingGetEmailTemplateResponse.php
  - src/Models/Operations/MarketingGetInAppTemplateRequest.php
  - src/Models/Operations/MarketingGetInAppTemplateResponse.php
  - src/Models/Operations/MarketingGetOmniChannelTemplateRequest.php
  - src/Models/Operations/MarketingGetOmniChannelTemplateResponse.php
  - src/Models/Operations/MarketingGetPushTemplateRequest.php
  - src/Models/Operations/MarketingGetPushTemplateResponse.php
  - src/Models/Operations/MarketingGetSmsTemplateRequest.php
  - src/Models/Operations/MarketingGetSmsTemplateResponse.php
  - src/Models/Operations/MarketingListCampaignsQueryParamFilter.php
  - src/Models/Operations/MarketingListCampaignsRequest.php
  - src/Models/Operations/MarketingListCampaignsResponse.php
  - src/Models/Operations/MarketingListContentBlocksQueryParamFilter.php
  - src/Models/Operations/MarketingListContentBlocksRequest.php
  - src/Models/Operations/MarketingListContentBlocksResponse.php
  - src/Models/Operations/MarketingListEmailTemplatesQueryParamFilter.php
  - src/Models/Operations/MarketingListEmailTemplatesRequest.php
  - src/Models/Operations/MarketingListEmailTemplatesResponse.php
  - src/Models/Operations/MarketingListInAppTemplatesQueryParamFilter.php
  - src/Models/Operations/MarketingListInAppTemplatesRequest.php
  - src/Models/Operations/MarketingListInAppTemplatesResponse.php
  - src/Models/Operations/MarketingListOmniChannelTemplatesQueryParamFilter.php
  - src/Models/Operations/MarketingListOmniChannelTemplatesRequest.php
  - src/Models/Operations/MarketingListOmniChannelTemplatesResponse.php
  - src/Models/Operations/MarketingListPushTemplatesQueryParamFilter.php
  - src/Models/Operations/MarketingListPushTemplatesRequest.php
  - src/Models/Operations/MarketingListPushTemplatesResponse.php
  - src/Models/Operations/MarketingListSmsTemplatesQueryParamFilter.php
  - src/Models/Operations/MarketingListSmsTemplatesRequest.php
  - src/Models/Operations/MarketingListSmsTemplatesResponse.php
  - src/Models/Operations/MarketingUpdateContentBlockRequest.php
  - src/Models/Operations/MarketingUpdateContentBlockResponse.php
  - src/Models/Operations/MarketingUpdateEmailTemplateRequest.php
  - src/Models/Operations/MarketingUpdateEmailTemplateResponse.php
  - src/Models/Operations/MarketingUpdateInAppTemplateRequest.php
  - src/Models/Operations/MarketingUpdateInAppTemplateResponse.php
  - src/Models/Operations/MarketingUpdateOmniChannelTemplateRequest.php
  - src/Models/Operations/MarketingUpdateOmniChannelTemplateResponse.php
  - src/Models/Operations/MarketingUpdatePushTemplateRequest.php
  - src/Models/Operations/MarketingUpdatePushTemplateResponse.php
  - src/Models/Operations/MarketingUpdateSmsTemplateRequest.php
  - src/Models/Operations/MarketingUpdateSmsTemplateResponse.php
  - src/Models/Operations/MessagingCreateConversationRequest.php
  - src/Models/Operations/MessagingCreateConversationResponse.php
  - src/Models/Operations/MessagingDownloadMessagingAttachmentRequest.php
  - src/Models/Operations/MessagingDownloadMessagingAttachmentResponse.php
  - src/Models/Operations/MessagingGetAttachmentRequest.php
  - src/Models/Operations/MessagingGetAttachmentResponse.php
  - src/Models/Operations/MessagingGetConversationRequest.php
  - src/Models/Operations/MessagingGetConversationResponse.php
  - src/Models/Operations/MessagingGetMessageQueryParamFilter.php
  - src/Models/Operations/MessagingGetMessageRequest.php
  - src/Models/Operations/MessagingGetMessageResponse.php
  - src/Models/Operations/MessagingGetUserRequest.php
  - src/Models/Operations/MessagingGetUserResponse.php
  - src/Models/Operations/MessagingListAttachmentsQueryParamFilter.php
  - src/Models/Operations/MessagingListAttachmentsRequest.php
  - src/Models/Operations/MessagingListAttachmentsResponse.php
  - src/Models/Operations/MessagingListConversationMessagesQueryParamFilter.php
  - src/Models/Operations/MessagingListConversationMessagesRequest.php
  - src/Models/Operations/MessagingListConversationMessagesResponse.php
  - src/Models/Operations/MessagingListConversationsQueryParamFilter.php
  - src/Models/Operations/MessagingListConversationsRequest.php
  - src/Models/Operations/MessagingListConversationsResponse.php
  - src/Models/Operations/MessagingListUsersQueryParamFilter.php
  - src/Models/Operations/MessagingListUsersRequest.php
  - src/Models/Operations/MessagingListUsersResponse.php
  - src/Models/Operations/MessagingSendMessageRequest.php
  - src/Models/Operations/MessagingSendMessageResponse.php
  - src/Models/Operations/OrderBy.php
  - src/Models/Operations/OrderDirection.php
  - src/Models/Operations/QueryParamFilter.php
  - src/Models/Operations/QueryParamInclude.php
  - src/Models/Operations/QueryParamOrderBy.php
  - src/Models/Operations/QueryParamOrderDirection.php
  - src/Models/Operations/QueryParamStatus.php
  - src/Models/Operations/QueryParamType.php
  - src/Models/Operations/ScreeningCreateScreeningOrderRequest.php
  - src/Models/Operations/ScreeningCreateScreeningOrderResponse.php
  - src/Models/Operations/ScreeningGetScreeningPackageRequest.php
  - src/Models/Operations/ScreeningGetScreeningPackageResponse.php
  - src/Models/Operations/ScreeningListScreeningPackagesQueryParamFilter.php
  - src/Models/Operations/ScreeningListScreeningPackagesRequest.php
  - src/Models/Operations/ScreeningListScreeningPackagesResponse.php
  - src/Models/Operations/ScreeningWebhookScreeningResultRequest.php
  - src/Models/Operations/ScreeningWebhookScreeningResultResponse.php
  - src/Models/Operations/StackoneAuthenticateConnectSessionResponse.php
  - src/Models/Operations/StackoneCreateConnectSessionResponse.php
  - src/Models/Operations/StackoneDeleteAccountRequest.php
  - src/Models/Operations/StackoneDeleteAccountResponse.php
  - src/Models/Operations/StackoneGetAccountMetaInfoRequest.php
  - src/Models/Operations/StackoneGetAccountMetaInfoResponse.php
  - src/Models/Operations/StackoneGetAccountRequest.php
  - src/Models/Operations/StackoneGetAccountResponse.php
  - src/Models/Operations/StackoneGetConnectorMetaRequest.php
  - src/Models/Operations/StackoneGetConnectorMetaResponse.php
  - src/Models/Operations/StackoneGetLogRequest.php
  - src/Models/Operations/StackoneGetLogResponse.php
  - src/Models/Operations/StackoneListActionsMetaQueryParamFilter.php
  - src/Models/Operations/StackoneListActionsMetaQueryParamInclude.php
  - src/Models/Operations/StackoneListActionsMetaRequest.php
  - src/Models/Operations/StackoneListActionsMetaResponse.php
  - src/Models/Operations/StackoneListConnectorsMetaRequest.php
  - src/Models/Operations/StackoneListConnectorsMetaResponse.php
  - src/Models/Operations/StackoneListLinkedAccountsRequest.php
  - src/Models/Operations/StackoneListLinkedAccountsResponse.php
  - src/Models/Operations/StackoneListLogsQueryParamOrderBy.php
  - src/Models/Operations/StackoneListLogsQueryParamOrderDirection.php
  - src/Models/Operations/StackoneListLogsRequest.php
  - src/Models/Operations/StackoneListLogsResponse.php
  - src/Models/Operations/StackoneListPlatformLogsQueryParamFilter.php
  - src/Models/Operations/StackoneListPlatformLogsQueryParamOrderBy.php
  - src/Models/Operations/StackoneListPlatformLogsQueryParamOrderDirection.php
  - src/Models/Operations/StackoneListPlatformLogsQueryParamRequestLogsOrderBy.php
  - src/Models/Operations/StackoneListPlatformLogsQueryParamRequestLogsOrderDirection.php
  - src/Models/Operations/StackoneListPlatformLogsRequest.php
  - src/Models/Operations/StackoneListPlatformLogsResponse.php
  - src/Models/Operations/StackoneListStepLogsRequest.php
  - src/Models/Operations/StackoneListStepLogsResponse.php
  - src/Models/Operations/StackoneMcpDeleteRequest.php
  - src/Models/Operations/StackoneMcpDeleteResponse.php
  - src/Models/Operations/StackoneMcpDeleteSecurity.php
  - src/Models/Operations/StackoneMcpGetRequest.php
  - src/Models/Operations/StackoneMcpGetResponse.php
  - src/Models/Operations/StackoneMcpGetSecurity.php
  - src/Models/Operations/StackoneMcpPostRequest.php
  - src/Models/Operations/StackoneMcpPostResponse.php
  - src/Models/Operations/StackoneMcpPostSecurity.php
  - src/Models/Operations/StackoneProxyRequestRequest.php
  - src/Models/Operations/StackoneProxyRequestResponse.php
  - src/Models/Operations/StackoneRpcActionResponse.php
  - src/Models/Operations/StackoneUpdateAccountRequest.php
  - src/Models/Operations/StackoneUpdateAccountResponse.php
  - src/Models/Operations/Status.php
  - src/Models/Operations/TicketingCreateTicketRequest.php
  - src/Models/Operations/TicketingCreateTicketResponse.php
  - src/Models/Operations/TicketingDownloadTicketingAttachmentRequest.php
  - src/Models/Operations/TicketingDownloadTicketingAttachmentResponse.php
  - src/Models/Operations/TicketingGetAttachmentRequest.php
  - src/Models/Operations/TicketingGetAttachmentResponse.php
  - src/Models/Operations/TicketingGetCommentRequest.php
  - src/Models/Operations/TicketingGetCommentResponse.php
  - src/Models/Operations/TicketingGetProjectComponentRequest.php
  - src/Models/Operations/TicketingGetProjectComponentResponse.php
  - src/Models/Operations/TicketingGetProjectRequest.php
  - src/Models/Operations/TicketingGetProjectResponse.php
  - src/Models/Operations/TicketingGetTicketRequest.php
  - src/Models/Operations/TicketingGetTicketResponse.php
  - src/Models/Operations/TicketingGetTicketTypeRequest.php
  - src/Models/Operations/TicketingGetTicketTypeResponse.php
  - src/Models/Operations/TicketingGetUserRequest.php
  - src/Models/Operations/TicketingGetUserResponse.php
  - src/Models/Operations/TicketingListAttachmentsQueryParamFilter.php
  - src/Models/Operations/TicketingListAttachmentsRequest.php
  - src/Models/Operations/TicketingListAttachmentsResponse.php
  - src/Models/Operations/TicketingListCommentsQueryParamFilter.php
  - src/Models/Operations/TicketingListCommentsRequest.php
  - src/Models/Operations/TicketingListCommentsResponse.php
  - src/Models/Operations/TicketingListProjectComponentsQueryParamFilter.php
  - src/Models/Operations/TicketingListProjectComponentsRequest.php
  - src/Models/Operations/TicketingListProjectComponentsResponse.php
  - src/Models/Operations/TicketingListProjectTicketTypesQueryParamFilter.php
  - src/Models/Operations/TicketingListProjectTicketTypesRequest.php
  - src/Models/Operations/TicketingListProjectTicketTypesResponse.php
  - src/Models/Operations/TicketingListProjectsQueryParamFilter.php
  - src/Models/Operations/TicketingListProjectsRequest.php
  - src/Models/Operations/TicketingListProjectsResponse.php
  - src/Models/Operations/TicketingListTicketStatusesQueryParamFilter.php
  - src/Models/Operations/TicketingListTicketStatusesRequest.php
  - src/Models/Operations/TicketingListTicketStatusesResponse.php
  - src/Models/Operations/TicketingListTicketTypesQueryParamFilter.php
  - src/Models/Operations/TicketingListTicketTypesRequest.php
  - src/Models/Operations/TicketingListTicketTypesResponse.php
  - src/Models/Operations/TicketingListTicketsQueryParamFilter.php
  - src/Models/Operations/TicketingListTicketsRequest.php
  - src/Models/Operations/TicketingListTicketsResponse.php
  - src/Models/Operations/TicketingListUsersQueryParamFilter.php
  - src/Models/Operations/TicketingListUsersRequest.php
  - src/Models/Operations/TicketingListUsersResponse.php
  - src/Models/Operations/TicketingUpdateTicketRequest.php
  - src/Models/Operations/TicketingUpdateTicketResponse.php
  - src/Models/Operations/Type.php
  - src/Proxy.php
  - src/RequestLogs.php
  - src/SDKConfiguration.php
  - src/Screening.php
  - src/StackOne.php
  - src/StackOneBuilder.php
  - src/Ticketing.php
  - src/Utils/BigDecimalHandler.php
  - src/Utils/BigIntHandler.php
  - src/Utils/DateHandler.php
  - src/Utils/DateTimeHandler.php
  - src/Utils/DefaultRequest.php
  - src/Utils/DefaultResponse.php
  - src/Utils/DefaultStream.php
  - src/Utils/DefaultUri.php
  - src/Utils/EnumHandler.php
  - src/Utils/FormMetadata.php
  - src/Utils/Headers.php
  - src/Utils/JSON.php
  - src/Utils/MixedJSONHandler.php
  - src/Utils/MultipartMetadata.php
  - src/Utils/Options.php
  - src/Utils/ParamsMetadata.php
  - src/Utils/PathParameters.php
  - src/Utils/PhpDocTypeParser.php
  - src/Utils/QueryParameters.php
  - src/Utils/RequestBodies.php
  - src/Utils/RequestMetadata.php
  - src/Utils/Retry/PermanentError.php
  - src/Utils/Retry/RetryConfig.php
  - src/Utils/Retry/RetryConfigBackoff.php
  - src/Utils/Retry/RetryConfigNone.php
  - src/Utils/Retry/RetryStrategy.php
  - src/Utils/Retry/RetryUtils.php
  - src/Utils/Retry/TemporaryError.php
  - src/Utils/Security.php
  - src/Utils/SecurityClient.php
  - src/Utils/SecurityMetadata.php
  - src/Utils/ServerDetails.php
  - src/Utils/SpeakeasyMetadata.php
  - src/Utils/UnionHandler.php
  - src/Utils/Utils.php
examples:
  stackone_create_connect_session:
    speakeasy-default-stackone-create-connect-session:
      requestBody:
        application/json: {"categories": ["ats", "hris", "ticketing", "crm", "iam", "marketing", "lms", "iam", "documents", "ticketing", "screening", "messaging", "accounting"], "origin_owner_id": "<id>", "origin_owner_name": "<value>", "expires_in": 1800, "multiple": false, "type": "production"}
      responses:
        "201":
          application/json: {"id": 203.83, "organization_id": 9266.53, "project_id": "<id>", "categories": ["ats", "hris", "hris-legacy", "crm", "iam", "marketing", "lms", "crm", "documents", "ticketing", "screening", "messaging", "accounting"], "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2023-01-24T01:30:32.862Z", "external_trigger_token": "f0bc3d88-2178-5423-8c81-b81d6c9da824", "type": "test", "token": "<value>", "auth_link_url": "https://difficult-avalanche.info"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_authenticate_connect_session:
    speakeasy-default-stackone-authenticate-connect-session:
      requestBody:
        application/json: {"token": "<value>"}
      responses:
        "201":
          application/json: {"id": 8422.01, "organization_id": 9188.03, "project_id": "<id>", "categories": ["ats", "hris", "accounting", "crm", "iam", "marketing", "lms", "stackone", "documents", "ticketing", "screening", "messaging", "accounting"], "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2024-10-01T04:59:29.242Z", "external_trigger_token": "f0bc3d88-2178-5423-8c81-b81d6c9da824", "type": "test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_linked_accounts:
    speakeasy-default-stackone-list-linked-accounts:
      parameters:
        query:
          page_size: 25
      responses:
        "200":
          application/json: [{"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2023-08-25T20:12:56.347Z", "updated_at": "2024-12-09T07:01:05.023Z", "type": "unmapped_value"}]
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_account:
    speakeasy-default-stackone-get-account:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2025-10-31T21:03:50.339Z", "updated_at": "2024-08-19T21:52:53.834Z", "type": "production"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_delete_account:
    speakeasy-default-stackone-delete-account:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2025-02-08T13:24:15.952Z", "updated_at": "2023-10-15T07:09:50.321Z", "type": "test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_update_account:
    speakeasy-default-stackone-update-account:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"type": "test"}
      responses:
        "200":
          application/json: {"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2025-10-09T05:20:37.883Z", "updated_at": "2023-12-15T05:46:29.205Z", "type": "unmapped_value"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_account_meta_info:
    speakeasy-default-stackone-get-account-meta-info:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"provider": "<value>", "category": "screening", "models": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_step_logs:
    speakeasy-default-stackone-list-step-logs:
      parameters:
        query:
          order_by: "eventDatetime"
          order_direction: "asc"
          filter: {"account_ids": "45355976281015164504,45355976281015164505", "start_date": "2020-01-01T00:00:00.000Z", "end_date": "2020-01-01T00:00:00.000Z", "request_ids": "adbf752f-6457-4ddd-89b3-98ae2252b83b,adbf752f-6457-4ddd-89b3-98ae2252b83c", "http_methods": "GET,POST", "providers": "ashby,greenhouse", "services": "hris,ats", "resources": "employees,users", "child_resources": "documents,time-off", "sub_resources": "documents,employees", "actions": "download,upload", "status_codes": "200,400", "success": true}
      responses:
        "200":
          application/json: {"data": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "id": "adbf752f-6457-4ddd-89b3-98ae2252b83b"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_log:
    speakeasy-default-stackone-get-log:
      parameters:
        path:
          id: "<id>"
        query:
          include: "step_logs"
      responses:
        "200":
          application/json: {"data": {"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "event_datetime": "2021-01-01T00:00:00Z", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "source_type": "DASHBOARD", "source_value": "ACCOUNT_TESTER", "source_id": "1234567890", "request": {"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "method": "get", "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "url": {"url": "https://example.com/api/v1/resource", "hostname": "example.com", "path": "/api/v1/resource", "query_params": {"page": 1, "limit": 10}}}, "response": {"status_code": 200, "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "custom_mapping_errors": [{"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "message": "Invalid value", "targetField": "first_name"}], "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}, "source_ip": "192.168.1.1", "step_requests": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "request": {"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "method": "get", "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "url": {"url": "https://example.com/api/v1/resource", "hostname": "example.com", "path": "/api/v1/resource", "query_params": {"page": 1, "limit": 10}}}, "response": {"status_code": 200, "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "custom_mapping_errors": [{"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "message": "Invalid value", "targetField": "first_name"}], "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_logs:
    speakeasy-default-stackone-list-logs:
      parameters:
        query:
          order_by: "duration"
          order_direction: "asc"
          include: "step_logs"
          filter: {"account_ids": "45355976281015164504,45355976281015164505", "start_date": "2020-01-01T00:00:00.000Z", "end_date": "2020-01-01T00:00:00.000Z", "request_ids": "adbf752f-6457-4ddd-89b3-98ae2252b83b,adbf752f-6457-4ddd-89b3-98ae2252b83c", "source_types": "DASHBOARD,SYNTHETIC_WEBHOOK", "http_methods": "GET,POST", "providers": "ashby,greenhouse", "services": "hris,ats", "resources": "employees,users", "child_resources": "documents,time-off", "sub_resources": "documents,employees", "actions": "download,upload", "status_codes": "200,400", "success": true, "order_by": "duration", "order_direction": "asc"}
      responses:
        "200":
          application/json: {"data": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "event_datetime": "2021-01-01T00:00:00Z", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "source_type": "DASHBOARD", "source_value": "ACCOUNT_TESTER", "source_id": "1234567890", "step_requests": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "id": "adbf752f-6457-4ddd-89b3-98ae2252b83b"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_connectors_meta:
    speakeasy-default-stackone-list-connectors-meta:
      parameters:
        query:
          include: "field_path,unmapped_fields,resources,inactive,webhooks,static_fields"
      responses:
        "200":
          application/json: [{"provider": "hibob", "provider_name": "Hibob", "category": "hris", "active": true, "models": {"employees": {"create": {"apiPath": "/unified/hris/employees/:id", "input": {"defaultFields": [{"name": "first_name", "type": "string"}]}, "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}, "time_off": {"get": {"apiPath": "/unified/hris/employees/:id/time_off/:id", "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}}, "resources": {"images": {"logo_url": "https://app.stackone.com/assets/logos/hibob.png", "original_logo_horizontal_url": "https://app.stackone.com/assets/logos/original/hibob_horizontal.png"}}}]
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_connector_meta:
    speakeasy-default-stackone-get-connector-meta:
      parameters:
        path:
          provider: "<value>"
        query:
          include: "field_path,unmapped_fields,resources,inactive,webhooks,static_fields"
      responses:
        "200":
          application/json: {"provider": "hibob", "provider_name": "Hibob", "category": "hris", "active": true, "models": {"employees": {"create": {"apiPath": "/unified/hris/employees/:id", "input": {"defaultFields": [{"name": "first_name", "type": "string"}]}, "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}, "time_off": {"get": {"apiPath": "/unified/hris/employees/:id/time_off/:id", "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}}, "resources": {"images": {"logo_url": "https://app.stackone.com/assets/logos/hibob.png", "original_logo_horizontal_url": "https://app.stackone.com/assets/logos/original/hibob_horizontal.png"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_proxy_request:
    speakeasy-default-stackone-proxy-request:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"url": "https://api.sample-integration.com/v1", "method": "get", "path": "/employees/directory", "headers": {"Content-Type": "application/json"}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_companies:
    speakeasy-default-hris-list-companies:
      parameters:
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_company:
    speakeasy-default-hris-get-company:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_custom_field_definitions:
    speakeasy-default-hris-list-employee-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_custom_field_definition:
    speakeasy-default-hris-get-employee-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employees:
    speakeasy-default-hris-list-employees:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_id,remote_job_id,job_title,job_description,department_id,remote_department_id,department,cost_centers,company,manager_id,remote_manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,company_id,remote_company_id,preferred_language,citizenships,home_location,work_location,employments,custom_fields,created_at,updated_at,benefits,employee_number,national_identity_number,national_identity_numbers,skills"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "company,employments,work_location,home_location,groups,skills"
          include: "avatar_url,avatar,custom_fields,job_description,benefits"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}], "remote_manager_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "tenure": 2, "work_anniversary": "2021-01-01T00:00:00Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "work_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "company": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}, "employments": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}], "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "skills": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee:
    speakeasy-default-hris-create-employee:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "department_id": "3093", "team_id": "2913", "department": "Physics", "manager_id": "67890", "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "start_date": "2021-01-01T00:00:00.000Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "employment": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}], "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "zip_code": "NG33 5NR", "country": {"value": "US"}, "passthrough": {"other_known_names": "John Doe"}, "state": {}}, "work_location": null, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "R&D", "distribution_percentage": 100}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee:
    speakeasy-default-hris-get-employee:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_id,remote_job_id,job_title,job_description,department_id,remote_department_id,department,cost_centers,company,manager_id,remote_manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,company_id,remote_company_id,preferred_language,citizenships,home_location,work_location,employments,custom_fields,created_at,updated_at,benefits,employee_number,national_identity_number,national_identity_numbers,skills"
          expand: "company,employments,work_location,home_location,groups,skills"
          include: "avatar_url,avatar,custom_fields,job_description,benefits"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}], "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "tenure": 2, "work_anniversary": "2021-01-01T00:00:00Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "work_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": null, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "company": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}, "employments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "fte": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "active": true, "department": null, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}], "division": null, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "description": null, "owner_id": "5356", "parent_id": "7577"}, "manager": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "role": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Admin", "role_type": {"value": "admin"}}}]}], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}], "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "skills": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee:
    speakeasy-default-hris-update-employee:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "department_id": "3093", "team_id": "2913", "department": "Physics", "manager_id": "67890", "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "start_date": "2021-01-01T00:00:00.000Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "employment": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": null, "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "zip_code": "NG33 5NR", "country": {"value": "US"}, "passthrough": {"other_known_names": "John Doe"}, "state": {}}, "work_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "zip_code": "NG33 5NR", "country": {"value": "US"}, "passthrough": {"other_known_names": "John Doe"}, "state": {}}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_invite_employee:
    speakeasy-default-hris-invite-employee:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record invited successfully", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_time_off_requests:
    speakeasy-default-hris-list-employee-time-off-requests:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "approver_id": "1687-4", "remote_approver_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "duration": "P3Y6M4DT12H30M5S", "time_off_policy_id": "cx280928933", "remote_time_off_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "comment": "Taking a day off for personal reasons"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_time_off_request:
    speakeasy-default-hris-create-employee-time-off-request:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"approver_id": "1687-4", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "time_off_policy_id": "cx280928933", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "comment": "Taking a day off for personal reasons", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employees_time_off_request:
    speakeasy-default-hris-get-employees-time-off-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "approver_id": "1687-4", "remote_approver_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "duration": "P3Y6M4DT12H30M5S", "time_off_policy_id": "cx280928933", "remote_time_off_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "comment": "Taking a day off for personal reasons"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_cancel_employee_time_off_request:
    speakeasy-default-hris-cancel-employee-time-off-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_time_off_request:
    speakeasy-default-hris-update-employee-time-off-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"approver_id": "1687-4", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "time_off_policy_id": "cx280928933", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "comment": "Taking a day off for personal reasons", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_batch_upload_employee_document:
    speakeasy-default-hris-batch-upload-employee-document:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"items": [{"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": {}}]}
      responses:
        "202":
          application/json: {"statusCode": 202, "message": "Batch operation accepted", "timestamp": "2021-01-01T01:01:01.000Z", "errors": [["Missing field: name"], [], []]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_upload_employee_document:
    speakeasy-default-hris-upload-employee-document:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": {}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Employee created successfully", "timestamp": "2021-01-01T01:01:01.000Z", "provider_errors": [{"status": 400, "url": "https://api.someprovider.com/v1/endpoint", "raw": {}, "headers": {}}], "unified_warnings": [{"message": "The provided field type is not supported in the current model."}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_download_employee_document:
    speakeasy-default-hris-download-employee-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/octet-stream: "0xD8a7d4EC38"
          application/gzip: "0xD8a7d4EC38"
          application/msword: "0x2fCA5f2BdE"
          application/pdf: "0x2787fbBA5B"
          application/rtf: "0x5E636dB592"
          application/vnd.ms-excel: "0x228e85F828"
          application/vnd.ms-outlook: "0x84d5f5DF5D"
          application/vnd.ms-powerpoint: "0xeE5DDaEf5F"
          application/vnd.oasis.opendocument.presentation: "0xBdC3e9094d"
          application/vnd.oasis.opendocument.spreadsheet: "0xC5bf4ae9Fb"
          application/vnd.oasis.opendocument.text: "0xEFAAA5FEf6"
          application/vnd.openxmlformats-officedocument.presentationml.presentation: "0xc37c3f3042"
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: "0xAccb6bF5c7"
          application/vnd.openxmlformats-officedocument.wordprocessingml.document: "0x53dBaA0D24"
          application/x-7z-compressed: "0x15cFE0D1c1"
          application/x-rar-compressed: "0xDE9DA3f1fc"
          application/xml: "0xEcAbE4Fde3"
          application/zip: "0xbCdBCdD9Db"
          audio/mp4: "0xB88ef7DE3B"
          audio/mpeg: "0xC55c419fAe"
          audio/wav: "0xAf65FAf186"
          image/bmp: "0x96192FD83b"
          image/gif: "0x00C0A53c9f"
          image/heic: "0xF49E299baF"
          image/jpeg: "0x42b05E3DA1"
          image/png: "0x3f00EfB460"
          image/tiff: "0x97fa658Df0"
          image/webp: "0x214CFC4E3a"
          message/rfc822: "0xb925d00B7a"
          text/csv: "0x112a9BeaEd"
          text/html: "0xD5EFfB35Ae"
          text/rtf: "0xbFc3Ef110B"
          video/avi: "0xa2BCDcA8E9"
          video/mp4: "0x8E5A2bAdFC"
          video/quicktime: "0xBa3f9432a1"
          video/webm: "0x673DfC4bc6"
          text/plain: "<value>"
          application/json: {"headers": {"content-disposition": "attachment; filename=\"example.pdf\"", "content-type": "application/pdf", "content-length": 1024, "content-range": "bytes 0-1023/2048", "content-encoding": "gzip", "transfer-encoding": "chunked"}, "data": "0xeDAC87fBe2"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_documents:
    speakeasy-default-hris-list-employee-documents:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_document:
    speakeasy-default-hris-get-employee-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_categories:
    speakeasy-default-hris-list-employee-categories:
      parameters:
        query:
          fields: "id,remote_id,name,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_document_category:
    speakeasy-default-hris-get-employee-document-category:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_work_eligibility:
    speakeasy-default-hris-list-employee-work-eligibility:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,type,sub_type,document,valid_from,valid_to,issued_by,number"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "sub_type": "H1B", "document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "issued_by": {"value": "US"}, "number": "1234567890"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_work_eligibility_request:
    speakeasy-default-hris-create-employee-work-eligibility-request:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": null}, "issued_by": {"value": "US"}, "number": "1234567890", "sub_type": "H1B", "type": {}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employees_work_eligibility:
    speakeasy-default-hris-get-employees-work-eligibility:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,type,sub_type,document,valid_from,valid_to,issued_by,number"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "sub_type": "H1B", "document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "issued_by": {"value": "US"}, "number": "1234567890"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_work_eligibility_request:
    speakeasy-default-hris-update-employee-work-eligibility-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}, "issued_by": {"value": "US"}, "number": "1234567890", "sub_type": "H1B", "type": {}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_time_off_balances:
    speakeasy-default-hris-list-employee-time-off-balances:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,policy_id,remote_policy_id,policy,current_balance,initial_balance,balance_unit,balance_start_date,balance_expiry_date,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_time_off_balance:
    speakeasy-default-hris-get-employee-time-off-balance:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,policy_id,remote_policy_id,policy,current_balance,initial_balance,balance_unit,balance_start_date,balance_expiry_date,updated_at"
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "policy_id": "cx280928937", "remote_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "current_balance": 8, "initial_balance": 8, "balance_unit": {"value": "hours"}, "balance_start_date": "2021-01-01T01:01:01.000Z", "balance_expiry_date": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employments:
    speakeasy-default-hris-list-employments:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,type,contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,manager"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employment:
    speakeasy-default-hris-get-employment:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,type,contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,manager"
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": null, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "fte": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "active": true, "department": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": null}, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}], "division": null, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "description": null, "owner_id": "5356", "parent_id": "7577"}, "manager": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "role": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Admin", "role_type": {"value": "admin"}}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_employments:
    speakeasy-default-hris-list-employee-employments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,type,contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,manager"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_employment:
    speakeasy-default-hris-create-employee-employment:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "job_id": "5290", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_employment:
    speakeasy-default-hris-get-employee-employment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,type,contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,manager"
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "fte": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "active": true, "department": null, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}], "division": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "description": {"text": "Testing the laws of motion"}, "owner_id": "5356", "parent_id": "7577"}, "manager": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "role": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Admin", "role_type": {"value": "admin"}}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_employment:
    speakeasy-default-hris-update-employee-employment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_groups:
    speakeasy-default-hris-list-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_department_groups:
    speakeasy-default-hris-list-department-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_cost_center_groups:
    speakeasy-default-hris-list-cost-center-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,distribution_percentage,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_team_groups:
    speakeasy-default-hris-list-team-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_division_groups:
    speakeasy-default-hris-list-division-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_companies_groups:
    speakeasy-default-hris-list-companies-groups:
      parameters:
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_group:
    speakeasy-default-hris-get-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_department_group:
    speakeasy-default-hris-get-department-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "department"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_cost_center_group:
    speakeasy-default-hris-get-cost-center-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,distribution_percentage,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_team_group:
    speakeasy-default-hris-get-team-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_division_group:
    speakeasy-default-hris-get-division-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "division"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_company_group:
    speakeasy-default-hris-get-company-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_jobs:
    speakeasy-default-hris-list-jobs:
      parameters:
        query:
          fields: "id,remote_id,code,title,description,status,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_job:
    speakeasy-default-hris-get-job:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,code,title,description,status,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "status": {"value": "open"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_locations:
    speakeasy-default-hris-list-locations:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_location:
    speakeasy-default-hris-get-location:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": null, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_positions:
    speakeasy-default-hris-list-positions:
      parameters:
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          status: "open"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "job_id": "JOB-12345", "title": "Senior Software Engineer", "description": "Responsible for developing and maintaining software applications", "department_id": "dept-123", "location_id": "loc-456", "employment_type": "full-time", "status": {"value": "open"}, "posted_date": "2024-01-15T10:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_position:
    speakeasy-default-hris-get-position:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "job_id": "JOB-12345", "title": "Senior Software Engineer", "description": "Responsible for developing and maintaining software applications", "department_id": "dept-123", "location_id": "loc-456", "employment_type": "full-time", "status": {"value": "open"}, "posted_date": "2024-01-15T10:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_entries:
    speakeasy-default-hris-list-time-entries:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,start_time,end_time,hours_worked,break_duration,labor_type,location,status,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "start_time": "2020-01-01T00:00:00.000Z", "end_time": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_entries:
    speakeasy-default-hris-get-time-entries:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,start_time,end_time,hours_worked,break_duration,labor_type,location,status,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_time": "2021-01-01T01:01:01.000Z", "end_time": "2021-01-01T01:01:01.000Z", "hours_worked": 8, "break_duration": 0.5, "labor_type": {"code": "ABC123"}, "location": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}, "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_off_requests:
    speakeasy-default-hris-list-time-off-requests:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          filter: null
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_off_request:
    speakeasy-default-hris-get-time-off-request:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "approver_id": "1687-4", "remote_approver_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "duration": "P3Y6M4DT12H30M5S", "time_off_policy_id": "cx280928933", "remote_time_off_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "comment": "Taking a day off for personal reasons"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_shifts:
    speakeasy-default-hris-list-shifts:
      parameters:
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "emp_123456789", "location_id": "loc_123456789", "company_id": "comp_123456789", "start_time": "2024-03-20T09:00:00Z", "end_time": "2024-03-20T17:00:00Z", "break_duration": "PT1H30M", "status": {"value": "confirmed", "source_value": "Confirmed"}, "approval_status": {"value": "approved", "source_value": "Approved"}, "breaks": [{"id": "break_123456789", "start_time": "2024-03-20T12:00:00Z", "end_time": "2024-03-20T13:00:00Z", "duration": "PT1H", "is_paid": true, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}], "created_at": "2024-03-20T08:00:00Z", "updated_at": "2024-03-20T08:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_shift:
    speakeasy-default-hris-get-shift:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "emp_123456789", "location_id": "loc_123456789", "company_id": "comp_123456789", "start_time": "2024-03-20T09:00:00Z", "end_time": "2024-03-20T17:00:00Z", "break_duration": "PT1H30M", "status": {"value": "confirmed", "source_value": "Confirmed"}, "approval_status": {"value": "approved", "source_value": "Approved"}, "breaks": [{"id": "break_123456789", "start_time": "2024-03-20T12:00:00Z", "end_time": "2024-03-20T13:00:00Z", "duration": "PT1H", "is_paid": true, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}], "created_at": "2024-03-20T08:00:00Z", "updated_at": "2024-03-20T08:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_off_types:
    speakeasy-default-hris-list-time-off-types:
      parameters:
        query:
          fields: "id,remote_id,name,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_off_type:
    speakeasy-default-hris-get-time-off-type:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_off_policies:
    speakeasy-default-hris-list-time-off-policies:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,duration_unit,reasons,updated_at,created_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_off_policy:
    speakeasy-default-hris-get-time-off-policy:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,duration_unit,reasons,updated_at,created_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_time_off_policies:
    speakeasy-default-hris-list-employee-time-off-policies:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,duration_unit,reasons,updated_at,created_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_benefits:
    speakeasy-default-hris-list-benefits:
      parameters:
        query:
          fields: "id,remote_id,name,benefit_type,provider,description,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_benefit:
    speakeasy-default-hris-get-benefit:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,benefit_type,provider,description,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_skills:
    speakeasy-default-hris-list-employee-skills:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active,language,maximum_proficiency,minimum_proficiency"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_skill:
    speakeasy-default-hris-create-employee-skill:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"id": "16873-IT345", "name": "Information-Technology", "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": null}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_skill:
    speakeasy-default-hris-get-employee-skill:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,active,language,maximum_proficiency,minimum_proficiency"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": null, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_tasks:
    speakeasy-default-hris-list-employee-tasks:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "name": "Complete onboarding documents", "description": "Please complete all required onboarding documents in the employee portal", "type": {"value": "action"}, "status": {"value": "open"}, "due_date": "2024-03-20T23:59:59.000Z", "completion_date": "2024-03-19T15:30:00.000Z", "assigned_by_employee_id": "cx280928938", "assigned_by_employee_name": "John Smith", "link_to_task": "https://provider.com/tasks/123", "extracted_links": ["https://provider.com/docs/1", "https://provider.com/forms/2"], "next_task_id": "cx280928939", "parent_process_name": "Onboarding Tasks", "comments": [{"comment": "Approved based on in-person assessment", "created_at": "2024-03-15T10:00:00.000Z"}], "attachments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}], "created_at": "2024-03-15T10:00:00.000Z", "updated_at": "2024-03-19T15:30:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_task:
    speakeasy-default-hris-get-employee-task:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": null}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_tasks:
    speakeasy-default-hris-list-tasks:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "name": "Complete onboarding documents", "description": "Please complete all required onboarding documents in the employee portal", "type": {"value": "action"}, "status": {"value": "open"}, "due_date": "2024-03-20T23:59:59.000Z", "completion_date": "2024-03-19T15:30:00.000Z", "assigned_by_employee_id": "cx280928938", "assigned_by_employee_name": "John Smith", "link_to_task": "https://provider.com/tasks/123", "extracted_links": ["https://provider.com/docs/1", "https://provider.com/forms/2"], "next_task_id": "cx280928939", "parent_process_name": "Onboarding Tasks", "comments": null, "attachments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": null}], "created_at": "2024-03-15T10:00:00.000Z", "updated_at": "2024-03-19T15:30:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_task:
    speakeasy-default-hris-get-task:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "name": "Complete onboarding documents", "description": "Please complete all required onboarding documents in the employee portal", "type": {"value": "action"}, "status": {"value": "open"}, "due_date": "2024-03-20T23:59:59.000Z", "completion_date": "2024-03-19T15:30:00.000Z", "assigned_by_employee_id": "cx280928938", "assigned_by_employee_name": "John Smith", "link_to_task": "https://provider.com/tasks/123", "extracted_links": ["https://provider.com/docs/1", "https://provider.com/forms/2"], "next_task_id": "cx280928939", "parent_process_name": "Onboarding Tasks", "comments": [{"comment": "Approved based on in-person assessment", "created_at": "2024-03-15T10:00:00.000Z"}], "attachments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}], "created_at": "2024-03-15T10:00:00.000Z", "updated_at": "2024-03-19T15:30:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_applications:
    speakeasy-default-ats-list-applications:
      parameters:
        query:
          fields: "id,remote_id,candidate_id,remote_candidate_id,job_id,remote_job_id,job_posting_id,remote_job_posting_id,interview_stage,interview_stage_id,remote_interview_stage_id,rejected_reason,rejected_reason_id,remote_rejected_reason_id,rejected_reason_ids,remote_rejected_reason_ids,rejected_reasons,rejected_at,location_id,remote_location_id,location_ids,remote_location_ids,status,application_status,questionnaires,attachments,result_links,source,created_at,updated_at,documents,custom_fields,candidate"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          expand: "documents"
          include: "attachments,custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_application:
    speakeasy-default-ats-create-application:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "job_id": "4071538b-3cac-4fbf-ac76-f78ed250ffdd", "job_posting_id": "1c702a20-8de8-4d03-ac18-cbf4ac42eb51", "location_id": "dd8d41d1-5eb8-4408-9c87-9ba44604eae4", "application_status": null, "questionnaires": [{"id": "right_to_work", "answers": [{"id": "answer1", "type": {"value": "short_text", "source_value": "Short Text"}, "values": ["Yes"]}]}], "source": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "LinkedIn"}, "candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "candidate": {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "phone_numbers": [{"phone": "+447700112233"}], "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "company": "Company Inc.", "title": "Software Engineer", "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}]}, "documents": [{"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": null}]}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application:
    speakeasy-default-ats-get-application:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,candidate_id,remote_candidate_id,job_id,remote_job_id,job_posting_id,remote_job_posting_id,interview_stage,interview_stage_id,remote_interview_stage_id,rejected_reason,rejected_reason_id,remote_rejected_reason_id,rejected_reason_ids,remote_rejected_reason_ids,rejected_reasons,rejected_at,location_id,remote_location_id,location_ids,remote_location_ids,status,application_status,questionnaires,attachments,result_links,source,created_at,updated_at,documents,custom_fields,candidate"
          expand: "documents"
          include: "attachments,custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "job_id": "4071538b-3cac-4fbf-ac76-f78ed250ffdd", "remote_job_id": "4071538b-3cac-4fbf-ac76-f78ed250ffdd", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_stage_id": "18bcbb1b-3cbc-4198-a999-460861d19480", "remote_interview_stage_id": "18bcbb1b-3cbc-4198-a999-460861d19480", "rejected_reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "label": "Failed Phone Screen", "rejected_reason_type": {"value": "rejected_by_organization", "source_value": "RejectedByOrg"}}], "rejected_reason_ids": ["f223d7f6-908b-48f0-9237-b201c307f609"], "remote_rejected_reason_ids": ["f223d7f6-908b-48f0-9237-b201c307f609"], "rejected_at": "2021-01-01T01:01:01.000Z", "location_ids": ["dd8d41d1-5eb8-4408-9c87-9ba44604eae4"], "remote_location_ids": ["dd8d41d1-5eb8-4408-9c87-9ba44604eae4"], "application_status": {"value": "hired", "source_value": "Hired"}, "questionnaires": [{"id": "right_to_work", "answers": [{"id": "answer1", "type": {"value": "short_text", "source_value": "Short Text"}, "values": ["Yes"]}]}], "candidate": null, "documents": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}], "result_links": [{"label": "test result link", "url": "http://example.com/test-result/4565765/data"}], "source": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "LinkedIn"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_application:
    speakeasy-default-ats-update-application:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "application_status": {"value": "hired", "source_value": "Hired"}, "source": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "LinkedIn"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_applications_offers:
    speakeasy-default-ats-list-applications-offers:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_move_application:
    speakeasy-default-ats-move-application:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "interview_stage_id": "f223d7f6-908b-48f0-9237-b201c307f609"}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Application moved successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_reject_application:
    speakeasy-default-ats-reject-application:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "rejected_reason_id": "f223d7f6-908b-48f0-9237-b201c307f609"}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Application rejected successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_offer:
    speakeasy-default-ats-get-application-offer:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_scorecards:
    speakeasy-default-ats-list-application-scorecards:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,sections,label,candidate_id,remote_candidate_id,application_id,remote_application_id,interview_id,remote_interview_id,author_id,remote_author_id,overall_recommendation,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_scorecard:
    speakeasy-default-ats-get-application-scorecard:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,sections,label,candidate_id,remote_candidate_id,application_id,remote_application_id,interview_id,remote_interview_id,author_id,remote_author_id,overall_recommendation,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "sections": null, "label": "Technical Interview", "candidate_id": "5678-9", "remote_candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "application_id": "1011-12", "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_id": "1314-15", "remote_interview_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "author_id": "1617-18", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "overall_recommendation": "no_decision", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_changes:
    speakeasy-default-ats-list-application-changes:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "event_id,remote_event_id,created_at,effective_at,change_type,actor,new_values"
          filter: {"created_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2024-01-15T10:30:00Z", "effective_at": "2024-01-15T10:30:00Z", "actor": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "change_type": {"value": "application_status", "source_value": "StatusChange"}, "new_values": {"interview_stage_id": "18bcbb1b-3cbc-4198-a999-460861d19480", "rejected_reason_ids": ["f223d7f6-908b-48f0-9237-b201c307f609"], "application_status": null}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_notes:
    speakeasy-default-ats-list-application-notes:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_application_note:
    speakeasy-default-ats-create-application-note:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "visibility": {"value": "public", "source_value": "Public"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_note:
    speakeasy-default-ats-get-application-note:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_application_note:
    speakeasy-default-ats-update-application-note:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "visibility": {"value": "public", "source_value": "Public"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_applications_scheduled_interviews:
    speakeasy-default-ats-list-applications-scheduled-interviews:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,interview_stage_id,remote_interview_stage_id,interview_stage,status,interview_status,interviewer_ids,remote_interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_scheduled_interview:
    speakeasy-default-ats-get-application-scheduled-interview:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,candidate_id,remote_candidate_id,job_id,remote_job_id,job_posting_id,remote_job_posting_id,interview_stage,interview_stage_id,remote_interview_stage_id,rejected_reason,rejected_reason_id,remote_rejected_reason_id,rejected_reason_ids,remote_rejected_reason_ids,rejected_reasons,rejected_at,location_id,remote_location_id,location_ids,remote_location_ids,status,application_status,questionnaires,attachments,result_links,source,created_at,updated_at,documents,custom_fields,candidate"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_upload_application_document:
    speakeasy-default-ats-upload-application-document:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "weather-forecast", "file_format": null, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": {}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Employee created successfully", "timestamp": "2021-01-01T01:01:01.000Z", "provider_errors": [{"status": 400, "url": "https://api.someprovider.com/v1/endpoint", "raw": {}, "headers": {}}], "unified_warnings": [{"message": "The provided field type is not supported in the current model."}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_download_application_document:
    speakeasy-default-ats-download-application-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/octet-stream: "0x22c19257bb"
          application/gzip: "0x22c19257bb"
          application/msword: "0xbCa44FeEb1"
          application/pdf: "0xaa1eeCfc4A"
          application/rtf: "0x01EFDC3bd1"
          application/vnd.ms-excel: "0x2207DFEAf3"
          application/vnd.ms-outlook: "0xD6FE8CEb2C"
          application/vnd.ms-powerpoint: "0xc452638C15"
          application/vnd.oasis.opendocument.presentation: "0x9d2ffFAe87"
          application/vnd.oasis.opendocument.spreadsheet: "0x66f6d3F200"
          application/vnd.oasis.opendocument.text: "0x2Dad9f0caf"
          application/vnd.openxmlformats-officedocument.presentationml.presentation: "0x4D1E2fcecc"
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: "0xa4dEaaC0Ea"
          application/vnd.openxmlformats-officedocument.wordprocessingml.document: "0xed80bd88a3"
          application/x-7z-compressed: "0x075F4b8773"
          application/x-rar-compressed: "0xFbD277306C"
          application/xml: "0x9cb30a1dee"
          application/zip: "0x2C3EBDaf72"
          audio/mp4: "0x85daC912dC"
          audio/mpeg: "0xFfACa8e6b5"
          audio/wav: "0x0c128B556D"
          image/bmp: "0x63FdfEBeFE"
          image/gif: "0x45f3688c63"
          image/heic: "0x06E3eecF75"
          image/jpeg: "0xADBaeF0eCA"
          image/png: "0xbEF42fcc7c"
          image/tiff: "0xE3fcf3Ef8B"
          image/webp: "0xe27B8aa32f"
          message/rfc822: "0xDAfDdF1e3d"
          text/csv: "0xcdfbAb46FF"
          text/html: "0x34fe613ca0"
          text/rtf: "0x2405B72430"
          video/avi: "0x4Db048Dcae"
          video/mp4: "0xAeE9A02210"
          video/quicktime: "0x8bb83A9B0e"
          video/webm: "0x14b0d37bff"
          text/plain: "<value>"
          application/json: {"headers": {"content-disposition": "attachment; filename=\"example.pdf\"", "content-type": "application/pdf", "content-length": 1024, "content-range": "bytes 0-1023/2048", "content-encoding": "gzip", "transfer-encoding": "chunked"}, "data": "0xeaccaAAeBE"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_documents:
    speakeasy-default-ats-list-application-documents:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_document:
    speakeasy-default-ats-get-application-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_candidates:
    speakeasy-default-ats-list-candidates:
      parameters:
        query:
          fields: "id,remote_id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,country,title,application_ids,remote_application_ids,hired_at,custom_fields,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "social_links": null, "phone_numbers": [{"phone": "+447700112233"}], "company": "Company Inc.", "title": "Software Engineer", "application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "remote_application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_candidate:
    speakeasy-default-ats-create-candidate:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "phone_numbers": [{"phone": "+447700112233"}], "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "company": "Company Inc.", "title": "Software Engineer", "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}]}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_candidate:
    speakeasy-default-ats-get-candidate:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,country,title,application_ids,remote_application_ids,hired_at,custom_fields,created_at,updated_at"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "phone_numbers": [{"phone": "+447700112233"}], "company": "Company Inc.", "title": "Software Engineer", "application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "remote_application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_candidate:
    speakeasy-default-ats-update-candidate:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "phone_numbers": [{"phone": "+447700112233"}], "company": "Company Inc.", "title": "Software Engineer", "application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": null}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_candidate_notes:
    speakeasy-default-ats-list-candidate-notes:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_candidate_note:
    speakeasy-default-ats-create-candidate-note:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "visibility": {"value": "public", "source_value": "Public"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_candidate_note:
    speakeasy-default-ats-get-candidate-note:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_custom_field_definitions:
    speakeasy-default-ats-list-application-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_custom_field_definition:
    speakeasy-default-ats-get-application-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_candidate_custom_field_definitions:
    speakeasy-default-ats-list-candidate-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_candidate_custom_field_definition:
    speakeasy-default-ats-get-candidate-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_job_custom_field_definitions:
    speakeasy-default-ats-list-job-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job_custom_field_definition:
    speakeasy-default-ats-get-job-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_departments:
    speakeasy-default-ats-list-departments:
      parameters:
        query:
          fields: "id,remote_id,name"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_department:
    speakeasy-default-ats-get-department:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_interview_stages:
    speakeasy-default-ats-list-interview-stages:
      parameters:
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_interview_stage:
    speakeasy-default-ats-get-interview-stage:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_interviews:
    speakeasy-default-ats-list-interviews:
      parameters:
        query:
          fields: "id,remote_id,application_id,remote_application_id,interview_stage_id,remote_interview_stage_id,interview_stage,status,interview_status,interviewer_ids,remote_interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_interview:
    speakeasy-default-ats-get-interview:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,interview_stage_id,remote_interview_stage_id,interview_stage,status,interview_status,interviewer_ids,remote_interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_jobs:
    speakeasy-default-ats-list-jobs:
      parameters:
        query:
          fields: "id,remote_id,code,title,description,status,job_status,department_ids,remote_department_ids,location_ids,remote_location_ids,hiring_team,interview_stages,confidential,custom_fields,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          expand: "job_postings,interview_stages"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_job:
    speakeasy-default-ats-create-job:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "job_status": {"value": "published", "source_value": "Published"}, "department_ids": ["308570", "308571", "308572"], "location_ids": ["668570", "678571", "688572"], "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "interview_stages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job:
    speakeasy-default-ats-get-job:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,code,title,description,status,job_status,department_ids,remote_department_ids,location_ids,remote_location_ids,hiring_team,interview_stages,confidential,custom_fields,created_at,updated_at"
          expand: "job_postings,interview_stages"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "job_status": {"value": "published", "source_value": "Published"}, "department_ids": ["308570", "308571", "308572"], "remote_department_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "location_ids": ["668570", "678571", "688572"], "remote_location_ids": ["668570", "678571", "688572"], "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "interview_stages": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_job:
    speakeasy-default-ats-update-job:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "job_status": {"value": "published", "source_value": "Published"}, "department_ids": ["308570", "308571", "308572"], "location_ids": ["668570", "678571", "688572"], "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "interview_stages": null, "custom_fields": null, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_lists:
    speakeasy-default-ats-list-lists:
      parameters:
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_list:
    speakeasy-default-ats-get-list:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "items": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "type": {"value": "contacts", "source_value": "Contacts"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_locations:
    speakeasy-default-ats-list-locations:
      parameters:
        query:
          fields: "id,remote_id,name"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_location:
    speakeasy-default-ats-get-location:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_rejected_reasons:
    speakeasy-default-ats-list-rejected-reasons:
      parameters:
        query:
          fields: "id,remote_id,label,type,rejected_reason_type"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_rejected_reason:
    speakeasy-default-ats-get-rejected-reason:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,label,type,rejected_reason_type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "label": "Failed Phone Screen", "rejected_reason_type": {"value": "rejected_by_organization", "source_value": "RejectedByOrg"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_users:
    speakeasy-default-ats-list-users:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,name,email,phone"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_user:
    speakeasy-default-ats-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,name,email,phone"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "al60043", "name": "John Dew", "email": "john@dew.com", "phone_number": "+1234567890", "active": true, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_job_postings:
    speakeasy-default-ats-list-job-postings:
      parameters:
        query:
          fields: "id,remote_id,title,locations,internal,status,job_id,remote_job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questionnaires,start_date,updated_at,created_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          include: "questionnaires"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job_posting:
    speakeasy-default-ats-get-job-posting:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,title,locations,internal,status,job_id,remote_job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questionnaires,start_date,updated_at,created_at"
          include: "questionnaires"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "Software Engineer", "locations": [{"id": "12345", "name": "New York"}, {"id": "67890", "name": "Remote"}], "internal": "true", "status": {"value": "live", "source_value": "Live"}, "job_id": "job001", "remote_job_posting_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "content": {"plain": "This is a plain text description", "html": "<p>This is an HTML description</p>"}, "compensation": [{"title": "Base Salary", "type": {"value": "salary", "source_value": "Salary"}, "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "currency": "USD", "value": "50000", "min_value_range": "45000", "max_value_range": "55000"}, {"title": "Bonus", "type": {"value": "salary", "source_value": "Salary"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "currency": "USD", "value": "10%"}], "employment_type": {"value": "permanent", "source_value": "Permanent"}, "employment_contract_type": {"value": "full_time", "source_value": "FullTime"}, "external_url": "https://www.example.com/job-posting/abcd1234", "external_apply_url": "https://www.example.com/job-posting/abcd1234/apply", "questionnaires": [{"id": "about001", "name": "About", "internal": "false", "questions": [{"id": "question001", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What is your name?", "required": true, "parent_question": null}, {"id": "question002", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What are your hobbies?", "required": false, "parent_question": null}, {"id": "question003", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What is your favourite animal?", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Dog"}, {"id": "2", "text": "Cat"}, {"id": "3", "text": "Bird"}, {"id": "4", "text": "Other"}], "parent_question": null}, {"id": "question004", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Do you have previous work experience??", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Yes"}, {"id": "2", "text": "No"}], "parent_question": null}, {"id": "question005", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What was the duration of your last employment?", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Less than 1 year"}, {"id": "2", "text": "1-2 years"}, {"id": "2", "text": "More than 2 year"}], "parent_question": {"id": "question004", "option_ids": ["1"], "condition_type": {"value": "equals_to", "source_value": "EqualsTo"}}}]}, {"id": "experience001", "name": "Experience", "internal": "false", "questions": [{"id": "question004", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Please upload your resume.", "required": true, "parent_question": null}, {"id": "question005", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Select the programming languages you are proficient in.", "required": true, "multiple_choice_answers": [{"id": "1", "text": "JavaScript"}, {"id": "2", "text": "Python"}, {"id": "3", "text": "Java"}], "parent_question": null}, {"id": "question006", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Are you willing to relocate?", "parent_question": null}, {"id": "question007", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "How many years of experience do you have?", "parent_question": null}, {"id": "question008", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "When did you start your most recent position?", "parent_question": null}, {"id": "question009", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Do you have Project Management Experience?", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Yes"}, {"id": "2", "text": "No"}], "parent_question": null}, {"id": "question010", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "How much Project Management experience do you have?", "multiple_choice_answers": [{"id": "1", "text": "1-3 years"}, {"id": "2", "text": "3-5 years"}, {"id": "3", "text": "5-10 years"}, {"id": "4", "text": "More than 10 years"}], "parent_question": {"id": "question009", "option_ids": ["1"], "condition_type": {"value": "equals_to", "source_value": "EqualsTo"}}}]}], "start_date": "2021-01-01T00:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_offers:
    speakeasy-default-ats-list-offers:
      parameters:
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_offer:
    speakeasy-default-ats-create-offer:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_offer:
    speakeasy-default-ats-get-offer:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_assessments_packages:
    speakeasy-default-ats-list-assessments-packages:
      parameters:
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_assessments_package:
    speakeasy-default-ats-get-assessments-package:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_order_assessments_request:
    speakeasy-default-ats-order-assessments-request:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "package": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}, "application": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "application_status": {"value": "hired", "source_value": "Hired"}, "passthrough": {"other_known_names": "John Doe"}}, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "passthrough": {"other_known_names": "John Doe"}}, "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "first_name": "Romain", "last_name": "Sestier", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "passthrough": {"other_known_names": "John Doe"}, "profile_url": "https://exmaple.com/candidate?id=xyz"}, "requester": {"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}, "results_update_url": "https://exmaple.com/integrations/results/update", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "test_url": "https://exmaple.com/integrations/candidate/test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_assessments_result:
    speakeasy-default-ats-update-assessments-result:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"score": null, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}], "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "profile_url": "https://exmaple.com/candidate?id=xyz"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_assessments_result:
    speakeasy-default-ats-get-assessments-result:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,candidate,score,start_date,submission_date,summary,result,result_url,attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "candidate": null, "score": {"label": "Percentage", "value": "80", "min": "0", "max": "100"}, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_background_check_packages:
    speakeasy-default-ats-list-background-check-packages:
      parameters:
        query:
          fields: "id,remote_id,name,description,tests"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_background_check_package:
    speakeasy-default-ats-create-background-check-package:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_background_check_package:
    speakeasy-default-ats-get-background-check-package:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,tests"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_delete_background_check_package:
    speakeasy-default-ats-delete-background-check-package:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_background_check_package:
    speakeasy-default-ats-update-background-check-package:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_order_background_check_request:
    speakeasy-default-ats-order-background-check-request:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "application": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "application_status": {"value": "hired", "source_value": "Hired"}, "passthrough": {"other_known_names": "John Doe"}}, "job": null, "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "first_name": "Romain", "last_name": "Sestier", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "passthrough": {"other_known_names": "John Doe"}, "profile_url": "https://exmaple.com/candidate?id=xyz"}, "requester": {"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}, "results_update_url": "https://exmaple.com/integrations/results/update", "package": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "test_url": "https://exmaple.com/integrations/candidate/test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_background_check_result:
    speakeasy-default-ats-update-background-check-result:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"score": {"label": "Percentage", "value": "80", "min": "0", "max": "100"}, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}], "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "profile_url": "https://exmaple.com/candidate?id=xyz"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_background_check_result:
    speakeasy-default-ats-get-background-check-result:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,candidate,score,start_date,submission_date,summary,result,result_url,attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "profile_url": "https://exmaple.com/candidate?id=xyz"}, "score": {"label": "Percentage", "value": "80", "min": "0", "max": "100"}, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_document_categories:
    speakeasy-default-ats-list-application-document-categories:
      parameters:
        query:
          fields: "id,remote_id,name,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_document_category:
    speakeasy-default-ats-get-application-document-category:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_courses:
    speakeasy-default-lms-list-courses:
      parameters:
        query:
          fields: "id,remote_id,external_reference,content_ids,remote_content_ids,title,description,languages,cover_url,url,active,duration,categories,skills,updated_at,created_at,content,provider,localizations,authors"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "content_ids": ["16873-SOFTWARE-ENG-COURSE", "16874-SOFTWARE-ENG-COURSE"], "remote_content_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "title": "Software Engineer Lv 1", "description": "This course acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "cover_url": "https://www.googledrive.com/?v=16873", "url": "https://www.linkedinlearning.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "categories": [{"id": "12345", "name": "Technology"}], "skills": [{"id": "12345", "name": "Sales Techniques"}], "provider": "Course Provider", "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_course:
    speakeasy-default-lms-get-course:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,content_ids,remote_content_ids,title,description,languages,cover_url,url,active,duration,categories,skills,updated_at,created_at,content,provider,localizations,authors"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "content_ids": ["16873-SOFTWARE-ENG-COURSE", "16874-SOFTWARE-ENG-COURSE"], "remote_content_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "title": "Software Engineer Lv 1", "description": "This course acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "cover_url": "https://www.googledrive.com/?v=16873", "url": "https://www.linkedinlearning.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "categories": [{"id": "12345", "name": "Technology"}], "skills": [{"id": "12345", "name": "Sales Techniques"}], "provider": "Course Provider", "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_user_assignments:
    speakeasy-default-lms-list-user-assignments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,user_id,remote_user_id,course_id,remote_course_id,updated_at,created_at,due_date,status,progress,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,certificate_url,result,completed_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          user_id: "c28xyrc55866bvuv"
          remote_user_id: "e3cb75bf-aa84-466e-a6c1-b8322b257a48"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_create_user_assignment:
    speakeasy-default-lms-create-user-assignment:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "learning_object_id": "e3gd34-23tr21-er234-345er56", "learning_object_external_reference": "learning-content-123", "progress": 40, "created_at": "2021-07-21T14:00:00.000Z", "due_date": "2021-07-21T14:00:00.000Z", "status": {"value": "in_progress"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_user_assignment:
    speakeasy-default-lms-get-user-assignment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "progress": 40, "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "due_date": "2021-07-21T14:00:00.000Z", "status": null, "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "certificate_url": "https://example.com/certificate/12345", "completed_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_batch_upsert_content:
    speakeasy-default-lms-batch-upsert-content:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"items": [{"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "localizations": [{"title": "Software Engineer Lv 1", "description": "This course acts as learning resource for software engineers."}, {"title": "Software Engineer: A comprehensive guide", "description": "This course acts as learning resource for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "categories": [{"id": "16873-IT345", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Information-Technology", "language": {"value": "en_GB"}}], "additional_data": [{"id": "learning_outcomes", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "value": "This is additional data"}]}]}
      responses:
        "202":
          application/json: {"statusCode": 202, "message": "Batch operation accepted", "timestamp": "2021-01-01T01:01:01.000Z", "errors": [["Missing field: name"], [], []]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_content:
    speakeasy-default-lms-list-content:
      parameters:
        query:
          fields: "id,remote_id,external_reference,course_ids,remote_course_ids,title,description,additional_data,languages,content_url,mobile_launch_content_url,content_type,cover_url,active,duration,order,categories,skills,updated_at,created_at,provider,localizations,tags,authors"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"url": "https://example.com/file.pdf", "unified_url": "https://api.stackone.com/unified/hris/employees/12345/documents/67890/download", "file_format": {"value": "pdf", "source_value": "application/pdf"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_upsert_content:
    speakeasy-default-lms-upsert-content:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "localizations": [{"title": "Software Engineer Lv 1", "description": "This course acts as learning resource for software engineers."}, {"title": "Software Engineer: A comprehensive guide", "description": "This course acts as learning resource for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "categories": [{"id": "16873-IT345", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Information-Technology", "language": {"value": "en_GB"}}], "additional_data": [{"id": "learning_outcomes", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "value": "This is additional data"}]}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_content:
    speakeasy-default-lms-get-content:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,course_ids,remote_course_ids,title,description,additional_data,languages,content_url,mobile_launch_content_url,content_type,cover_url,active,duration,order,categories,skills,updated_at,created_at,provider,localizations,tags,authors"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"url": "https://example.com/file.pdf", "unified_url": "https://api.stackone.com/unified/hris/employees/12345/documents/67890/download", "file_format": {"value": "pdf", "source_value": "application/pdf"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_update_content:
    speakeasy-default-lms-update-content:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "localizations": [{"title": "Software Engineer Lv 1", "description": "This course acts as learning resource for software engineers."}, {"title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "categories": [{"name": "Technology"}], "additional_data": [{"id": "learning_outcomes", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "value": "This is additional data"}]}
      responses:
        "201":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_user_completions:
    speakeasy-default-lms-list-user-completions:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_id,remote_external_id,external_reference,content_id,remote_content_id,course_id,remote_course_id,user_id,remote_user_id,completed_at,updated_at,created_at,result,content_external_reference,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,time_spent,certificate_url"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_create_user_completion:
    speakeasy-default-lms-create-user-completion:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "completed_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "learning_object_external_reference": "learning-content-123", "time_spent": "PT1H30M45S"}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_user_completion:
    speakeasy-default-lms-get-user-completion:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S", "certificate_url": "https://example.com/certificate/12345"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_delete_user_completion:
    speakeasy-default-lms-delete-user-completion:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_completions:
    speakeasy-default-lms-list-completions:
      parameters:
        query:
          fields: "id,remote_id,external_id,remote_external_id,external_reference,content_id,remote_content_id,course_id,remote_course_id,user_id,remote_user_id,completed_at,updated_at,created_at,result,content_external_reference,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,time_spent,certificate_url"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_completion:
    speakeasy-default-lms-get-completion:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S", "certificate_url": "https://example.com/certificate/12345"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_category:
    speakeasy-default-lms-get-category:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active,hierarchy,level,language"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_categories:
    speakeasy-default-lms-list-categories:
      parameters:
        query:
          fields: "id,remote_id,name,active,hierarchy,level,language"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_users:
    speakeasy-default-lms-list-users:
      parameters:
        query:
          fields: "id,remote_id,external_reference,active,email,phone_number,created_at,updated_at,name"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_user:
    speakeasy-default-lms-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,active,email,phone_number,created_at,updated_at,name"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "al60043", "name": "John Dew", "email": "john@dew.com", "phone_number": "+1234567890", "active": true, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_skill:
    speakeasy-default-lms-get-skill:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active,hierarchy,language"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_skills:
    speakeasy-default-lms-list-skills:
      parameters:
        query:
          fields: "id,remote_id,name,active,hierarchy,language"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_assignments:
    speakeasy-default-lms-list-assignments:
      parameters:
        query:
          fields: "id,remote_id,external_reference,user_id,remote_user_id,course_id,remote_course_id,updated_at,created_at,due_date,status,progress,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,certificate_url,result,completed_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          user_id: "c28xyrc55866bvuv"
          remote_user_id: "e3cb75bf-aa84-466e-a6c1-b8322b257a48"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_assignment:
    speakeasy-default-lms-get-assignment:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "progress": 40, "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "due_date": "2021-07-21T14:00:00.000Z", "status": {"value": "in_progress"}, "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "certificate_url": "https://example.com/certificate/12345", "completed_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_users:
    speakeasy-default-iam-list-users:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,name,primary_email_address,username,roles,groups,status,avatar,is_bot_user,last_active_at,last_login_at,created_at,updated_at,multi_factor_enabled"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "roles,groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "primary_email_address": "han@stackone.com", "first_name": "Han", "last_name": "Solo", "name": "Han Solo", "username": "hansolo1977", "is_bot_user": true, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "status": {"value": "enabled"}, "last_active_at": "2021-01-01T01:01:01.000Z", "last_login_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "multi_factor_enabled": [{"value": "totp"}], "avatar": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_user:
    speakeasy-default-iam-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,name,primary_email_address,username,roles,groups,status,avatar,is_bot_user,last_active_at,last_login_at,created_at,updated_at,multi_factor_enabled"
          expand: "roles,groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "primary_email_address": "han@stackone.com", "first_name": "Han", "last_name": "Solo", "name": "Han Solo", "username": "hansolo1977", "is_bot_user": true, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "status": {"value": "enabled"}, "last_active_at": "2021-01-01T01:01:01.000Z", "last_login_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "multi_factor_enabled": [{"value": "totp"}], "avatar": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_delete_user:
    speakeasy-default-iam-delete-user:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_update_user:
    speakeasy-default-iam-update-user:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"primary_email_address": "han@stackone.com", "first_name": "Han", "last_name": "Solo", "name": "Han Solo", "username": "hansolo1977", "is_bot_user": true, "status": {"value": "enabled"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_roles:
    speakeasy-default-iam-list-roles:
      parameters:
        query:
          fields: "id,remote_id,name,type,policies,description,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "policies"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_role:
    speakeasy-default-iam-get-role:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,policies,description,created_at,updated_at"
          expand: "policies"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_groups:
    speakeasy-default-iam-list-groups:
      parameters:
        query:
          fields: "id,remote_id,parent_id,remote_parent_id,name,description,roles,type,created_at,updated_at"
          filter: null
          expand: "roles"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": null, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_group:
    speakeasy-default-iam-get-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,parent_id,remote_parent_id,name,description,roles,type,created_at,updated_at"
          expand: "roles"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_policies:
    speakeasy-default-iam-list-policies:
      parameters:
        query:
          fields: "id,remote_id,name,permissions,description,created_at,updated_at"
          filter: null
          expand: "permissions"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_policy:
    speakeasy-default-iam-get-policy:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,permissions,description,created_at,updated_at"
          expand: "permissions"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_contacts:
    speakeasy-default-crm-list-contacts:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,remote_deal_ids,account_ids,remote_account_ids,custom_fields,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_create_contact:
    speakeasy-default-crm-create-contact:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "account_ids": ["account-123", "account-456"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_contact:
    speakeasy-default-crm-get-contact:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,remote_deal_ids,account_ids,remote_account_ids,custom_fields,created_at,updated_at"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_update_contact:
    speakeasy-default-crm-update-contact:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "account_ids": ["account-123", "account-456"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_accounts:
    speakeasy-default-crm-list-accounts:
      parameters:
        query:
          fields: "id,remote_id,owner_id,remote_owner_id,name,description,industries,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "industries": ["Information Technology", "Airlines & Airports", "Personal Care & Household Products"], "addresses": null, "phone_numbers": ["+1123425334"], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_account:
    speakeasy-default-crm-get-account:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,owner_id,remote_owner_id,name,description,industries,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "industries": ["Information Technology", "Airlines & Airports", "Personal Care & Household Products"], "addresses": [{"country": {"value": "GB", "source_value": "GB"}, "location_type": {"value": "home", "source_value": "Home"}}], "phone_numbers": ["+1123425334"], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_lists:
    speakeasy-default-crm-list-lists:
      parameters:
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "items": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "type": {"value": "contacts", "source_value": "Contacts"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_list:
    speakeasy-default-crm-get-list:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "items": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "type": {"value": "contacts", "source_value": "Contacts"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_contact_custom_field_definitions:
    speakeasy-default-crm-list-contact-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_contact_custom_field_definition:
    speakeasy-default-crm-get-contact-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_email_templates:
    speakeasy-default-marketing-list-email-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_email_template:
    speakeasy-default-marketing-create-email-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": null}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_email_template:
    speakeasy-default-marketing-get-email-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_email_template:
    speakeasy-default-marketing-update-email-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_in_app_templates:
    speakeasy-default-marketing-list-in-app-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_in_app_template:
    speakeasy-default-marketing-create-in-app-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_in_app_template:
    speakeasy-default-marketing-get-in-app-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_in_app_template:
    speakeasy-default-marketing-update-in-app-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_sms_templates:
    speakeasy-default-marketing-list-sms-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_sms_template:
    speakeasy-default-marketing-create-sms-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_sms_template:
    speakeasy-default-marketing-get-sms-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": null}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_sms_template:
    speakeasy-default-marketing-update-sms-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_omni_channel_templates:
    speakeasy-default-marketing-list-omni-channel-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_omni_channel_template:
    speakeasy-default-marketing-create-omni-channel-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_omni_channel_template:
    speakeasy-default-marketing-get-omni-channel-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_omni_channel_template:
    speakeasy-default-marketing-update-omni-channel-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_push_templates:
    speakeasy-default-marketing-list-push-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_push_template:
    speakeasy-default-marketing-create-push-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_push_template:
    speakeasy-default-marketing-get-push-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": null}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_push_template:
    speakeasy-default-marketing-update-push-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_campaigns:
    speakeasy-default-marketing-list-campaigns:
      parameters:
        query:
          fields: "id,remote_id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_campaign:
    speakeasy-default-marketing-get-campaign:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "schedule_type": null, "status": {"value": "draft", "source_value": "Email"}, "channels": [{"value": "sms", "source_value": "SMS"}], "first_sent_at": "2021-01-01T01:01:01.000Z", "last_sent_at": "2021-01-01T01:01:01.000Z", "messages": [{"id": "message-id-1", "name": "SMS Message", "message_type": {"value": "sms"}, "message_content": {"body": "This is an example SMS body.", "from": "1-555-123-4567"}}, {"id": "message-id-2", "name": "Email Message", "message_type": {"value": "email"}, "message_content": {"subject": "Example Email Subject", "body": "<h1>This is an example</h1>\n            <p>email body</p>", "from": "Jane Smith", "reply-to": "reply@example.com", "preheader": "This is the preheader of the email."}}, {"id": "message-id-3", "name": "iOS Push Message", "message_type": {"value": "ios_push"}, "message_content": {"body": "This is an example push notification body."}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_content_blocks:
    speakeasy-default-marketing-list-content-blocks:
      parameters:
        query:
          fields: "id,remote_id,name,type,content,status,tags,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_content_block:
    speakeasy-default-marketing-create-content-block:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"type": {"value": "html", "source_value": "text"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_content_block:
    speakeasy-default-marketing-get-content-block:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,content,status,tags,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "html", "source_value": "text"}, "status": {"value": "live", "source_value": "active"}, "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_content_block:
    speakeasy-default-marketing-update-content-block:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"type": {"value": "html", "source_value": "text"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_platform_logs:
    speakeasy-default-stackone-list-platform-logs:
      parameters:
        query:
          order_by: "duration"
          order_direction: "asc"
          filter: {"account_ids": "45355976281015164504,45355976281015164505", "start_date": "2020-01-01T00:00:00.000Z", "end_date": "2020-01-01T00:00:00.000Z", "request_ids": "adbf752f-6457-4ddd-89b3-98ae2252b83b,adbf752f-6457-4ddd-89b3-98ae2252b83c", "source_types": "DASHBOARD,SYNTHETIC_WEBHOOK", "http_methods": "GET,POST", "categories": "hris,ats", "resources": "employees,users", "actions": "download,upload", "status_codes": "200,400", "success": true, "order_by": "eventDatetime", "order_direction": "asc"}
      responses:
        "200":
          application/json: {"data": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "event_datetime": "2021-01-01T00:00:00Z", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "source_type": "DASHBOARD", "source_value": "ACCOUNT_TESTER", "source_id": "1234567890", "source_ip": "192.168.1.1", "category": "hris"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_mcp_get:
    speakeasy-default-stackone-mcp-get:
      parameters:
        header:
          x-account-id: "<id>"
          mcp-session-id: "<id>"
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_mcp_post:
    initialize:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"jsonrpc": "2.0", "method": "initialize", "params": {}, "id": {}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
    toolsList:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"jsonrpc": "2.0", "method": "tools/list", "params": {}, "id": {}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
    toolsCall:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"jsonrpc": "2.0", "method": "tools/call", "params": {}, "id": {}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_mcp_delete:
    speakeasy-default-stackone-mcp-delete:
      parameters:
        header:
          x-account-id: "<id>"
          mcp-session-id: "<id>"
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_actions_meta:
    speakeasy-default-stackone-list-actions-meta:
      parameters:
        query:
          group_by: "[\"connector\"]"
          filter: {"connectors": "connector1,connector2", "account_ids": "account1,account2", "action_key": "action1"}
          include: ["operation_details"]
      responses:
        "200":
          application/json: {}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_rpc_action:
    speakeasy-default-stackone-rpc-action:
      requestBody:
        application/json: {"action": "create_employee", "input": {"query": {"param1": "value1", "param2": "value2"}, "headers": {"Content-Type": "application/json"}, "body": {"data": "example"}}}
      responses:
        "200":
          application/json: {}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_task:
    speakeasy-default-hris-update-employee-task:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"comment": "All required documents have been submitted", "status": {"value": "open"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_stages:
    speakeasy-default-ats-list-application-stages:
      parameters:
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_stage:
    speakeasy-default-ats-get-application-stage:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_job_application_stages:
    speakeasy-default-ats-list-job-application-stages:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Review", "order": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job_application_stage:
    speakeasy-default-ats-get-job-application-stage:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Review", "order": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_tickets:
    speakeasy-default-ticketing-list-tickets:
      parameters:
        query:
          fields: "id,remote_id,type,ticket_number,title,creator_id,remote_creator_id,reporters,assignees,content,parent_id,remote_parent_id,closed_at,ticket_url,status,priority,tags,projects,components,organization,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "creator_id": "user-001", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "projects": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "ticket_number": "ticket-001", "type": {"id": "001", "name": "Task", "project_id": "project-001"}, "closed_at": "2021-01-01T01:01:01.000Z", "ticket_url": "https://help.company.com/tickets/SUP-5689", "status": {"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}, "organization": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "domain": "company.com", "name": "Company"}, "components": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_create_ticket:
    speakeasy-default-ticketing-create-ticket:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "creator_id": "user-001", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "organization_id": "organization-001", "project_id": "project-001", "component_ids": "[\"component-001\",\"component-002\"]", "type": "ticket-type-001"}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_ticket:
    speakeasy-default-ticketing-get-ticket:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,type,ticket_number,title,creator_id,remote_creator_id,reporters,assignees,content,parent_id,remote_parent_id,closed_at,ticket_url,status,priority,tags,projects,components,organization,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "creator_id": "user-001", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "projects": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "ticket_number": "ticket-001", "type": null, "closed_at": "2021-01-01T01:01:01.000Z", "ticket_url": "https://help.company.com/tickets/SUP-5689", "status": {"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}, "organization": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "domain": "company.com", "name": "Company"}, "components": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_update_ticket:
    speakeasy-default-ticketing-update-ticket:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "project_id": "project-001", "component_ids": "[\"component-001\",\"component-002\"]", "status": {"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_users:
    speakeasy-default-ticketing-list-users:
      parameters:
        query:
          fields: "id,remote_id,type,name,primary_email,primary_phone,username,active,first_name,last_name,customer_account_reference,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": null, "name": "John Doe", "primary_email": "john.doe@example.com", "primary_phone": "555-5555-5555", "username": "johndoe", "active": true, "first_name": "John", "last_name": "Doe", "customer_account_reference": "JohnDoe123", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_user:
    speakeasy-default-ticketing-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,type,name,primary_email,primary_phone,username,active,first_name,last_name,customer_account_reference,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "agent", "source_value": "Live"}, "name": "John Doe", "primary_email": "john.doe@example.com", "primary_phone": "555-5555-5555", "username": "johndoe", "active": true, "first_name": "John", "last_name": "Doe", "customer_account_reference": "JohnDoe123", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_comments:
    speakeasy-default-ticketing-list-comments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,content,user_id,remote_user_id,internal,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "internal": false, "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_comment:
    speakeasy-default-ticketing-get-comment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,content,user_id,remote_user_id,internal,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "internal": false, "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_download_ticketing_attachment:
    speakeasy-default-ticketing-download-ticketing-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          '*/*': "0xbefc65C716"
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_attachments:
    speakeasy-default-ticketing-list-attachments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,user_id,remote_user_id,file_name,file_format,file_url,size,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "file_name": "file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "file_url": "https://example.com/files/screenshot.png", "size": 1024, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_attachment:
    speakeasy-default-ticketing-get-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,user_id,remote_user_id,file_name,file_format,file_url,size,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "file_name": "file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "file_url": "https://example.com/files/screenshot.png", "size": 1024, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_ticket_types:
    speakeasy-default-ticketing-list-ticket-types:
      parameters:
        query:
          fields: "id,remote_id,name,project_id,remote_project_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "name": "Task", "project_id": "project-001"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_ticket_type:
    speakeasy-default-ticketing-get-ticket-type:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,project_id,remote_project_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "001", "name": "Task", "project_id": "project-001"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_projects:
    speakeasy-default-ticketing-list-projects:
      parameters:
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,name,description,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_project:
    speakeasy-default-ticketing-get-project:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,name,description,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_project_components:
    speakeasy-default-ticketing-list-project-components:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,project_id,remote_project_id,name,description,created_at,updated_at"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_project_component:
    speakeasy-default-ticketing-get-project-component:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,project_id,remote_project_id,name,description,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_project_ticket_types:
    speakeasy-default-ticketing-list-project-ticket-types:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,project_id,remote_project_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "name": "Task", "project_id": "project-001"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_ticket_statuses:
    speakeasy-default-ticketing-list-ticket-statuses:
      parameters:
        path:
          id: "<id>"
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_download_file:
    speakeasy-default-documents-download-file:
      parameters:
        path:
          id: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          '*/*': "0x528fac6dda"
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_upload_file:
    speakeasy-default-documents-upload-file:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "category": {"value": "reports, resumes", "source_value": "550e8400-e29b-41d4-a716-446655440000, CUSTOM_CATEGORY_NAME"}, "confidential": {"value": "true", "source_value": "public"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Employee created successfully", "timestamp": "2021-01-01T01:01:01.000Z", "provider_errors": [{"status": 400, "url": "https://api.someprovider.com/v1/endpoint", "raw": {}, "headers": {}}], "unified_warnings": [{"message": "The provided field type is not supported in the current model."}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_list_files:
    speakeasy-default-documents-list-files:
      parameters:
        query:
          fields: "id,remote_id,name,description,url,size,file_format,path,owner_id,remote_owner_id,folder_id,remote_folder_id,drive_id,remote_drive_id,export_formats,default_download_format,created_at,updated_at,has_content,has_children,all_parent_folder_ids,remote_all_parent_folder_ids"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "name": "john_doe_resume.pdf", "content": "FAQ of the project", "created_after": "2020-01-01T00:00:00.000Z", "drive_id": "1234567890", "folder_id": "1234567890"}
          folder_id: "1234567890"
          nested_items: "true"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_get_file:
    speakeasy-default-documents-get-file:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,url,size,file_format,path,owner_id,remote_owner_id,folder_id,remote_folder_id,drive_id,remote_drive_id,export_formats,default_download_format,created_at,updated_at,has_content,has_children,all_parent_folder_ids,remote_all_parent_folder_ids"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "description": "This is the description associated to the file.", "size": 1024, "url": "https://drive.google.com/file/d/nd8932h9d/view", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "path": "/path/to/file", "owner_id": "c28xyrc55866bvuv", "export_formats": ["application/pdf"], "default_download_format": "application/pdf", "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "folder_id": "c28xyrc55866bvuv", "remote_folder_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "drive_id": "c28xyrc55866bvuv", "remote_drive_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z", "has_content": true, "has_children": true, "all_parent_folder_ids": ["0123456789"]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_list_folders:
    speakeasy-default-documents-list-folders:
      parameters:
        query:
          fields: "id,remote_id,name,description,url,size,path,owner_id,remote_owner_id,parent_folder_id,remote_parent_folder_id,drive_id,remote_drive_id,created_at,updated_at,has_content,has_children,is_root,all_parent_folder_ids,remote_all_parent_folder_ids"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "drive_id": "1234567890", "folder_id": "1234567890"}
          folder_id: "1234567890"
          nested_items: "true"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "description": "This is the description associated to the folder.", "size": 1024, "url": "https://drive.google.com/folder/d/nd8932h9d/view", "path": "/path/to/folder", "owner_id": "c28xyrc55866bvuv", "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "parent_folder_id": "c28xyrc55866bvuv", "remote_parent_folder_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "drive_id": "c28xyrc55866bvuv", "remote_drive_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z", "has_content": true, "has_children": true, "is_root": true, "all_parent_folder_ids": ["0123456789"]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_get_folder:
    speakeasy-default-documents-get-folder:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,url,size,path,owner_id,remote_owner_id,parent_folder_id,remote_parent_folder_id,drive_id,remote_drive_id,created_at,updated_at,has_content,has_children,is_root,all_parent_folder_ids,remote_all_parent_folder_ids"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "description": "This is the description associated to the folder.", "size": 1024, "url": "https://drive.google.com/folder/d/nd8932h9d/view", "path": "/path/to/folder", "owner_id": "c28xyrc55866bvuv", "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "parent_folder_id": "c28xyrc55866bvuv", "remote_parent_folder_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "drive_id": "c28xyrc55866bvuv", "remote_drive_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z", "has_content": true, "has_children": true, "is_root": true, "all_parent_folder_ids": ["0123456789"]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_list_drives:
    speakeasy-default-documents-list-drives:
      parameters:
        query:
          fields: "id,remote_id,name,description,url,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "USA Development Drive", "description": "Drive with USA Development documents", "url": "https://test.sharepoint.com/Document%20Library", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_get_drive:
    speakeasy-default-documents-get-drive:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,url,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "USA Development Drive", "description": "Drive with USA Development documents", "url": "https://test.sharepoint.com/Document%20Library", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  screening_list_screening_packages:
    speakeasy-default-screening-list-screening-packages:
      parameters:
        query:
          fields: "id,remote_id,name,description"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Basic Background Check", "description": "Basic background check including identity verification and criminal records"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  screening_get_screening_package:
    speakeasy-default-screening-get-screening-package:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Basic Background Check", "description": "Basic background check including identity verification and criminal records"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  screening_webhook_screening_result:
    speakeasy-default-screening-webhook-screening-result:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"event": "screening.results.completed", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "order_id": "12345", "score": {"label": "Overall Risk", "value": "75", "min": "0", "max": "100"}, "start_date": "2023-01-01T00:00:00Z", "submission_date": "2023-01-02T00:00:00Z", "summary": "Background check completed successfully", "status": "completed", "result_url": "https://example.com/results/12345"}}
      responses:
        "200":
          application/json: {"event": "screening.results.completed", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "order_id": "12345", "score": {"label": "Overall Risk", "value": "75", "min": "0", "max": "100"}, "start_date": "2023-01-01T00:00:00Z", "submission_date": "2023-01-02T00:00:00Z", "summary": "Background check completed successfully", "status": "completed", "result_url": "https://example.com/results/12345"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  screening_create_screening_order:
    speakeasy-default-screening-create-screening-order:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "package_id": "54321", "candidate": {"first_name": "John", "last_name": "Doe", "email": "john.doe@example.com"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_conversations:
    speakeasy-default-messaging-list-conversations:
      parameters:
        query:
          fields: "id,remote_id,participants,name,private,created_at,last_message_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "participants": ["c28xIQ1", "c28xIQ2"], "name": "Project Discussion", "private": true, "created_at": "2024-03-20T10:00:00Z", "last_message_at": "2024-03-20T11:30:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_create_conversation:
    speakeasy-default-messaging-create-conversation:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"participants": ["c28xIQ1", "c28xIQ2"], "name": "Project Discussion", "private": true}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_conversation:
    speakeasy-default-messaging-get-conversation:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,participants,name,private,created_at,last_message_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "participants": ["c28xIQ1", "c28xIQ2"], "name": "Project Discussion", "private": true, "created_at": "2024-03-20T10:00:00Z", "last_message_at": "2024-03-20T11:30:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_download_messaging_attachment:
    speakeasy-default-messaging-download-messaging-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          '*/*': "0xEbaCd8aC6D"
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_attachments:
    speakeasy-default-messaging-list-attachments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,file_name,file_size,file_type"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "file_name": "document.pdf", "file_size": 1024, "file_type": "application/pdf"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_attachment:
    speakeasy-default-messaging-get-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,file_name,file_size,file_type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "file_name": "document.pdf", "file_size": 1024, "file_type": "application/pdf"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_users:
    speakeasy-default-messaging-list-users:
      parameters:
        query:
          fields: "id,remote_id,email,username,name,first_name,last_name,bot,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "email": "john.doe@example.com", "username": "johndoe", "name": "John Doe", "first_name": "John", "last_name": "Doe", "bot": false, "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_user:
    speakeasy-default-messaging-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,email,username,name,first_name,last_name,bot,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "email": "john.doe@example.com", "username": "johndoe", "name": "John Doe", "first_name": "John", "last_name": "Doe", "bot": false, "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_conversation_messages:
    speakeasy-default-messaging-list-conversation-messages:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,parent_message_id,remote_parent_message_id,attachments,author,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "content": {"html": "<p>Hello world</p>", "plain": "Hello world"}, "parent_message_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "author": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "al60043", "name": "John Dew", "email": "john@dew.com", "phone_number": "+1234567890", "active": true, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_message:
    speakeasy-default-messaging-get-message:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,parent_message_id,remote_parent_message_id,attachments,author,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "content": {"html": "<p>Hello world</p>", "plain": "Hello world"}, "parent_message_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "author": null, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_send_message:
    speakeasy-default-messaging-send-message:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": "Hello, world!", "recipient": "c28xyrc55866bvuv", "sender": "+34820398402"}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_companies:
    speakeasy-default-accounting-list-companies:
      parameters:
        query:
          fields: "id,remote_id,name,base_currency,fiscal_year_start_month,fiscal_year_start_day"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Acme Corp", "base_currency": {"value": "USD", "source_value": "USD"}, "fiscal_year_start_month": 1, "fiscal_year_start_day": 1}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company:
    speakeasy-default-accounting-get-company:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,base_currency,fiscal_year_start_month,fiscal_year_start_day"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": null}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_company_accounts:
    speakeasy-default-accounting-list-company-accounts:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,code,name,type,active"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "company_123", "code": "4000", "name": "Cash", "type": {"value": "asset", "source_value": "asset"}, "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company_account:
    speakeasy-default-accounting-get-company-account:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,code,name,type,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": null}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_company_tax_rates:
    speakeasy-default-accounting-list-company-tax-rates:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,name,code,percentage,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "company_123", "name": "VAT 7.5%", "code": "TAX001", "percentage": 7.5, "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company_tax_rate:
    speakeasy-default-accounting-get-company-tax-rate:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,name,code,percentage,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "company_123", "name": "VAT 7.5%", "code": "TAX001", "percentage": 7.5, "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_batch_create_company_journals:
    speakeasy-default-accounting-batch-create-company-journals:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"items": []}
      responses:
        "202":
          application/json: {"statusCode": 202, "message": "Batch operation accepted", "timestamp": "2021-01-01T01:01:01.000Z", "errors": [["Missing field: name"], [], []]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_company_journals:
    speakeasy-default-accounting-list-company-journals:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,reference,memo,transaction_date,status,lines,created_at,updated_at,posted_at"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "comp_123456789", "reference": "JRN-2024-001", "memo": "Monthly closing entries", "transaction_date": "2024-03-20T10:00:00Z", "status": {"value": "draft", "source_value": "draft"}, "lines": [{"id": "line_1", "account_id": "acc_123", "description": "Payment for office supplies", "amount": 10010, "tax_amount": 2002}], "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z", "posted_at": "2024-03-20T10:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_create_company_journal:
    speakeasy-default-accounting-create-company-journal:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"reference": "JRN-2024-001", "memo": "Monthly closing entries", "currency_code": {"value": "USD", "source_value": "USD"}, "exchange_rate": 1, "transaction_date": "2024-03-20T10:00:00Z", "lines": [{"account_id": "acc_123456789", "description": "Payment for office supplies", "amount": 10010, "tax_rate_id": "tax_123456789", "tax_amount": 10010}]}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company_journal:
    speakeasy-default-accounting-get-company-journal:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,reference,memo,transaction_date,status,lines,created_at,updated_at,posted_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "comp_123456789", "reference": "JRN-2024-001", "memo": "Monthly closing entries", "transaction_date": "2024-03-20T10:00:00Z", "status": {"value": "draft", "source_value": "draft"}, "lines": [{"id": "line_1", "account_id": "acc_123", "description": "Payment for office supplies", "amount": 10010, "tax_amount": 2002}], "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z", "posted_at": "2024-03-20T10:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
examplesVersion: 1.0.2
generatedTests: {}
releaseNotes: "## Php SDK Changes Detected:\n* `stackone->proxy->proxyRequest()`:  `response` **Changed** **Breaking** :warning:\n* `stackone->crm->getContactCustomFieldDefinition()`:  `response.data->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->crm->listContactCustomFieldDefinitions()`:  `response.data->[]->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->iam->getUser()`:  `response.data->avatar->path` **Removed** **Breaking** :warning:\n* `stackone->iam->listUsers()`:  `response.data->[]->avatar->path` **Removed** **Breaking** :warning:\n* `stackone->ats->updateBackgroundCheckResult()`: \n  *  `request.atsUpdateBackgroundCheckResultRequestDto->id` **Removed** **Breaking** :warning:\n* `stackone->ats->updateAssessmentsResult()`: \n  *  `request.atsUpdateCandidatesAssessmentsResultsRequestDto->id` **Removed** **Breaking** :warning:\n* `stackone->ats->getJobPosting()`:  `response.data->compensation->[]` **Changed** **Breaking** :warning:\n* `stackone->ats->listJobPostings()`:  `response.data->[]->compensation->[]` **Changed** **Breaking** :warning:\n* `stackone->ats->getJobCustomFieldDefinition()`:  `response.data->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->ats->listJobCustomFieldDefinitions()`:  `response.data->[]->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->ats->getCandidateCustomFieldDefinition()`:  `response.data->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->ats->listCandidateCustomFieldDefinitions()`:  `response.data->[]->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->ats->getApplicationCustomFieldDefinition()`:  `response.data->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->ats->listApplicationCustomFieldDefinitions()`:  `response.data->[]->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->ats->getApplicationDocument()`:  `response.data->path` **Removed** **Breaking** :warning:\n* `stackone->ats->listApplicationDocuments()`:  `response.data->[]->path` **Removed** **Breaking** :warning:\n* `stackone->ats->uploadApplicationDocument()`:  `request` **Changed** **Breaking** :warning:\n* `stackone->ats->getApplication()`:  `response.data` **Changed** **Breaking** :warning:\n* `stackone->ats->createApplication()`:  `request.atsCreateApplicationRequestDto` **Changed** **Breaking** :warning:\n* `stackone->ats->listApplications()`:  `response.data->[]` **Changed** **Breaking** :warning:\n* `stackone->hris->getTask()`:  `response.data` **Changed** **Breaking** :warning:\n* `stackone->hris->listTasks()`:  `response.data->[]->attachments->[]->path` **Removed** **Breaking** :warning:\n* `stackone->hris->getEmployeeTask()`:  `response.data` **Changed** **Breaking** :warning:\n* `stackone->hris->listEmployeeTasks()`:  `response.data->[]->attachments->[]->path` **Removed** **Breaking** :warning:\n* `stackone->hris->getTimeOffRequest()`:  `response.data` **Changed** **Breaking** :warning:\n* `stackone->hris->listTimeOffRequests()`: \n  *  `request->filter` **Changed** **Breaking** :warning:\n  *  `response.data->[]` **Changed** **Breaking** :warning:\n* `stackone->hris->getJob()`:  `response.data` **Changed** **Breaking** :warning:\n* `stackone->hris->listJobs()`:  `response.data->[]` **Changed** **Breaking** :warning:\n* `stackone->hris->updateEmployeeWorkEligibilityRequest()`: \n  *  `request.hrisCreateWorkEligibilityRequestDto->document->path` **Removed** **Breaking** :warning:\n* `stackone->hris->getEmployeesWorkEligibility()`:  `response.data->document->path` **Removed** **Breaking** :warning:\n* `stackone->hris->createEmployeeWorkEligibilityRequest()`: \n  *  `request.hrisCreateWorkEligibilityRequestDto->document->path` **Removed** **Breaking** :warning:\n* `stackone->hris->listEmployeeWorkEligibility()`:  `response.data->[]->document->path` **Removed** **Breaking** :warning:\n* `stackone->hris->getEmployeeDocument()`:  `response.data->path` **Removed** **Breaking** :warning:\n* `stackone->hris->listEmployeeDocuments()`:  `response.data->[]->path` **Removed** **Breaking** :warning:\n* `stackone->hris->getEmployeesTimeOffRequest()`:  `response.data` **Changed** **Breaking** :warning:\n* `stackone->hris->listEmployeeTimeOffRequests()`: \n  *  `request->filter` **Changed** **Breaking** :warning:\n  *  `response.data->[]` **Changed** **Breaking** :warning:\n* `stackone->hris->getEmployeeCustomFieldDefinition()`:  `response.data->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->hris->listEmployeeCustomFieldDefinitions()`:  `response.data->[]->options->[]->value` **Changed** **Breaking** :warning:\n* `stackone->hris->listEmployees()`:  `response.data->[]->customFields->[]->value->[date-time]` **Added**\n* `stackone->ticketing->listProjects()`: **Added**\n* `stackone->messaging->listConversations()`: **Added**\n* `stackone->messaging->createConversation()`: **Added**\n* `stackone->messaging->getConversation()`: **Added**\n* `stackone->messaging->downloadMessagingAttachment()`: **Added**\n* `stackone->messaging->listAttachments()`: **Added**\n* `stackone->messaging->getAttachment()`: **Added**\n* `stackone->messaging->listUsers()`: **Added**\n* `stackone->messaging->getUser()`: **Added**\n* `stackone->messaging->listConversationMessages()`: **Added**\n* `stackone->messaging->getMessage()`: **Added**\n* `stackone->messaging->sendMessage()`: **Added**\n* `stackone->accounting->listCompanies()`: **Added**\n* `stackone->accounting->getCompany()`: **Added**\n* `stackone->accounting->listCompanyAccounts()`: **Added**\n* `stackone->accounting->getCompanyAccount()`: **Added**\n* `stackone->accounting->listCompanyTaxRates()`: **Added**\n* `stackone->accounting->getCompanyTaxRate()`: **Added**\n* `stackone->accounting->batchCreateCompanyJournals()`: **Added**\n* `stackone->accounting->listCompanyJournals()`: **Added**\n* `stackone->accounting->createCompanyJournal()`: **Added**\n* `stackone->accounting->getCompanyJournal()`: **Added**\n* `stackone->ats->getAssessmentsResult()`: **Deleted** **Breaking** :warning:\n* `stackone->ats->getBackgroundCheckResult()`: **Deleted** **Breaking** :warning:\n* `stackone->accounts->listLinkedAccounts()`: \n  *  `request->originOwnerIds` **Added**\n* `stackone->screening->webhookScreeningResult()`: **Added**\n* `stackone->screening->getScreeningPackage()`: **Added**\n* `stackone->screening->listScreeningPackages()`: **Added**\n* `stackone->mcp->mcpGet()`: **Added**\n* `stackone->hris->createEmployee()`:  `request.hrisCreateEmployeeRequestDto` **Changed**\n* `stackone->hris->getEmployee()`:  `response.data->customFields->[]->value->[date-time]` **Added**\n* `stackone->hris->updateEmployee()`:  `request.hrisUpdateEmployeeRequestDto` **Changed**\n* `stackone->documents->getDrive()`: **Added**\n* `stackone->documents->listDrives()`: **Added**\n* `stackone->hris->downloadEmployeeDocument()`:  `response.status[200]` **Changed**\n* `stackone->documents->getFolder()`: **Added**\n* `stackone->documents->listFolders()`: **Added**\n* `stackone->documents->getFile()`: **Added**\n* `stackone->documents->listFiles()`: **Added**\n* `stackone->documents->uploadFile()`: **Added**\n* `stackone->documents->downloadFile()`: **Added**\n* `stackone->hris->createEmployeeEmployment()`:  `request.hrisCreateEmploymentRequestDto` **Changed**\n* `stackone->hris->updateEmployeeEmployment()`:  `request.hrisUpdateEmploymentRequestDto` **Changed**\n* `stackone->ticketing->listTicketStatuses()`: **Added**\n* `stackone->ticketing->listProjectTicketTypes()`: **Added**\n* `stackone->ticketing->getProjectComponent()`: **Added**\n* `stackone->ticketing->listProjectComponents()`: **Added**\n* `stackone->ticketing->getProject()`: **Added**\n* `stackone->screening->createScreeningOrder()`: **Added**\n* `stackone->ticketing->getTicketType()`: **Added**\n* `stackone->ticketing->listTicketTypes()`: **Added**\n* `stackone->ticketing->getAttachment()`: **Added**\n* `stackone->ticketing->listAttachments()`: **Added**\n* `stackone->ticketing->downloadTicketingAttachment()`: **Added**\n* `stackone->ats->updateApplication()`: \n  *  `request.atsUpdateApplicationRequestDto->customFields->[]->value->[date-time]` **Added**\n* `stackone->ticketing->getComment()`: **Added**\n* `stackone->ats->downloadApplicationDocument()`:  `response.status[200]` **Changed**\n* `stackone->ticketing->listComments()`: **Added**\n* `stackone->ticketing->getUser()`: **Added**\n* `stackone->ats->listCandidates()`:  `response.data->[]->customFields->[]->value->[date-time]` **Added**\n* `stackone->ats->createCandidate()`: \n  *  `request.atsCreateCandidateRequestDto->customFields->[]->value->[date-time]` **Added**\n* `stackone->ats->getCandidate()`:  `response.data->customFields->[]->value->[date-time]` **Added**\n* `stackone->ats->updateCandidate()`: \n  *  `request.atsUpdateCandidateRequestDto->customFields->[]->value->[date-time]` **Added**\n* `stackone->ticketing->listUsers()`: **Added**\n* `stackone->ticketing->updateTicket()`: **Added**\n* `stackone->ticketing->getTicket()`: **Added**\n* `stackone->ticketing->createTicket()`: **Added**\n* `stackone->ticketing->listTickets()`: **Added**\n* `stackone->ats->getJobApplicationStage()`: **Added**\n* `stackone->ats->listInterviewStages()`: **Deprecated**\n* `stackone->ats->getInterviewStage()`: **Deprecated**\n* `stackone->ats->listJobs()`:  `response.data->[]` **Changed**\n* `stackone->ats->createJob()`: \n  *  `request.atsCreateJobRequestDto->customFields->[]->value->[date-time]` **Added**\n* `stackone->ats->getJob()`:  `response.data` **Changed**\n* `stackone->ats->updateJob()`: \n  *  `request.atsUpdateJobRequestDto->customFields->[]->value->[date-time]` **Added**\n* `stackone->ats->listJobApplicationStages()`: **Added**\n* `stackone->ats->getApplicationStage()`: **Added**\n* `stackone->ats->listApplicationStages()`: **Added**\n* `stackone->hris->updateEmployeeTask()`: **Added**\n* `stackone->lms->listCourses()`: \n  *  `request->filter` **Changed**\n  *  `response.total` **Added**\n* `stackone->lms->listUserAssignments()`: \n  *  `request->filter` **Changed**\n  *  `response.data->[]` **Changed**\n* `stackone->lms->getUserAssignment()`:  `response.data` **Changed**\n* `stackone->lms->listContent()`: \n  *  `request->filter` **Changed**\n  *  `response.total` **Added**\n* `stackone->lms->listUserCompletions()`:  `response.data->[]->certificateUrl` **Added**\n* `stackone->lms->getUserCompletion()`:  `response.data->certificateUrl` **Added**\n* `stackone->lms->listCompletions()`:  `response.data->[]->certificateUrl` **Added**\n* `stackone->lms->getCompletion()`:  `response.data->certificateUrl` **Added**\n* `stackone->lms->listAssignments()`: \n  *  `request->filter` **Changed**\n  *  `response.data->[]` **Changed**\n* `stackone->lms->getAssignment()`:  `response.data` **Changed**\n* `stackone->actions->rpcAction()`: **Added**\n* `stackone->actions->listActionsMeta()`: **Added**\n* `stackone->crm->listContacts()`:  `response.data->[]->customFields->[]->value->[date-time]` **Added**\n* `stackone->crm->createContact()`: \n  *  `request.crmCreateContactRequestDto->customFields->[]->value->[date-time]` **Added**\n  *  `response.data->customFields->[]->value->[date-time]` **Added**\n* `stackone->crm->getContact()`:  `response.data->customFields->[]->value->[date-time]` **Added**\n* `stackone->crm->updateContact()`: \n  *  `request.crmCreateContactRequestDto->customFields->[]->value->[date-time]` **Added**\n  *  `response.data->customFields->[]->value->[date-time]` **Added**\n* `stackone->mcp->mcpDelete()`: **Added**\n* `stackone->mcp->mcpPost()`: **Added**\n"
